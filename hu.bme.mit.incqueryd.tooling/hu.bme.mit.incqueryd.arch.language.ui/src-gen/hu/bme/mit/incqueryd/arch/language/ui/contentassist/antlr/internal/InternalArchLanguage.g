/*
* generated by Xtext
*/
grammar InternalArchLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import hu.bme.mit.incqueryd.arch.language.services.ArchLanguageGrammarAccess;

}

@parser::members {
 
 	private ArchLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ArchLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleConfiguration
entryRuleConfiguration 
:
{ before(grammarAccess.getConfigurationRule()); }
	 ruleConfiguration
{ after(grammarAccess.getConfigurationRule()); } 
	 EOF 
;

// Rule Configuration
ruleConfiguration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigurationAccess().getGroup()); }
(rule__Configuration__Group__0)
{ after(grammarAccess.getConfigurationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecipeImport
entryRuleRecipeImport 
:
{ before(grammarAccess.getRecipeImportRule()); }
	 ruleRecipeImport
{ after(grammarAccess.getRecipeImportRule()); } 
	 EOF 
;

// Rule RecipeImport
ruleRecipeImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecipeImportAccess().getGroup()); }
(rule__RecipeImport__Group__0)
{ after(grammarAccess.getRecipeImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfrastructureMapping
entryRuleInfrastructureMapping 
:
{ before(grammarAccess.getInfrastructureMappingRule()); }
	 ruleInfrastructureMapping
{ after(grammarAccess.getInfrastructureMappingRule()); } 
	 EOF 
;

// Rule InfrastructureMapping
ruleInfrastructureMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getGroup()); }
(rule__InfrastructureMapping__Group__0)
{ after(grammarAccess.getInfrastructureMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMachine
entryRuleMachine 
:
{ before(grammarAccess.getMachineRule()); }
	 ruleMachine
{ after(grammarAccess.getMachineRule()); } 
	 EOF 
;

// Rule Machine
ruleMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMachineAccess().getIpAssignment()); }
(rule__Machine__IpAssignment)
{ after(grammarAccess.getMachineAccess().getIpAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getAlternatives()); }
(rule__Role__Alternatives)
{ after(grammarAccess.getRoleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReteRole
entryRuleReteRole 
:
{ before(grammarAccess.getReteRoleRule()); }
	 ruleReteRole
{ after(grammarAccess.getReteRoleRule()); } 
	 EOF 
;

// Rule ReteRole
ruleReteRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReteRoleAccess().getNodeRecipeAssignment()); }
(rule__ReteRole__NodeRecipeAssignment)
{ after(grammarAccess.getReteRoleAccess().getNodeRecipeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCacheRole
entryRuleCacheRole 
:
{ before(grammarAccess.getCacheRoleRule()); }
	 ruleCacheRole
{ after(grammarAccess.getCacheRoleRule()); } 
	 EOF 
;

// Rule CacheRole
ruleCacheRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCacheRoleAccess().getGroup()); }
(rule__CacheRole__Group__0)
{ after(grammarAccess.getCacheRoleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Role__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getReteRoleParserRuleCall_0()); }
	ruleReteRole
{ after(grammarAccess.getRoleAccess().getReteRoleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRoleAccess().getCacheRoleParserRuleCall_1()); }
	ruleCacheRole
{ after(grammarAccess.getRoleAccess().getCacheRoleParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Configuration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configuration__Group__0__Impl
	rule__Configuration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationAccess().getRecipeImportsAssignment_0()); }
(rule__Configuration__RecipeImportsAssignment_0)*
{ after(grammarAccess.getConfigurationAccess().getRecipeImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Configuration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configuration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationAccess().getMappingsAssignment_1()); }
(rule__Configuration__MappingsAssignment_1)*
{ after(grammarAccess.getConfigurationAccess().getMappingsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecipeImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecipeImport__Group__0__Impl
	rule__RecipeImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecipeImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeImportAccess().getRecipeKeyword_0()); }

	'recipe' 

{ after(grammarAccess.getRecipeImportAccess().getRecipeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecipeImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecipeImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecipeImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeImportAccess().getImportURIAssignment_1()); }
(rule__RecipeImport__ImportURIAssignment_1)
{ after(grammarAccess.getRecipeImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfrastructureMapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group__0__Impl
	rule__InfrastructureMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getInfrastructureMappingAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureMapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group__1__Impl
	rule__InfrastructureMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getMachineAssignment_1()); }
(rule__InfrastructureMapping__MachineAssignment_1)
{ after(grammarAccess.getInfrastructureMappingAccess().getMachineAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureMapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group__2__Impl
	rule__InfrastructureMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getInfrastructureMappingAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureMapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group__3__Impl
	rule__InfrastructureMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getRolesAssignment_3()); }
(rule__InfrastructureMapping__RolesAssignment_3)
{ after(grammarAccess.getInfrastructureMappingAccess().getRolesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureMapping__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getGroup_4()); }
(rule__InfrastructureMapping__Group_4__0)*
{ after(grammarAccess.getInfrastructureMappingAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InfrastructureMapping__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group_4__0__Impl
	rule__InfrastructureMapping__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getInfrastructureMappingAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfrastructureMapping__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfrastructureMapping__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getRolesAssignment_4_1()); }
(rule__InfrastructureMapping__RolesAssignment_4_1)
{ after(grammarAccess.getInfrastructureMappingAccess().getRolesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CacheRole__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheRole__Group__0__Impl
	rule__CacheRole__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheRole__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheRoleAccess().getCacheRoleAction_0()); }
(

)
{ after(grammarAccess.getCacheRoleAccess().getCacheRoleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CacheRole__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CacheRole__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CacheRole__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCacheRoleAccess().getCacheKeyword_1()); }

	'cache' 

{ after(grammarAccess.getCacheRoleAccess().getCacheKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Configuration__RecipeImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationAccess().getRecipeImportsRecipeImportParserRuleCall_0_0()); }
	ruleRecipeImport{ after(grammarAccess.getConfigurationAccess().getRecipeImportsRecipeImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__MappingsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationAccess().getMappingsInfrastructureMappingParserRuleCall_1_0()); }
	ruleInfrastructureMapping{ after(grammarAccess.getConfigurationAccess().getMappingsInfrastructureMappingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecipeImport__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecipeImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getRecipeImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__MachineAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getMachineMachineParserRuleCall_1_0()); }
	ruleMachine{ after(grammarAccess.getInfrastructureMappingAccess().getMachineMachineParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__RolesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getRolesRoleParserRuleCall_3_0()); }
	ruleRole{ after(grammarAccess.getInfrastructureMappingAccess().getRolesRoleParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfrastructureMapping__RolesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfrastructureMappingAccess().getRolesRoleParserRuleCall_4_1_0()); }
	ruleRole{ after(grammarAccess.getInfrastructureMappingAccess().getRolesRoleParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__IpAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getIpIPTerminalRuleCall_0()); }
	RULE_IP{ after(grammarAccess.getMachineAccess().getIpIPTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReteRole__NodeRecipeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReteRoleAccess().getNodeRecipeReteNodeRecipeCrossReference_0()); }
(
{ before(grammarAccess.getReteRoleAccess().getNodeRecipeReteNodeRecipeIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getReteRoleAccess().getNodeRecipeReteNodeRecipeIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getReteRoleAccess().getNodeRecipeReteNodeRecipeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_IP : RULE_INT '.' RULE_INT '.' RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


