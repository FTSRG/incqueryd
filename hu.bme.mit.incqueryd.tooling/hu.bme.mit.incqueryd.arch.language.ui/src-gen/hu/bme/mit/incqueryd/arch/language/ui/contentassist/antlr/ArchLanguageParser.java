/*
* generated by Xtext
*/
package hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import hu.bme.mit.incqueryd.arch.language.services.ArchLanguageGrammarAccess;

public class ArchLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private ArchLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal.InternalArchLanguageParser createParser() {
		hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal.InternalArchLanguageParser result = new hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal.InternalArchLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getReteNodeRecipeAccess().getAlternatives(), "rule__ReteNodeRecipe__Alternatives");
					put(grammarAccess.getConfigurationAccess().getGroup(), "rule__Configuration__Group__0");
					put(grammarAccess.getConfigurationAccess().getGroup_1(), "rule__Configuration__Group_1__0");
					put(grammarAccess.getConfigurationAccess().getGroup_2(), "rule__Configuration__Group_2__0");
					put(grammarAccess.getConfigurationAccess().getGroup_3(), "rule__Configuration__Group_3__0");
					put(grammarAccess.getClusterAccess().getGroup(), "rule__Cluster__Group__0");
					put(grammarAccess.getClusterAccess().getGroup_2(), "rule__Cluster__Group_2__0");
					put(grammarAccess.getClusterAccess().getGroup_3(), "rule__Cluster__Group_3__0");
					put(grammarAccess.getMachineAccess().getGroup(), "rule__Machine__Group__0");
					put(grammarAccess.getReteRecipeAccess().getGroup(), "rule__ReteRecipe__Group__0");
					put(grammarAccess.getProductionRecipeAccess().getGroup(), "rule__ProductionRecipe__Group__0");
					put(grammarAccess.getUniquenessEnforcerRecipeAccess().getGroup(), "rule__UniquenessEnforcerRecipe__Group__0");
					put(grammarAccess.getCheckRecipeAccess().getGroup(), "rule__CheckRecipe__Group__0");
					put(grammarAccess.getTrimmerRecipeAccess().getGroup(), "rule__TrimmerRecipe__Group__0");
					put(grammarAccess.getJoinRecipeAccess().getGroup(), "rule__JoinRecipe__Group__0");
					put(grammarAccess.getAntiJoinRecipeAccess().getGroup(), "rule__AntiJoinRecipe__Group__0");
					put(grammarAccess.getIndexerRecipeAccess().getGroup(), "rule__IndexerRecipe__Group__0");
					put(grammarAccess.getProjectionIndexerRecipeAccess().getGroup(), "rule__ProjectionIndexerRecipe__Group__0");
					put(grammarAccess.getMaskAccess().getGroup(), "rule__Mask__Group__0");
					put(grammarAccess.getMaskAccess().getGroup_4(), "rule__Mask__Group_4__0");
					put(grammarAccess.getInfrastructureMappingAccess().getGroup(), "rule__InfrastructureMapping__Group__0");
					put(grammarAccess.getConfigurationAccess().getClustersAssignment_1_3(), "rule__Configuration__ClustersAssignment_1_3");
					put(grammarAccess.getConfigurationAccess().getReteRecipesAssignment_2_3(), "rule__Configuration__ReteRecipesAssignment_2_3");
					put(grammarAccess.getConfigurationAccess().getMappingsAssignment_3_3(), "rule__Configuration__MappingsAssignment_3_3");
					put(grammarAccess.getClusterAccess().getReteMachinesAssignment_2_3(), "rule__Cluster__ReteMachinesAssignment_2_3");
					put(grammarAccess.getClusterAccess().getCacheMachinesAssignment_3_3(), "rule__Cluster__CacheMachinesAssignment_3_3");
					put(grammarAccess.getMachineAccess().getNameAssignment_3(), "rule__Machine__NameAssignment_3");
					put(grammarAccess.getMachineAccess().getTraceInfoAssignment_6(), "rule__Machine__TraceInfoAssignment_6");
					put(grammarAccess.getMachineAccess().getIpAssignment_9(), "rule__Machine__IpAssignment_9");
					put(grammarAccess.getReteRecipeAccess().getRecipeNodesAssignment_5(), "rule__ReteRecipe__RecipeNodesAssignment_5");
					put(grammarAccess.getProductionRecipeAccess().getTraceInfoAssignment_4(), "rule__ProductionRecipe__TraceInfoAssignment_4");
					put(grammarAccess.getProductionRecipeAccess().getParentsAssignment_8(), "rule__ProductionRecipe__ParentsAssignment_8");
					put(grammarAccess.getUniquenessEnforcerRecipeAccess().getTraceInfoAssignment_4(), "rule__UniquenessEnforcerRecipe__TraceInfoAssignment_4");
					put(grammarAccess.getUniquenessEnforcerRecipeAccess().getParentsAssignment_8(), "rule__UniquenessEnforcerRecipe__ParentsAssignment_8");
					put(grammarAccess.getCheckRecipeAccess().getTraceInfoAssignment_4(), "rule__CheckRecipe__TraceInfoAssignment_4");
					put(grammarAccess.getCheckRecipeAccess().getParentAssignment_7(), "rule__CheckRecipe__ParentAssignment_7");
					put(grammarAccess.getTrimmerRecipeAccess().getTraceInfoAssignment_4(), "rule__TrimmerRecipe__TraceInfoAssignment_4");
					put(grammarAccess.getTrimmerRecipeAccess().getMaskAssignment_7(), "rule__TrimmerRecipe__MaskAssignment_7");
					put(grammarAccess.getTrimmerRecipeAccess().getParentAssignment_10(), "rule__TrimmerRecipe__ParentAssignment_10");
					put(grammarAccess.getJoinRecipeAccess().getTraceInfoAssignment_4(), "rule__JoinRecipe__TraceInfoAssignment_4");
					put(grammarAccess.getJoinRecipeAccess().getLeftParentAssignment_7(), "rule__JoinRecipe__LeftParentAssignment_7");
					put(grammarAccess.getJoinRecipeAccess().getRightParentAssignment_10(), "rule__JoinRecipe__RightParentAssignment_10");
					put(grammarAccess.getJoinRecipeAccess().getRightParentComplementaryMaskAssignment_11(), "rule__JoinRecipe__RightParentComplementaryMaskAssignment_11");
					put(grammarAccess.getAntiJoinRecipeAccess().getTraceInfoAssignment_4(), "rule__AntiJoinRecipe__TraceInfoAssignment_4");
					put(grammarAccess.getAntiJoinRecipeAccess().getLeftParentAssignment_7(), "rule__AntiJoinRecipe__LeftParentAssignment_7");
					put(grammarAccess.getAntiJoinRecipeAccess().getRightParentAssignment_10(), "rule__AntiJoinRecipe__RightParentAssignment_10");
					put(grammarAccess.getIndexerRecipeAccess().getTraceInfoAssignment_3(), "rule__IndexerRecipe__TraceInfoAssignment_3");
					put(grammarAccess.getIndexerRecipeAccess().getMaskAssignment_6(), "rule__IndexerRecipe__MaskAssignment_6");
					put(grammarAccess.getIndexerRecipeAccess().getParentAssignment_9(), "rule__IndexerRecipe__ParentAssignment_9");
					put(grammarAccess.getProjectionIndexerRecipeAccess().getTraceInfoAssignment_3(), "rule__ProjectionIndexerRecipe__TraceInfoAssignment_3");
					put(grammarAccess.getProjectionIndexerRecipeAccess().getMaskAssignment_6(), "rule__ProjectionIndexerRecipe__MaskAssignment_6");
					put(grammarAccess.getProjectionIndexerRecipeAccess().getParentAssignment_9(), "rule__ProjectionIndexerRecipe__ParentAssignment_9");
					put(grammarAccess.getMaskAccess().getSourceArityAssignment_3(), "rule__Mask__SourceArityAssignment_3");
					put(grammarAccess.getMaskAccess().getSourceIndicesAssignment_4_3(), "rule__Mask__SourceIndicesAssignment_4_3");
					put(grammarAccess.getInfrastructureMappingAccess().getMappedElementsAssignment_4(), "rule__InfrastructureMapping__MappedElementsAssignment_4");
					put(grammarAccess.getInfrastructureMappingAccess().getTargetElementAssignment_8(), "rule__InfrastructureMapping__TargetElementAssignment_8");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal.InternalArchLanguageParser typedParser = (hu.bme.mit.incqueryd.arch.language.ui.contentassist.antlr.internal.InternalArchLanguageParser) parser;
			typedParser.entryRuleConfiguration();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ArchLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ArchLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
