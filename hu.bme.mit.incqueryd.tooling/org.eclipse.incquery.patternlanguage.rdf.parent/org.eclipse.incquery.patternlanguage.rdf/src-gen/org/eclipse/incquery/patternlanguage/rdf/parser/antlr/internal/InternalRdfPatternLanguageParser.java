package org.eclipse.incquery.patternlanguage.rdf.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.incquery.patternlanguage.rdf.services.RdfPatternLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalRdfPatternLanguageParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_RAW_IRI", "RULE_INT", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'base'", "'vocabulary'", "'prefix'", "':'", "'('", "')'", "','", "'check'", "'^^'", "'@'", "'pattern'", "'='", "'or'", "'private'", "'{'", "';'", "'}'", "'neg'", "'find'", "'+'", "'.'", "'['", "']'", "'*'", "'-'", "'true'", "'false'", "'TRUE'", "'FALSE'", "'eval'", "'count'", "'+='", "'-='", "'*='", "'/='", "'%='", "'<'", "'>'", "'>='", "'||'", "'&&'", "'=='", "'!='", "'==='", "'!=='", "'instanceof'", "'->'", "'..<'", "'..'", "'=>'", "'<>'", "'?:'", "'**'", "'/'", "'%'", "'!'", "'as'", "'++'", "'--'", "'::'", "'?.'", "'#'", "'|'", "'if'", "'else'", "'switch'", "'default'", "'case'", "'for'", "'while'", "'do'", "'var'", "'val'", "'extends'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'", "'&'"
    };
    public static final int RULE_HEX=8;
    public static final int T__50=50;
    public static final int RULE_RAW_IRI=6;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=10;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=11;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=12;
    public static final int RULE_ANY_OTHER=13;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalRdfPatternLanguageParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalRdfPatternLanguageParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalRdfPatternLanguageParser.tokenNames; }
    public String getGrammarFileName() { return "InternalRdfPatternLanguage.g"; }



     	private RdfPatternLanguageGrammarAccess grammarAccess;

        public InternalRdfPatternLanguageParser(TokenStream input, RdfPatternLanguageGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "RdfPatternModel";
       	}

       	@Override
       	protected RdfPatternLanguageGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleRdfPatternModel"
    // InternalRdfPatternLanguage.g:65:1: entryRuleRdfPatternModel returns [EObject current=null] : iv_ruleRdfPatternModel= ruleRdfPatternModel EOF ;
    public final EObject entryRuleRdfPatternModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRdfPatternModel = null;


        try {
            // InternalRdfPatternLanguage.g:65:56: (iv_ruleRdfPatternModel= ruleRdfPatternModel EOF )
            // InternalRdfPatternLanguage.g:66:2: iv_ruleRdfPatternModel= ruleRdfPatternModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRdfPatternModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRdfPatternModel=ruleRdfPatternModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRdfPatternModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRdfPatternModel"


    // $ANTLR start "ruleRdfPatternModel"
    // InternalRdfPatternLanguage.g:72:1: ruleRdfPatternModel returns [EObject current=null] : ( () ( (lv_vocabularies_1_0= ruleVocabulary ) )* (otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) ) )? ( (lv_iriPrefixes_4_0= ruleIriPrefix ) )* ( (lv_patterns_5_0= rulePattern ) )* ) ;
    public final EObject ruleRdfPatternModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_vocabularies_1_0 = null;

        AntlrDatatypeRuleToken lv_baseIriValue_3_0 = null;

        EObject lv_iriPrefixes_4_0 = null;

        EObject lv_patterns_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:78:2: ( ( () ( (lv_vocabularies_1_0= ruleVocabulary ) )* (otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) ) )? ( (lv_iriPrefixes_4_0= ruleIriPrefix ) )* ( (lv_patterns_5_0= rulePattern ) )* ) )
            // InternalRdfPatternLanguage.g:79:2: ( () ( (lv_vocabularies_1_0= ruleVocabulary ) )* (otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) ) )? ( (lv_iriPrefixes_4_0= ruleIriPrefix ) )* ( (lv_patterns_5_0= rulePattern ) )* )
            {
            // InternalRdfPatternLanguage.g:79:2: ( () ( (lv_vocabularies_1_0= ruleVocabulary ) )* (otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) ) )? ( (lv_iriPrefixes_4_0= ruleIriPrefix ) )* ( (lv_patterns_5_0= rulePattern ) )* )
            // InternalRdfPatternLanguage.g:80:3: () ( (lv_vocabularies_1_0= ruleVocabulary ) )* (otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) ) )? ( (lv_iriPrefixes_4_0= ruleIriPrefix ) )* ( (lv_patterns_5_0= rulePattern ) )*
            {
            // InternalRdfPatternLanguage.g:80:3: ()
            // InternalRdfPatternLanguage.g:81:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRdfPatternModelAccess().getRdfPatternModelAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:87:3: ( (lv_vocabularies_1_0= ruleVocabulary ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==15) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:88:4: (lv_vocabularies_1_0= ruleVocabulary )
            	    {
            	    // InternalRdfPatternLanguage.g:88:4: (lv_vocabularies_1_0= ruleVocabulary )
            	    // InternalRdfPatternLanguage.g:89:5: lv_vocabularies_1_0= ruleVocabulary
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRdfPatternModelAccess().getVocabulariesVocabularyParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_vocabularies_1_0=ruleVocabulary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRdfPatternModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"vocabularies",
            	      						lv_vocabularies_1_0,
            	      						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.Vocabulary");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalRdfPatternLanguage.g:106:3: (otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==14) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalRdfPatternLanguage.g:107:4: otherlv_2= 'base' ( (lv_baseIriValue_3_0= ruleRawIri ) )
                    {
                    otherlv_2=(Token)match(input,14,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRdfPatternModelAccess().getBaseKeyword_2_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:111:4: ( (lv_baseIriValue_3_0= ruleRawIri ) )
                    // InternalRdfPatternLanguage.g:112:5: (lv_baseIriValue_3_0= ruleRawIri )
                    {
                    // InternalRdfPatternLanguage.g:112:5: (lv_baseIriValue_3_0= ruleRawIri )
                    // InternalRdfPatternLanguage.g:113:6: lv_baseIriValue_3_0= ruleRawIri
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRdfPatternModelAccess().getBaseIriValueRawIriParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_baseIriValue_3_0=ruleRawIri();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRdfPatternModelRule());
                      						}
                      						set(
                      							current,
                      							"baseIriValue",
                      							lv_baseIriValue_3_0,
                      							"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.RawIri");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:131:3: ( (lv_iriPrefixes_4_0= ruleIriPrefix ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==16) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:132:4: (lv_iriPrefixes_4_0= ruleIriPrefix )
            	    {
            	    // InternalRdfPatternLanguage.g:132:4: (lv_iriPrefixes_4_0= ruleIriPrefix )
            	    // InternalRdfPatternLanguage.g:133:5: lv_iriPrefixes_4_0= ruleIriPrefix
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRdfPatternModelAccess().getIriPrefixesIriPrefixParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_iriPrefixes_4_0=ruleIriPrefix();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRdfPatternModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"iriPrefixes",
            	      						lv_iriPrefixes_4_0,
            	      						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.IriPrefix");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            // InternalRdfPatternLanguage.g:150:3: ( (lv_patterns_5_0= rulePattern ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( ((LA4_0>=23 && LA4_0<=24)||LA4_0==27) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:151:4: (lv_patterns_5_0= rulePattern )
            	    {
            	    // InternalRdfPatternLanguage.g:151:4: (lv_patterns_5_0= rulePattern )
            	    // InternalRdfPatternLanguage.g:152:5: lv_patterns_5_0= rulePattern
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRdfPatternModelAccess().getPatternsPatternParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_patterns_5_0=rulePattern();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRdfPatternModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"patterns",
            	      						lv_patterns_5_0,
            	      						"org.eclipse.incquery.patternlanguage.PatternLanguage.Pattern");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRdfPatternModel"


    // $ANTLR start "entryRuleVocabulary"
    // InternalRdfPatternLanguage.g:173:1: entryRuleVocabulary returns [EObject current=null] : iv_ruleVocabulary= ruleVocabulary EOF ;
    public final EObject entryRuleVocabulary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVocabulary = null;


        try {
            // InternalRdfPatternLanguage.g:173:51: (iv_ruleVocabulary= ruleVocabulary EOF )
            // InternalRdfPatternLanguage.g:174:2: iv_ruleVocabulary= ruleVocabulary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVocabularyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVocabulary=ruleVocabulary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVocabulary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVocabulary"


    // $ANTLR start "ruleVocabulary"
    // InternalRdfPatternLanguage.g:180:1: ruleVocabulary returns [EObject current=null] : (otherlv_0= 'vocabulary' ( (lv_location_1_0= ruleRawIri ) ) ) ;
    public final EObject ruleVocabulary() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_location_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:186:2: ( (otherlv_0= 'vocabulary' ( (lv_location_1_0= ruleRawIri ) ) ) )
            // InternalRdfPatternLanguage.g:187:2: (otherlv_0= 'vocabulary' ( (lv_location_1_0= ruleRawIri ) ) )
            {
            // InternalRdfPatternLanguage.g:187:2: (otherlv_0= 'vocabulary' ( (lv_location_1_0= ruleRawIri ) ) )
            // InternalRdfPatternLanguage.g:188:3: otherlv_0= 'vocabulary' ( (lv_location_1_0= ruleRawIri ) )
            {
            otherlv_0=(Token)match(input,15,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVocabularyAccess().getVocabularyKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:192:3: ( (lv_location_1_0= ruleRawIri ) )
            // InternalRdfPatternLanguage.g:193:4: (lv_location_1_0= ruleRawIri )
            {
            // InternalRdfPatternLanguage.g:193:4: (lv_location_1_0= ruleRawIri )
            // InternalRdfPatternLanguage.g:194:5: lv_location_1_0= ruleRawIri
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVocabularyAccess().getLocationRawIriParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_location_1_0=ruleRawIri();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVocabularyRule());
              					}
              					set(
              						current,
              						"location",
              						lv_location_1_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.RawIri");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVocabulary"


    // $ANTLR start "entryRuleIriPrefix"
    // InternalRdfPatternLanguage.g:215:1: entryRuleIriPrefix returns [EObject current=null] : iv_ruleIriPrefix= ruleIriPrefix EOF ;
    public final EObject entryRuleIriPrefix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIriPrefix = null;


        try {
            // InternalRdfPatternLanguage.g:215:50: (iv_ruleIriPrefix= ruleIriPrefix EOF )
            // InternalRdfPatternLanguage.g:216:2: iv_ruleIriPrefix= ruleIriPrefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIriPrefixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIriPrefix=ruleIriPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIriPrefix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIriPrefix"


    // $ANTLR start "ruleIriPrefix"
    // InternalRdfPatternLanguage.g:222:1: ruleIriPrefix returns [EObject current=null] : (otherlv_0= 'prefix' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_value_3_0= ruleRawIri ) ) ) ;
    public final EObject ruleIriPrefix() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:228:2: ( (otherlv_0= 'prefix' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_value_3_0= ruleRawIri ) ) ) )
            // InternalRdfPatternLanguage.g:229:2: (otherlv_0= 'prefix' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_value_3_0= ruleRawIri ) ) )
            {
            // InternalRdfPatternLanguage.g:229:2: (otherlv_0= 'prefix' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_value_3_0= ruleRawIri ) ) )
            // InternalRdfPatternLanguage.g:230:3: otherlv_0= 'prefix' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_value_3_0= ruleRawIri ) )
            {
            otherlv_0=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIriPrefixAccess().getPrefixKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:234:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:235:4: (lv_name_1_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:235:4: (lv_name_1_0= RULE_ID )
            // InternalRdfPatternLanguage.g:236:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getIriPrefixAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIriPrefixRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,17,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIriPrefixAccess().getColonKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:256:3: ( (lv_value_3_0= ruleRawIri ) )
            // InternalRdfPatternLanguage.g:257:4: (lv_value_3_0= ruleRawIri )
            {
            // InternalRdfPatternLanguage.g:257:4: (lv_value_3_0= ruleRawIri )
            // InternalRdfPatternLanguage.g:258:5: lv_value_3_0= ruleRawIri
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIriPrefixAccess().getValueRawIriParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleRawIri();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIriPrefixRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.RawIri");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIriPrefix"


    // $ANTLR start "entryRuleIri"
    // InternalRdfPatternLanguage.g:279:1: entryRuleIri returns [EObject current=null] : iv_ruleIri= ruleIri EOF ;
    public final EObject entryRuleIri() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIri = null;


        try {
            // InternalRdfPatternLanguage.g:279:44: (iv_ruleIri= ruleIri EOF )
            // InternalRdfPatternLanguage.g:280:2: iv_ruleIri= ruleIri EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIriRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIri=ruleIri();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIri; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIri"


    // $ANTLR start "ruleIri"
    // InternalRdfPatternLanguage.g:286:1: ruleIri returns [EObject current=null] : ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) ) ) | ( (lv_value_3_0= ruleRawIri ) ) ) ;
    public final EObject ruleIri() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_value_2_0=null;
        AntlrDatatypeRuleToken lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:292:2: ( ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) ) ) | ( (lv_value_3_0= ruleRawIri ) ) ) )
            // InternalRdfPatternLanguage.g:293:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) ) ) | ( (lv_value_3_0= ruleRawIri ) ) )
            {
            // InternalRdfPatternLanguage.g:293:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) ) ) | ( (lv_value_3_0= ruleRawIri ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==RULE_ID) ) {
                alt5=1;
            }
            else if ( (LA5_0==RULE_RAW_IRI) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalRdfPatternLanguage.g:294:3: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) ) )
                    {
                    // InternalRdfPatternLanguage.g:294:3: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) ) )
                    // InternalRdfPatternLanguage.g:295:4: ( (otherlv_0= RULE_ID ) ) otherlv_1= ':' ( (lv_value_2_0= RULE_ID ) )
                    {
                    // InternalRdfPatternLanguage.g:295:4: ( (otherlv_0= RULE_ID ) )
                    // InternalRdfPatternLanguage.g:296:5: (otherlv_0= RULE_ID )
                    {
                    // InternalRdfPatternLanguage.g:296:5: (otherlv_0= RULE_ID )
                    // InternalRdfPatternLanguage.g:297:6: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIriRule());
                      						}
                      					
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_0, grammarAccess.getIriAccess().getPrefixIriPrefixCrossReference_0_0_0());
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,17,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIriAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalRdfPatternLanguage.g:312:4: ( (lv_value_2_0= RULE_ID ) )
                    // InternalRdfPatternLanguage.g:313:5: (lv_value_2_0= RULE_ID )
                    {
                    // InternalRdfPatternLanguage.g:313:5: (lv_value_2_0= RULE_ID )
                    // InternalRdfPatternLanguage.g:314:6: lv_value_2_0= RULE_ID
                    {
                    lv_value_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_2_0, grammarAccess.getIriAccess().getValueIDTerminalRuleCall_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIriRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:332:3: ( (lv_value_3_0= ruleRawIri ) )
                    {
                    // InternalRdfPatternLanguage.g:332:3: ( (lv_value_3_0= ruleRawIri ) )
                    // InternalRdfPatternLanguage.g:333:4: (lv_value_3_0= ruleRawIri )
                    {
                    // InternalRdfPatternLanguage.g:333:4: (lv_value_3_0= ruleRawIri )
                    // InternalRdfPatternLanguage.g:334:5: lv_value_3_0= ruleRawIri
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIriAccess().getValueRawIriParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleRawIri();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIriRule());
                      					}
                      					set(
                      						current,
                      						"value",
                      						lv_value_3_0,
                      						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.RawIri");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIri"


    // $ANTLR start "entryRuleParameter"
    // InternalRdfPatternLanguage.g:355:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalRdfPatternLanguage.g:355:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalRdfPatternLanguage.g:356:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalRdfPatternLanguage.g:362:1: ruleParameter returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:368:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalRdfPatternLanguage.g:369:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalRdfPatternLanguage.g:369:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:370:3: (lv_name_0_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:370:3: (lv_name_0_0= RULE_ID )
            // InternalRdfPatternLanguage.g:371:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getParameterRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.eclipse.xtext.xbase.Xtype.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleConstraint"
    // InternalRdfPatternLanguage.g:390:1: entryRuleConstraint returns [EObject current=null] : iv_ruleConstraint= ruleConstraint EOF ;
    public final EObject entryRuleConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstraint = null;


        try {
            // InternalRdfPatternLanguage.g:390:51: (iv_ruleConstraint= ruleConstraint EOF )
            // InternalRdfPatternLanguage.g:391:2: iv_ruleConstraint= ruleConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstraint=ruleConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstraint"


    // $ANTLR start "ruleConstraint"
    // InternalRdfPatternLanguage.g:397:1: ruleConstraint returns [EObject current=null] : (this_PatternCompositionConstraint_0= rulePatternCompositionConstraint | this_CompareConstraint_1= ruleCompareConstraint | this_RdfClassConstraint_2= ruleRdfClassConstraint | this_RdfPropertyConstraint_3= ruleRdfPropertyConstraint | this_RdfCheckConstraint_4= ruleRdfCheckConstraint ) ;
    public final EObject ruleConstraint() throws RecognitionException {
        EObject current = null;

        EObject this_PatternCompositionConstraint_0 = null;

        EObject this_CompareConstraint_1 = null;

        EObject this_RdfClassConstraint_2 = null;

        EObject this_RdfPropertyConstraint_3 = null;

        EObject this_RdfCheckConstraint_4 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:403:2: ( (this_PatternCompositionConstraint_0= rulePatternCompositionConstraint | this_CompareConstraint_1= ruleCompareConstraint | this_RdfClassConstraint_2= ruleRdfClassConstraint | this_RdfPropertyConstraint_3= ruleRdfPropertyConstraint | this_RdfCheckConstraint_4= ruleRdfCheckConstraint ) )
            // InternalRdfPatternLanguage.g:404:2: (this_PatternCompositionConstraint_0= rulePatternCompositionConstraint | this_CompareConstraint_1= ruleCompareConstraint | this_RdfClassConstraint_2= ruleRdfClassConstraint | this_RdfPropertyConstraint_3= ruleRdfPropertyConstraint | this_RdfCheckConstraint_4= ruleRdfCheckConstraint )
            {
            // InternalRdfPatternLanguage.g:404:2: (this_PatternCompositionConstraint_0= rulePatternCompositionConstraint | this_CompareConstraint_1= ruleCompareConstraint | this_RdfClassConstraint_2= ruleRdfClassConstraint | this_RdfPropertyConstraint_3= ruleRdfPropertyConstraint | this_RdfCheckConstraint_4= ruleRdfCheckConstraint )
            int alt6=5;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalRdfPatternLanguage.g:405:3: this_PatternCompositionConstraint_0= rulePatternCompositionConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstraintAccess().getPatternCompositionConstraintParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PatternCompositionConstraint_0=rulePatternCompositionConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PatternCompositionConstraint_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:414:3: this_CompareConstraint_1= ruleCompareConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstraintAccess().getCompareConstraintParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CompareConstraint_1=ruleCompareConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CompareConstraint_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:423:3: this_RdfClassConstraint_2= ruleRdfClassConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstraintAccess().getRdfClassConstraintParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RdfClassConstraint_2=ruleRdfClassConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RdfClassConstraint_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:432:3: this_RdfPropertyConstraint_3= ruleRdfPropertyConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstraintAccess().getRdfPropertyConstraintParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RdfPropertyConstraint_3=ruleRdfPropertyConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RdfPropertyConstraint_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:441:3: this_RdfCheckConstraint_4= ruleRdfCheckConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstraintAccess().getRdfCheckConstraintParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RdfCheckConstraint_4=ruleRdfCheckConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RdfCheckConstraint_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstraint"


    // $ANTLR start "entryRuleRdfClassConstraint"
    // InternalRdfPatternLanguage.g:453:1: entryRuleRdfClassConstraint returns [EObject current=null] : iv_ruleRdfClassConstraint= ruleRdfClassConstraint EOF ;
    public final EObject entryRuleRdfClassConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRdfClassConstraint = null;


        try {
            // InternalRdfPatternLanguage.g:453:59: (iv_ruleRdfClassConstraint= ruleRdfClassConstraint EOF )
            // InternalRdfPatternLanguage.g:454:2: iv_ruleRdfClassConstraint= ruleRdfClassConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRdfClassConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRdfClassConstraint=ruleRdfClassConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRdfClassConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRdfClassConstraint"


    // $ANTLR start "ruleRdfClassConstraint"
    // InternalRdfPatternLanguage.g:460:1: ruleRdfClassConstraint returns [EObject current=null] : ( ( (lv_type_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_variable_2_0= ruleVariableReference ) ) otherlv_3= ')' ) ;
    public final EObject ruleRdfClassConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_0_0 = null;

        EObject lv_variable_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:466:2: ( ( ( (lv_type_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_variable_2_0= ruleVariableReference ) ) otherlv_3= ')' ) )
            // InternalRdfPatternLanguage.g:467:2: ( ( (lv_type_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_variable_2_0= ruleVariableReference ) ) otherlv_3= ')' )
            {
            // InternalRdfPatternLanguage.g:467:2: ( ( (lv_type_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_variable_2_0= ruleVariableReference ) ) otherlv_3= ')' )
            // InternalRdfPatternLanguage.g:468:3: ( (lv_type_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_variable_2_0= ruleVariableReference ) ) otherlv_3= ')'
            {
            // InternalRdfPatternLanguage.g:468:3: ( (lv_type_0_0= ruleTypeId ) )
            // InternalRdfPatternLanguage.g:469:4: (lv_type_0_0= ruleTypeId )
            {
            // InternalRdfPatternLanguage.g:469:4: (lv_type_0_0= ruleTypeId )
            // InternalRdfPatternLanguage.g:470:5: lv_type_0_0= ruleTypeId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRdfClassConstraintAccess().getTypeTypeIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_type_0_0=ruleTypeId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRdfClassConstraintRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.TypeId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRdfClassConstraintAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:491:3: ( (lv_variable_2_0= ruleVariableReference ) )
            // InternalRdfPatternLanguage.g:492:4: (lv_variable_2_0= ruleVariableReference )
            {
            // InternalRdfPatternLanguage.g:492:4: (lv_variable_2_0= ruleVariableReference )
            // InternalRdfPatternLanguage.g:493:5: lv_variable_2_0= ruleVariableReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRdfClassConstraintAccess().getVariableVariableReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_variable_2_0=ruleVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRdfClassConstraintRule());
              					}
              					set(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.VariableReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRdfClassConstraintAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRdfClassConstraint"


    // $ANTLR start "entryRuleRdfPropertyConstraint"
    // InternalRdfPatternLanguage.g:518:1: entryRuleRdfPropertyConstraint returns [EObject current=null] : iv_ruleRdfPropertyConstraint= ruleRdfPropertyConstraint EOF ;
    public final EObject entryRuleRdfPropertyConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRdfPropertyConstraint = null;


        try {
            // InternalRdfPatternLanguage.g:518:62: (iv_ruleRdfPropertyConstraint= ruleRdfPropertyConstraint EOF )
            // InternalRdfPatternLanguage.g:519:2: iv_ruleRdfPropertyConstraint= ruleRdfPropertyConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRdfPropertyConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRdfPropertyConstraint=ruleRdfPropertyConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRdfPropertyConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRdfPropertyConstraint"


    // $ANTLR start "ruleRdfPropertyConstraint"
    // InternalRdfPatternLanguage.g:525:1: ruleRdfPropertyConstraint returns [EObject current=null] : ( ( (lv_refType_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_source_2_0= ruleValueReference ) ) otherlv_3= ',' ( (lv_target_4_0= ruleValueReference ) ) otherlv_5= ')' ) ;
    public final EObject ruleRdfPropertyConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_refType_0_0 = null;

        EObject lv_source_2_0 = null;

        EObject lv_target_4_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:531:2: ( ( ( (lv_refType_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_source_2_0= ruleValueReference ) ) otherlv_3= ',' ( (lv_target_4_0= ruleValueReference ) ) otherlv_5= ')' ) )
            // InternalRdfPatternLanguage.g:532:2: ( ( (lv_refType_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_source_2_0= ruleValueReference ) ) otherlv_3= ',' ( (lv_target_4_0= ruleValueReference ) ) otherlv_5= ')' )
            {
            // InternalRdfPatternLanguage.g:532:2: ( ( (lv_refType_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_source_2_0= ruleValueReference ) ) otherlv_3= ',' ( (lv_target_4_0= ruleValueReference ) ) otherlv_5= ')' )
            // InternalRdfPatternLanguage.g:533:3: ( (lv_refType_0_0= ruleTypeId ) ) otherlv_1= '(' ( (lv_source_2_0= ruleValueReference ) ) otherlv_3= ',' ( (lv_target_4_0= ruleValueReference ) ) otherlv_5= ')'
            {
            // InternalRdfPatternLanguage.g:533:3: ( (lv_refType_0_0= ruleTypeId ) )
            // InternalRdfPatternLanguage.g:534:4: (lv_refType_0_0= ruleTypeId )
            {
            // InternalRdfPatternLanguage.g:534:4: (lv_refType_0_0= ruleTypeId )
            // InternalRdfPatternLanguage.g:535:5: lv_refType_0_0= ruleTypeId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRdfPropertyConstraintAccess().getRefTypeTypeIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_refType_0_0=ruleTypeId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRdfPropertyConstraintRule());
              					}
              					set(
              						current,
              						"refType",
              						lv_refType_0_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.TypeId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,18,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRdfPropertyConstraintAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:556:3: ( (lv_source_2_0= ruleValueReference ) )
            // InternalRdfPatternLanguage.g:557:4: (lv_source_2_0= ruleValueReference )
            {
            // InternalRdfPatternLanguage.g:557:4: (lv_source_2_0= ruleValueReference )
            // InternalRdfPatternLanguage.g:558:5: lv_source_2_0= ruleValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRdfPropertyConstraintAccess().getSourceValueReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_source_2_0=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRdfPropertyConstraintRule());
              					}
              					set(
              						current,
              						"source",
              						lv_source_2_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRdfPropertyConstraintAccess().getCommaKeyword_3());
              		
            }
            // InternalRdfPatternLanguage.g:579:3: ( (lv_target_4_0= ruleValueReference ) )
            // InternalRdfPatternLanguage.g:580:4: (lv_target_4_0= ruleValueReference )
            {
            // InternalRdfPatternLanguage.g:580:4: (lv_target_4_0= ruleValueReference )
            // InternalRdfPatternLanguage.g:581:5: lv_target_4_0= ruleValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRdfPropertyConstraintAccess().getTargetValueReferenceParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_target_4_0=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRdfPropertyConstraintRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_4_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getRdfPropertyConstraintAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRdfPropertyConstraint"


    // $ANTLR start "entryRuleTypeId"
    // InternalRdfPatternLanguage.g:606:1: entryRuleTypeId returns [EObject current=null] : iv_ruleTypeId= ruleTypeId EOF ;
    public final EObject entryRuleTypeId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeId = null;


        try {
            // InternalRdfPatternLanguage.g:606:47: (iv_ruleTypeId= ruleTypeId EOF )
            // InternalRdfPatternLanguage.g:607:2: iv_ruleTypeId= ruleTypeId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeId=ruleTypeId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeId"


    // $ANTLR start "ruleTypeId"
    // InternalRdfPatternLanguage.g:613:1: ruleTypeId returns [EObject current=null] : (this_Iri_0= ruleIri | this_Label_1= ruleLabel ) ;
    public final EObject ruleTypeId() throws RecognitionException {
        EObject current = null;

        EObject this_Iri_0 = null;

        EObject this_Label_1 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:619:2: ( (this_Iri_0= ruleIri | this_Label_1= ruleLabel ) )
            // InternalRdfPatternLanguage.g:620:2: (this_Iri_0= ruleIri | this_Label_1= ruleLabel )
            {
            // InternalRdfPatternLanguage.g:620:2: (this_Iri_0= ruleIri | this_Label_1= ruleLabel )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID||LA7_0==RULE_RAW_IRI) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_STRING) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalRdfPatternLanguage.g:621:3: this_Iri_0= ruleIri
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeIdAccess().getIriParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Iri_0=ruleIri();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Iri_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:630:3: this_Label_1= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeIdAccess().getLabelParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Label_1=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Label_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeId"


    // $ANTLR start "entryRuleLabel"
    // InternalRdfPatternLanguage.g:642:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalRdfPatternLanguage.g:642:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalRdfPatternLanguage.g:643:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalRdfPatternLanguage.g:649:1: ruleLabel returns [EObject current=null] : ( (lv_label_0_0= RULE_STRING ) ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_label_0_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:655:2: ( ( (lv_label_0_0= RULE_STRING ) ) )
            // InternalRdfPatternLanguage.g:656:2: ( (lv_label_0_0= RULE_STRING ) )
            {
            // InternalRdfPatternLanguage.g:656:2: ( (lv_label_0_0= RULE_STRING ) )
            // InternalRdfPatternLanguage.g:657:3: (lv_label_0_0= RULE_STRING )
            {
            // InternalRdfPatternLanguage.g:657:3: (lv_label_0_0= RULE_STRING )
            // InternalRdfPatternLanguage.g:658:4: lv_label_0_0= RULE_STRING
            {
            lv_label_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_label_0_0, grammarAccess.getLabelAccess().getLabelSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getLabelRule());
              				}
              				setWithLastConsumed(
              					current,
              					"label",
              					lv_label_0_0,
              					"org.eclipse.xtext.xbase.Xtype.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleRdfCheckConstraint"
    // InternalRdfPatternLanguage.g:677:1: entryRuleRdfCheckConstraint returns [EObject current=null] : iv_ruleRdfCheckConstraint= ruleRdfCheckConstraint EOF ;
    public final EObject entryRuleRdfCheckConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRdfCheckConstraint = null;


        try {
            // InternalRdfPatternLanguage.g:677:59: (iv_ruleRdfCheckConstraint= ruleRdfCheckConstraint EOF )
            // InternalRdfPatternLanguage.g:678:2: iv_ruleRdfCheckConstraint= ruleRdfCheckConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRdfCheckConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRdfCheckConstraint=ruleRdfCheckConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRdfCheckConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRdfCheckConstraint"


    // $ANTLR start "ruleRdfCheckConstraint"
    // InternalRdfPatternLanguage.g:684:1: ruleRdfCheckConstraint returns [EObject current=null] : (otherlv_0= 'check' otherlv_1= '(' ( (lv_expression_2_0= RULE_STRING ) ) otherlv_3= ')' ) ;
    public final EObject ruleRdfCheckConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_expression_2_0=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:690:2: ( (otherlv_0= 'check' otherlv_1= '(' ( (lv_expression_2_0= RULE_STRING ) ) otherlv_3= ')' ) )
            // InternalRdfPatternLanguage.g:691:2: (otherlv_0= 'check' otherlv_1= '(' ( (lv_expression_2_0= RULE_STRING ) ) otherlv_3= ')' )
            {
            // InternalRdfPatternLanguage.g:691:2: (otherlv_0= 'check' otherlv_1= '(' ( (lv_expression_2_0= RULE_STRING ) ) otherlv_3= ')' )
            // InternalRdfPatternLanguage.g:692:3: otherlv_0= 'check' otherlv_1= '(' ( (lv_expression_2_0= RULE_STRING ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,21,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRdfCheckConstraintAccess().getCheckKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,18,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRdfCheckConstraintAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:700:3: ( (lv_expression_2_0= RULE_STRING ) )
            // InternalRdfPatternLanguage.g:701:4: (lv_expression_2_0= RULE_STRING )
            {
            // InternalRdfPatternLanguage.g:701:4: (lv_expression_2_0= RULE_STRING )
            // InternalRdfPatternLanguage.g:702:5: lv_expression_2_0= RULE_STRING
            {
            lv_expression_2_0=(Token)match(input,RULE_STRING,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_expression_2_0, grammarAccess.getRdfCheckConstraintAccess().getExpressionSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRdfCheckConstraintRule());
              					}
              					setWithLastConsumed(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getRdfCheckConstraintAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRdfCheckConstraint"


    // $ANTLR start "entryRuleValueReference"
    // InternalRdfPatternLanguage.g:726:1: entryRuleValueReference returns [EObject current=null] : iv_ruleValueReference= ruleValueReference EOF ;
    public final EObject entryRuleValueReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueReference = null;


        try {
            // InternalRdfPatternLanguage.g:726:55: (iv_ruleValueReference= ruleValueReference EOF )
            // InternalRdfPatternLanguage.g:727:2: iv_ruleValueReference= ruleValueReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueReference=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueReference"


    // $ANTLR start "ruleValueReference"
    // InternalRdfPatternLanguage.g:733:1: ruleValueReference returns [EObject current=null] : (this_LiteralValueReference_0= ruleLiteralValueReference | this_VariableValue_1= ruleVariableValue | this_AggregatedValue_2= ruleAggregatedValue ) ;
    public final EObject ruleValueReference() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralValueReference_0 = null;

        EObject this_VariableValue_1 = null;

        EObject this_AggregatedValue_2 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:739:2: ( (this_LiteralValueReference_0= ruleLiteralValueReference | this_VariableValue_1= ruleVariableValue | this_AggregatedValue_2= ruleAggregatedValue ) )
            // InternalRdfPatternLanguage.g:740:2: (this_LiteralValueReference_0= ruleLiteralValueReference | this_VariableValue_1= ruleVariableValue | this_AggregatedValue_2= ruleAggregatedValue )
            {
            // InternalRdfPatternLanguage.g:740:2: (this_LiteralValueReference_0= ruleLiteralValueReference | this_VariableValue_1= ruleVariableValue | this_AggregatedValue_2= ruleAggregatedValue )
            int alt8=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_RAW_IRI:
            case RULE_INT:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
                {
                alt8=1;
                }
                break;
            case RULE_ID:
                {
                int LA8_2 = input.LA(2);

                if ( (LA8_2==17) ) {
                    alt8=1;
                }
                else if ( (LA8_2==EOF||(LA8_2>=19 && LA8_2<=20)||(LA8_2>=29 && LA8_2<=30)||(LA8_2>=55 && LA8_2<=56)) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }
                }
                break;
            case 44:
                {
                alt8=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalRdfPatternLanguage.g:741:3: this_LiteralValueReference_0= ruleLiteralValueReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValueReferenceAccess().getLiteralValueReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralValueReference_0=ruleLiteralValueReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LiteralValueReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:750:3: this_VariableValue_1= ruleVariableValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValueReferenceAccess().getVariableValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableValue_1=ruleVariableValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:759:3: this_AggregatedValue_2= ruleAggregatedValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValueReferenceAccess().getAggregatedValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AggregatedValue_2=ruleAggregatedValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AggregatedValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueReference"


    // $ANTLR start "entryRuleLiteralValueReference"
    // InternalRdfPatternLanguage.g:771:1: entryRuleLiteralValueReference returns [EObject current=null] : iv_ruleLiteralValueReference= ruleLiteralValueReference EOF ;
    public final EObject entryRuleLiteralValueReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValueReference = null;


        try {
            // InternalRdfPatternLanguage.g:771:62: (iv_ruleLiteralValueReference= ruleLiteralValueReference EOF )
            // InternalRdfPatternLanguage.g:772:2: iv_ruleLiteralValueReference= ruleLiteralValueReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValueReference=ruleLiteralValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValueReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValueReference"


    // $ANTLR start "ruleLiteralValueReference"
    // InternalRdfPatternLanguage.g:778:1: ruleLiteralValueReference returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_DoubleValue_1= ruleDoubleValue | this_StringValue_2= ruleStringValue | this_BoolValue_3= ruleBoolValue | this_RdfLiteral_4= ruleRdfLiteral | this_Iri_5= ruleIri ) ;
    public final EObject ruleLiteralValueReference() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_DoubleValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_BoolValue_3 = null;

        EObject this_RdfLiteral_4 = null;

        EObject this_Iri_5 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:784:2: ( (this_IntValue_0= ruleIntValue | this_DoubleValue_1= ruleDoubleValue | this_StringValue_2= ruleStringValue | this_BoolValue_3= ruleBoolValue | this_RdfLiteral_4= ruleRdfLiteral | this_Iri_5= ruleIri ) )
            // InternalRdfPatternLanguage.g:785:2: (this_IntValue_0= ruleIntValue | this_DoubleValue_1= ruleDoubleValue | this_StringValue_2= ruleStringValue | this_BoolValue_3= ruleBoolValue | this_RdfLiteral_4= ruleRdfLiteral | this_Iri_5= ruleIri )
            {
            // InternalRdfPatternLanguage.g:785:2: (this_IntValue_0= ruleIntValue | this_DoubleValue_1= ruleDoubleValue | this_StringValue_2= ruleStringValue | this_BoolValue_3= ruleBoolValue | this_RdfLiteral_4= ruleRdfLiteral | this_Iri_5= ruleIri )
            int alt9=6;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalRdfPatternLanguage.g:786:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralValueReferenceAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:795:3: this_DoubleValue_1= ruleDoubleValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralValueReferenceAccess().getDoubleValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DoubleValue_1=ruleDoubleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DoubleValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:804:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralValueReferenceAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:813:3: this_BoolValue_3= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralValueReferenceAccess().getBoolValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BoolValue_3=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:822:3: this_RdfLiteral_4= ruleRdfLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralValueReferenceAccess().getRdfLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RdfLiteral_4=ruleRdfLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RdfLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalRdfPatternLanguage.g:831:3: this_Iri_5= ruleIri
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLiteralValueReferenceAccess().getIriParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Iri_5=ruleIri();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Iri_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValueReference"


    // $ANTLR start "entryRuleRdfLiteral"
    // InternalRdfPatternLanguage.g:843:1: entryRuleRdfLiteral returns [EObject current=null] : iv_ruleRdfLiteral= ruleRdfLiteral EOF ;
    public final EObject entryRuleRdfLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRdfLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:843:51: (iv_ruleRdfLiteral= ruleRdfLiteral EOF )
            // InternalRdfPatternLanguage.g:844:2: iv_ruleRdfLiteral= ruleRdfLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRdfLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRdfLiteral=ruleRdfLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRdfLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRdfLiteral"


    // $ANTLR start "ruleRdfLiteral"
    // InternalRdfPatternLanguage.g:850:1: ruleRdfLiteral returns [EObject current=null] : ( ( (lv_lexicalForm_0_0= RULE_STRING ) ) ( (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) ) | (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) ) ) ) ;
    public final EObject ruleRdfLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_lexicalForm_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_language_4_0=null;
        EObject lv_datatype_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:856:2: ( ( ( (lv_lexicalForm_0_0= RULE_STRING ) ) ( (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) ) | (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) ) ) ) )
            // InternalRdfPatternLanguage.g:857:2: ( ( (lv_lexicalForm_0_0= RULE_STRING ) ) ( (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) ) | (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) ) ) )
            {
            // InternalRdfPatternLanguage.g:857:2: ( ( (lv_lexicalForm_0_0= RULE_STRING ) ) ( (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) ) | (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) ) ) )
            // InternalRdfPatternLanguage.g:858:3: ( (lv_lexicalForm_0_0= RULE_STRING ) ) ( (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) ) | (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) ) )
            {
            // InternalRdfPatternLanguage.g:858:3: ( (lv_lexicalForm_0_0= RULE_STRING ) )
            // InternalRdfPatternLanguage.g:859:4: (lv_lexicalForm_0_0= RULE_STRING )
            {
            // InternalRdfPatternLanguage.g:859:4: (lv_lexicalForm_0_0= RULE_STRING )
            // InternalRdfPatternLanguage.g:860:5: lv_lexicalForm_0_0= RULE_STRING
            {
            lv_lexicalForm_0_0=(Token)match(input,RULE_STRING,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_lexicalForm_0_0, grammarAccess.getRdfLiteralAccess().getLexicalFormSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRdfLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"lexicalForm",
              						lv_lexicalForm_0_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:876:3: ( (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) ) | (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==22) ) {
                alt10=1;
            }
            else if ( (LA10_0==23) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalRdfPatternLanguage.g:877:4: (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) )
                    {
                    // InternalRdfPatternLanguage.g:877:4: (otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) ) )
                    // InternalRdfPatternLanguage.g:878:5: otherlv_1= '^^' ( (lv_datatype_2_0= ruleIri ) )
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRdfLiteralAccess().getCircumflexAccentCircumflexAccentKeyword_1_0_0());
                      				
                    }
                    // InternalRdfPatternLanguage.g:882:5: ( (lv_datatype_2_0= ruleIri ) )
                    // InternalRdfPatternLanguage.g:883:6: (lv_datatype_2_0= ruleIri )
                    {
                    // InternalRdfPatternLanguage.g:883:6: (lv_datatype_2_0= ruleIri )
                    // InternalRdfPatternLanguage.g:884:7: lv_datatype_2_0= ruleIri
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRdfLiteralAccess().getDatatypeIriParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_datatype_2_0=ruleIri();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRdfLiteralRule());
                      							}
                      							set(
                      								current,
                      								"datatype",
                      								lv_datatype_2_0,
                      								"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.Iri");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:903:4: (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) )
                    {
                    // InternalRdfPatternLanguage.g:903:4: (otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) ) )
                    // InternalRdfPatternLanguage.g:904:5: otherlv_3= '@' ( (lv_language_4_0= RULE_ID ) )
                    {
                    otherlv_3=(Token)match(input,23,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRdfLiteralAccess().getCommercialAtKeyword_1_1_0());
                      				
                    }
                    // InternalRdfPatternLanguage.g:908:5: ( (lv_language_4_0= RULE_ID ) )
                    // InternalRdfPatternLanguage.g:909:6: (lv_language_4_0= RULE_ID )
                    {
                    // InternalRdfPatternLanguage.g:909:6: (lv_language_4_0= RULE_ID )
                    // InternalRdfPatternLanguage.g:910:7: lv_language_4_0= RULE_ID
                    {
                    lv_language_4_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_language_4_0, grammarAccess.getRdfLiteralAccess().getLanguageIDTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getRdfLiteralRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"language",
                      								lv_language_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.ID");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRdfLiteral"


    // $ANTLR start "entryRuleRawIri"
    // InternalRdfPatternLanguage.g:932:1: entryRuleRawIri returns [String current=null] : iv_ruleRawIri= ruleRawIri EOF ;
    public final String entryRuleRawIri() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRawIri = null;


        try {
            // InternalRdfPatternLanguage.g:932:46: (iv_ruleRawIri= ruleRawIri EOF )
            // InternalRdfPatternLanguage.g:933:2: iv_ruleRawIri= ruleRawIri EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRawIriRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRawIri=ruleRawIri();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRawIri.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRawIri"


    // $ANTLR start "ruleRawIri"
    // InternalRdfPatternLanguage.g:939:1: ruleRawIri returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_RAW_IRI_0= RULE_RAW_IRI ;
    public final AntlrDatatypeRuleToken ruleRawIri() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RAW_IRI_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:945:2: (this_RAW_IRI_0= RULE_RAW_IRI )
            // InternalRdfPatternLanguage.g:946:2: this_RAW_IRI_0= RULE_RAW_IRI
            {
            this_RAW_IRI_0=(Token)match(input,RULE_RAW_IRI,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_RAW_IRI_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_RAW_IRI_0, grammarAccess.getRawIriAccess().getRAW_IRITerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRawIri"


    // $ANTLR start "entryRulePattern"
    // InternalRdfPatternLanguage.g:956:1: entryRulePattern returns [EObject current=null] : iv_rulePattern= rulePattern EOF ;
    public final EObject entryRulePattern() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePattern = null;


        try {
            // InternalRdfPatternLanguage.g:956:48: (iv_rulePattern= rulePattern EOF )
            // InternalRdfPatternLanguage.g:957:2: iv_rulePattern= rulePattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePattern=rulePattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePattern"


    // $ANTLR start "rulePattern"
    // InternalRdfPatternLanguage.g:963:1: rulePattern returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_modifiers_1_0= ruleModifiers ) )* otherlv_2= 'pattern' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* )? otherlv_8= ')' (otherlv_9= '=' )? ( (lv_bodies_10_0= rulePatternBody ) ) (otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) ) )* ) ;
    public final EObject rulePattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_modifiers_1_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_bodies_10_0 = null;

        EObject lv_bodies_12_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:969:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_modifiers_1_0= ruleModifiers ) )* otherlv_2= 'pattern' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* )? otherlv_8= ')' (otherlv_9= '=' )? ( (lv_bodies_10_0= rulePatternBody ) ) (otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) ) )* ) )
            // InternalRdfPatternLanguage.g:970:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_modifiers_1_0= ruleModifiers ) )* otherlv_2= 'pattern' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* )? otherlv_8= ')' (otherlv_9= '=' )? ( (lv_bodies_10_0= rulePatternBody ) ) (otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) ) )* )
            {
            // InternalRdfPatternLanguage.g:970:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_modifiers_1_0= ruleModifiers ) )* otherlv_2= 'pattern' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* )? otherlv_8= ')' (otherlv_9= '=' )? ( (lv_bodies_10_0= rulePatternBody ) ) (otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) ) )* )
            // InternalRdfPatternLanguage.g:971:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_modifiers_1_0= ruleModifiers ) )* otherlv_2= 'pattern' ( (lv_name_3_0= RULE_ID ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* )? otherlv_8= ')' (otherlv_9= '=' )? ( (lv_bodies_10_0= rulePatternBody ) ) (otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) ) )*
            {
            // InternalRdfPatternLanguage.g:971:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==23) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:972:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalRdfPatternLanguage.g:972:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalRdfPatternLanguage.g:973:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPatternAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPatternRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.eclipse.incquery.patternlanguage.PatternLanguage.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            // InternalRdfPatternLanguage.g:990:3: ( (lv_modifiers_1_0= ruleModifiers ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==27) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:991:4: (lv_modifiers_1_0= ruleModifiers )
            	    {
            	    // InternalRdfPatternLanguage.g:991:4: (lv_modifiers_1_0= ruleModifiers )
            	    // InternalRdfPatternLanguage.g:992:5: lv_modifiers_1_0= ruleModifiers
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPatternAccess().getModifiersModifiersParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_modifiers_1_0=ruleModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPatternRule());
            	      					}
            	      					add(
            	      						current,
            	      						"modifiers",
            	      						lv_modifiers_1_0,
            	      						"org.eclipse.incquery.patternlanguage.PatternLanguage.Modifiers");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            otherlv_2=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPatternAccess().getPatternKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:1013:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:1014:4: (lv_name_3_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:1014:4: (lv_name_3_0= RULE_ID )
            // InternalRdfPatternLanguage.g:1015:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getPatternAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPatternRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,18,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getPatternAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalRdfPatternLanguage.g:1035:3: ( ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_ID) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1036:4: ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:1036:4: ( (lv_parameters_5_0= ruleParameter ) )
                    // InternalRdfPatternLanguage.g:1037:5: (lv_parameters_5_0= ruleParameter )
                    {
                    // InternalRdfPatternLanguage.g:1037:5: (lv_parameters_5_0= ruleParameter )
                    // InternalRdfPatternLanguage.g:1038:6: lv_parameters_5_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPatternAccess().getParametersParameterParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_parameters_5_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPatternRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_5_0,
                      							"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.Parameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:1055:4: (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==20) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:1056:5: otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) )
                    	    {
                    	    otherlv_6=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getPatternAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:1060:5: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalRdfPatternLanguage.g:1061:6: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalRdfPatternLanguage.g:1061:6: (lv_parameters_7_0= ruleParameter )
                    	    // InternalRdfPatternLanguage.g:1062:7: lv_parameters_7_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPatternAccess().getParametersParameterParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPatternRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_7_0,
                    	      								"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.Parameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,19,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getPatternAccess().getRightParenthesisKeyword_6());
              		
            }
            // InternalRdfPatternLanguage.g:1085:3: (otherlv_9= '=' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==25) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1086:4: otherlv_9= '='
                    {
                    otherlv_9=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getPatternAccess().getEqualsSignKeyword_7());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:1091:3: ( (lv_bodies_10_0= rulePatternBody ) )
            // InternalRdfPatternLanguage.g:1092:4: (lv_bodies_10_0= rulePatternBody )
            {
            // InternalRdfPatternLanguage.g:1092:4: (lv_bodies_10_0= rulePatternBody )
            // InternalRdfPatternLanguage.g:1093:5: lv_bodies_10_0= rulePatternBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPatternAccess().getBodiesPatternBodyParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_bodies_10_0=rulePatternBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPatternRule());
              					}
              					add(
              						current,
              						"bodies",
              						lv_bodies_10_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.PatternBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:1110:3: (otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==26) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:1111:4: otherlv_11= 'or' ( (lv_bodies_12_0= rulePatternBody ) )
            	    {
            	    otherlv_11=(Token)match(input,26,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_11, grammarAccess.getPatternAccess().getOrKeyword_9_0());
            	      			
            	    }
            	    // InternalRdfPatternLanguage.g:1115:4: ( (lv_bodies_12_0= rulePatternBody ) )
            	    // InternalRdfPatternLanguage.g:1116:5: (lv_bodies_12_0= rulePatternBody )
            	    {
            	    // InternalRdfPatternLanguage.g:1116:5: (lv_bodies_12_0= rulePatternBody )
            	    // InternalRdfPatternLanguage.g:1117:6: lv_bodies_12_0= rulePatternBody
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPatternAccess().getBodiesPatternBodyParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_bodies_12_0=rulePatternBody();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPatternRule());
            	      						}
            	      						add(
            	      							current,
            	      							"bodies",
            	      							lv_bodies_12_0,
            	      							"org.eclipse.incquery.patternlanguage.PatternLanguage.PatternBody");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePattern"


    // $ANTLR start "entryRuleAnnotation"
    // InternalRdfPatternLanguage.g:1139:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalRdfPatternLanguage.g:1139:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalRdfPatternLanguage.g:1140:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalRdfPatternLanguage.g:1146:1: ruleAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1152:2: ( (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')' )? ) )
            // InternalRdfPatternLanguage.g:1153:2: (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')' )? )
            {
            // InternalRdfPatternLanguage.g:1153:2: (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')' )? )
            // InternalRdfPatternLanguage.g:1154:3: otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')' )?
            {
            otherlv_0=(Token)match(input,23,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:1158:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:1159:4: (lv_name_1_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:1159:4: (lv_name_1_0= RULE_ID )
            // InternalRdfPatternLanguage.g:1160:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:1176:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')' )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==18) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1177:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleAnnotationParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:1181:4: ( (lv_parameters_3_0= ruleAnnotationParameter ) )
                    // InternalRdfPatternLanguage.g:1182:5: (lv_parameters_3_0= ruleAnnotationParameter )
                    {
                    // InternalRdfPatternLanguage.g:1182:5: (lv_parameters_3_0= ruleAnnotationParameter )
                    // InternalRdfPatternLanguage.g:1183:6: lv_parameters_3_0= ruleAnnotationParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersAnnotationParameterParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_parameters_3_0=ruleAnnotationParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_3_0,
                      							"org.eclipse.incquery.patternlanguage.PatternLanguage.AnnotationParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:1200:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==20) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:1201:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleAnnotationParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:1205:5: ( (lv_parameters_5_0= ruleAnnotationParameter ) )
                    	    // InternalRdfPatternLanguage.g:1206:6: (lv_parameters_5_0= ruleAnnotationParameter )
                    	    {
                    	    // InternalRdfPatternLanguage.g:1206:6: (lv_parameters_5_0= ruleAnnotationParameter )
                    	    // InternalRdfPatternLanguage.g:1207:7: lv_parameters_5_0= ruleAnnotationParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAnnotationAccess().getParametersAnnotationParameterParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_parameters_5_0=ruleAnnotationParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAnnotationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_5_0,
                    	      								"org.eclipse.incquery.patternlanguage.PatternLanguage.AnnotationParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleAnnotationParameter"
    // InternalRdfPatternLanguage.g:1234:1: entryRuleAnnotationParameter returns [EObject current=null] : iv_ruleAnnotationParameter= ruleAnnotationParameter EOF ;
    public final EObject entryRuleAnnotationParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationParameter = null;


        try {
            // InternalRdfPatternLanguage.g:1234:60: (iv_ruleAnnotationParameter= ruleAnnotationParameter EOF )
            // InternalRdfPatternLanguage.g:1235:2: iv_ruleAnnotationParameter= ruleAnnotationParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationParameter=ruleAnnotationParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationParameter"


    // $ANTLR start "ruleAnnotationParameter"
    // InternalRdfPatternLanguage.g:1241:1: ruleAnnotationParameter returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAnnotationValueReference ) ) ) ;
    public final EObject ruleAnnotationParameter() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1247:2: ( ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAnnotationValueReference ) ) ) )
            // InternalRdfPatternLanguage.g:1248:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAnnotationValueReference ) ) )
            {
            // InternalRdfPatternLanguage.g:1248:2: ( ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAnnotationValueReference ) ) )
            // InternalRdfPatternLanguage.g:1249:3: ( (lv_name_0_0= RULE_ID ) ) otherlv_1= '=' ( (lv_value_2_0= ruleAnnotationValueReference ) )
            {
            // InternalRdfPatternLanguage.g:1249:3: ( (lv_name_0_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:1250:4: (lv_name_0_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:1250:4: (lv_name_0_0= RULE_ID )
            // InternalRdfPatternLanguage.g:1251:5: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationParameterAccess().getNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationParameterRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,25,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotationParameterAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:1271:3: ( (lv_value_2_0= ruleAnnotationValueReference ) )
            // InternalRdfPatternLanguage.g:1272:4: (lv_value_2_0= ruleAnnotationValueReference )
            {
            // InternalRdfPatternLanguage.g:1272:4: (lv_value_2_0= ruleAnnotationValueReference )
            // InternalRdfPatternLanguage.g:1273:5: lv_value_2_0= ruleAnnotationValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotationParameterAccess().getValueAnnotationValueReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleAnnotationValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotationParameterRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.AnnotationValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationParameter"


    // $ANTLR start "entryRuleModifiers"
    // InternalRdfPatternLanguage.g:1294:1: entryRuleModifiers returns [EObject current=null] : iv_ruleModifiers= ruleModifiers EOF ;
    public final EObject entryRuleModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModifiers = null;


        try {
            // InternalRdfPatternLanguage.g:1294:50: (iv_ruleModifiers= ruleModifiers EOF )
            // InternalRdfPatternLanguage.g:1295:2: iv_ruleModifiers= ruleModifiers EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModifiers=ruleModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModifiers"


    // $ANTLR start "ruleModifiers"
    // InternalRdfPatternLanguage.g:1301:1: ruleModifiers returns [EObject current=null] : ( (lv_private_0_0= 'private' ) ) ;
    public final EObject ruleModifiers() throws RecognitionException {
        EObject current = null;

        Token lv_private_0_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1307:2: ( ( (lv_private_0_0= 'private' ) ) )
            // InternalRdfPatternLanguage.g:1308:2: ( (lv_private_0_0= 'private' ) )
            {
            // InternalRdfPatternLanguage.g:1308:2: ( (lv_private_0_0= 'private' ) )
            // InternalRdfPatternLanguage.g:1309:3: (lv_private_0_0= 'private' )
            {
            // InternalRdfPatternLanguage.g:1309:3: (lv_private_0_0= 'private' )
            // InternalRdfPatternLanguage.g:1310:4: lv_private_0_0= 'private'
            {
            lv_private_0_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_private_0_0, grammarAccess.getModifiersAccess().getPrivatePrivateKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getModifiersRule());
              				}
              				setWithLastConsumed(current, "private", true, "private");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModifiers"


    // $ANTLR start "entryRuleVariableReference"
    // InternalRdfPatternLanguage.g:1325:1: entryRuleVariableReference returns [EObject current=null] : iv_ruleVariableReference= ruleVariableReference EOF ;
    public final EObject entryRuleVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableReference = null;


        try {
            // InternalRdfPatternLanguage.g:1325:58: (iv_ruleVariableReference= ruleVariableReference EOF )
            // InternalRdfPatternLanguage.g:1326:2: iv_ruleVariableReference= ruleVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableReference=ruleVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableReference"


    // $ANTLR start "ruleVariableReference"
    // InternalRdfPatternLanguage.g:1332:1: ruleVariableReference returns [EObject current=null] : ( (lv_var_0_0= RULE_ID ) ) ;
    public final EObject ruleVariableReference() throws RecognitionException {
        EObject current = null;

        Token lv_var_0_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1338:2: ( ( (lv_var_0_0= RULE_ID ) ) )
            // InternalRdfPatternLanguage.g:1339:2: ( (lv_var_0_0= RULE_ID ) )
            {
            // InternalRdfPatternLanguage.g:1339:2: ( (lv_var_0_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:1340:3: (lv_var_0_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:1340:3: (lv_var_0_0= RULE_ID )
            // InternalRdfPatternLanguage.g:1341:4: lv_var_0_0= RULE_ID
            {
            lv_var_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_var_0_0, grammarAccess.getVariableReferenceAccess().getVarIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getVariableReferenceRule());
              				}
              				setWithLastConsumed(
              					current,
              					"var",
              					lv_var_0_0,
              					"org.eclipse.xtext.xbase.Xtype.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableReference"


    // $ANTLR start "entryRuleType"
    // InternalRdfPatternLanguage.g:1360:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // InternalRdfPatternLanguage.g:1360:45: (iv_ruleType= ruleType EOF )
            // InternalRdfPatternLanguage.g:1361:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // InternalRdfPatternLanguage.g:1367:1: ruleType returns [EObject current=null] : ( () ( (lv_typename_1_0= RULE_ID ) ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token lv_typename_1_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1373:2: ( ( () ( (lv_typename_1_0= RULE_ID ) ) ) )
            // InternalRdfPatternLanguage.g:1374:2: ( () ( (lv_typename_1_0= RULE_ID ) ) )
            {
            // InternalRdfPatternLanguage.g:1374:2: ( () ( (lv_typename_1_0= RULE_ID ) ) )
            // InternalRdfPatternLanguage.g:1375:3: () ( (lv_typename_1_0= RULE_ID ) )
            {
            // InternalRdfPatternLanguage.g:1375:3: ()
            // InternalRdfPatternLanguage.g:1376:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeAccess().getEntityTypeAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1382:3: ( (lv_typename_1_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:1383:4: (lv_typename_1_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:1383:4: (lv_typename_1_0= RULE_ID )
            // InternalRdfPatternLanguage.g:1384:5: lv_typename_1_0= RULE_ID
            {
            lv_typename_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_typename_1_0, grammarAccess.getTypeAccess().getTypenameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"typename",
              						lv_typename_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleRefType"
    // InternalRdfPatternLanguage.g:1404:1: entryRuleRefType returns [EObject current=null] : iv_ruleRefType= ruleRefType EOF ;
    public final EObject entryRuleRefType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRefType = null;


        try {
            // InternalRdfPatternLanguage.g:1404:48: (iv_ruleRefType= ruleRefType EOF )
            // InternalRdfPatternLanguage.g:1405:2: iv_ruleRefType= ruleRefType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRefTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRefType=ruleRefType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRefType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRefType"


    // $ANTLR start "ruleRefType"
    // InternalRdfPatternLanguage.g:1411:1: ruleRefType returns [EObject current=null] : ( () ( (lv_typename_1_0= RULE_ID ) ) ) ;
    public final EObject ruleRefType() throws RecognitionException {
        EObject current = null;

        Token lv_typename_1_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1417:2: ( ( () ( (lv_typename_1_0= RULE_ID ) ) ) )
            // InternalRdfPatternLanguage.g:1418:2: ( () ( (lv_typename_1_0= RULE_ID ) ) )
            {
            // InternalRdfPatternLanguage.g:1418:2: ( () ( (lv_typename_1_0= RULE_ID ) ) )
            // InternalRdfPatternLanguage.g:1419:3: () ( (lv_typename_1_0= RULE_ID ) )
            {
            // InternalRdfPatternLanguage.g:1419:3: ()
            // InternalRdfPatternLanguage.g:1420:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRefTypeAccess().getRelationTypeAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1426:3: ( (lv_typename_1_0= RULE_ID ) )
            // InternalRdfPatternLanguage.g:1427:4: (lv_typename_1_0= RULE_ID )
            {
            // InternalRdfPatternLanguage.g:1427:4: (lv_typename_1_0= RULE_ID )
            // InternalRdfPatternLanguage.g:1428:5: lv_typename_1_0= RULE_ID
            {
            lv_typename_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_typename_1_0, grammarAccess.getRefTypeAccess().getTypenameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRefTypeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"typename",
              						lv_typename_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRefType"


    // $ANTLR start "entryRulePatternBody"
    // InternalRdfPatternLanguage.g:1448:1: entryRulePatternBody returns [EObject current=null] : iv_rulePatternBody= rulePatternBody EOF ;
    public final EObject entryRulePatternBody() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternBody = null;


        try {
            // InternalRdfPatternLanguage.g:1448:52: (iv_rulePatternBody= rulePatternBody EOF )
            // InternalRdfPatternLanguage.g:1449:2: iv_rulePatternBody= rulePatternBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePatternBody=rulePatternBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternBody"


    // $ANTLR start "rulePatternBody"
    // InternalRdfPatternLanguage.g:1455:1: rulePatternBody returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';' )* otherlv_5= '}' ) ;
    public final EObject rulePatternBody() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_constraints_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1461:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';' )* otherlv_5= '}' ) )
            // InternalRdfPatternLanguage.g:1462:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';' )* otherlv_5= '}' )
            {
            // InternalRdfPatternLanguage.g:1462:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';' )* otherlv_5= '}' )
            // InternalRdfPatternLanguage.g:1463:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';' )* otherlv_5= '}'
            {
            // InternalRdfPatternLanguage.g:1463:3: ()
            // InternalRdfPatternLanguage.g:1464:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPatternBodyAccess().getPatternBodyAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1470:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1471:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalRdfPatternLanguage.g:1471:4: (lv_name_1_0= RULE_ID )
                    // InternalRdfPatternLanguage.g:1472:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getPatternBodyAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPatternBodyRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,28,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPatternBodyAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:1492:3: ( ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';' )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_INT)||LA20_0==21||(LA20_0>=31 && LA20_0<=32)||(LA20_0>=38 && LA20_0<=42)||LA20_0==44) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:1493:4: ( (lv_constraints_3_0= ruleConstraint ) ) otherlv_4= ';'
            	    {
            	    // InternalRdfPatternLanguage.g:1493:4: ( (lv_constraints_3_0= ruleConstraint ) )
            	    // InternalRdfPatternLanguage.g:1494:5: (lv_constraints_3_0= ruleConstraint )
            	    {
            	    // InternalRdfPatternLanguage.g:1494:5: (lv_constraints_3_0= ruleConstraint )
            	    // InternalRdfPatternLanguage.g:1495:6: lv_constraints_3_0= ruleConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPatternBodyAccess().getConstraintsConstraintParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_constraints_3_0=ruleConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPatternBodyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"constraints",
            	      							lv_constraints_3_0,
            	      							"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.Constraint");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getPatternBodyAccess().getSemicolonKeyword_3_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            otherlv_5=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getPatternBodyAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternBody"


    // $ANTLR start "entryRulePatternCompositionConstraint"
    // InternalRdfPatternLanguage.g:1525:1: entryRulePatternCompositionConstraint returns [EObject current=null] : iv_rulePatternCompositionConstraint= rulePatternCompositionConstraint EOF ;
    public final EObject entryRulePatternCompositionConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternCompositionConstraint = null;


        try {
            // InternalRdfPatternLanguage.g:1525:69: (iv_rulePatternCompositionConstraint= rulePatternCompositionConstraint EOF )
            // InternalRdfPatternLanguage.g:1526:2: iv_rulePatternCompositionConstraint= rulePatternCompositionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternCompositionConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePatternCompositionConstraint=rulePatternCompositionConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternCompositionConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternCompositionConstraint"


    // $ANTLR start "rulePatternCompositionConstraint"
    // InternalRdfPatternLanguage.g:1532:1: rulePatternCompositionConstraint returns [EObject current=null] : ( () ( (lv_negative_1_0= 'neg' ) )? ( (lv_call_2_0= rulePatternCall ) ) ) ;
    public final EObject rulePatternCompositionConstraint() throws RecognitionException {
        EObject current = null;

        Token lv_negative_1_0=null;
        EObject lv_call_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1538:2: ( ( () ( (lv_negative_1_0= 'neg' ) )? ( (lv_call_2_0= rulePatternCall ) ) ) )
            // InternalRdfPatternLanguage.g:1539:2: ( () ( (lv_negative_1_0= 'neg' ) )? ( (lv_call_2_0= rulePatternCall ) ) )
            {
            // InternalRdfPatternLanguage.g:1539:2: ( () ( (lv_negative_1_0= 'neg' ) )? ( (lv_call_2_0= rulePatternCall ) ) )
            // InternalRdfPatternLanguage.g:1540:3: () ( (lv_negative_1_0= 'neg' ) )? ( (lv_call_2_0= rulePatternCall ) )
            {
            // InternalRdfPatternLanguage.g:1540:3: ()
            // InternalRdfPatternLanguage.g:1541:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPatternCompositionConstraintAccess().getPatternCompositionConstraintAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1547:3: ( (lv_negative_1_0= 'neg' ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==31) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1548:4: (lv_negative_1_0= 'neg' )
                    {
                    // InternalRdfPatternLanguage.g:1548:4: (lv_negative_1_0= 'neg' )
                    // InternalRdfPatternLanguage.g:1549:5: lv_negative_1_0= 'neg'
                    {
                    lv_negative_1_0=(Token)match(input,31,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_negative_1_0, grammarAccess.getPatternCompositionConstraintAccess().getNegativeNegKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPatternCompositionConstraintRule());
                      					}
                      					setWithLastConsumed(current, "negative", true, "neg");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:1561:3: ( (lv_call_2_0= rulePatternCall ) )
            // InternalRdfPatternLanguage.g:1562:4: (lv_call_2_0= rulePatternCall )
            {
            // InternalRdfPatternLanguage.g:1562:4: (lv_call_2_0= rulePatternCall )
            // InternalRdfPatternLanguage.g:1563:5: lv_call_2_0= rulePatternCall
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPatternCompositionConstraintAccess().getCallPatternCallParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_call_2_0=rulePatternCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPatternCompositionConstraintRule());
              					}
              					set(
              						current,
              						"call",
              						lv_call_2_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.PatternCall");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternCompositionConstraint"


    // $ANTLR start "entryRulePatternCall"
    // InternalRdfPatternLanguage.g:1584:1: entryRulePatternCall returns [EObject current=null] : iv_rulePatternCall= rulePatternCall EOF ;
    public final EObject entryRulePatternCall() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternCall = null;


        try {
            // InternalRdfPatternLanguage.g:1584:52: (iv_rulePatternCall= rulePatternCall EOF )
            // InternalRdfPatternLanguage.g:1585:2: iv_rulePatternCall= rulePatternCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePatternCall=rulePatternCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternCall"


    // $ANTLR start "rulePatternCall"
    // InternalRdfPatternLanguage.g:1591:1: rulePatternCall returns [EObject current=null] : (otherlv_0= 'find' ( ( ruleQualifiedName ) ) ( (lv_transitive_2_0= '+' ) )? otherlv_3= '(' ( ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )* )? otherlv_7= ')' ) ;
    public final EObject rulePatternCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_transitive_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1597:2: ( (otherlv_0= 'find' ( ( ruleQualifiedName ) ) ( (lv_transitive_2_0= '+' ) )? otherlv_3= '(' ( ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )* )? otherlv_7= ')' ) )
            // InternalRdfPatternLanguage.g:1598:2: (otherlv_0= 'find' ( ( ruleQualifiedName ) ) ( (lv_transitive_2_0= '+' ) )? otherlv_3= '(' ( ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )* )? otherlv_7= ')' )
            {
            // InternalRdfPatternLanguage.g:1598:2: (otherlv_0= 'find' ( ( ruleQualifiedName ) ) ( (lv_transitive_2_0= '+' ) )? otherlv_3= '(' ( ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )* )? otherlv_7= ')' )
            // InternalRdfPatternLanguage.g:1599:3: otherlv_0= 'find' ( ( ruleQualifiedName ) ) ( (lv_transitive_2_0= '+' ) )? otherlv_3= '(' ( ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )* )? otherlv_7= ')'
            {
            otherlv_0=(Token)match(input,32,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPatternCallAccess().getFindKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:1603:3: ( ( ruleQualifiedName ) )
            // InternalRdfPatternLanguage.g:1604:4: ( ruleQualifiedName )
            {
            // InternalRdfPatternLanguage.g:1604:4: ( ruleQualifiedName )
            // InternalRdfPatternLanguage.g:1605:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPatternCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPatternCallAccess().getPatternRefPatternCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_29);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:1619:3: ( (lv_transitive_2_0= '+' ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==33) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1620:4: (lv_transitive_2_0= '+' )
                    {
                    // InternalRdfPatternLanguage.g:1620:4: (lv_transitive_2_0= '+' )
                    // InternalRdfPatternLanguage.g:1621:5: lv_transitive_2_0= '+'
                    {
                    lv_transitive_2_0=(Token)match(input,33,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_transitive_2_0, grammarAccess.getPatternCallAccess().getTransitivePlusSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPatternCallRule());
                      					}
                      					setWithLastConsumed(current, "transitive", true, "+");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,18,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPatternCallAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalRdfPatternLanguage.g:1637:3: ( ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )* )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_ID && LA24_0<=RULE_INT)||(LA24_0>=38 && LA24_0<=42)||LA24_0==44) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1638:4: ( (lv_parameters_4_0= ruleValueReference ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:1638:4: ( (lv_parameters_4_0= ruleValueReference ) )
                    // InternalRdfPatternLanguage.g:1639:5: (lv_parameters_4_0= ruleValueReference )
                    {
                    // InternalRdfPatternLanguage.g:1639:5: (lv_parameters_4_0= ruleValueReference )
                    // InternalRdfPatternLanguage.g:1640:6: lv_parameters_4_0= ruleValueReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPatternCallAccess().getParametersValueReferenceParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_parameters_4_0=ruleValueReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPatternCallRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_4_0,
                      							"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:1657:4: (otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==20) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:1658:5: otherlv_5= ',' ( (lv_parameters_6_0= ruleValueReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getPatternCallAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:1662:5: ( (lv_parameters_6_0= ruleValueReference ) )
                    	    // InternalRdfPatternLanguage.g:1663:6: (lv_parameters_6_0= ruleValueReference )
                    	    {
                    	    // InternalRdfPatternLanguage.g:1663:6: (lv_parameters_6_0= ruleValueReference )
                    	    // InternalRdfPatternLanguage.g:1664:7: lv_parameters_6_0= ruleValueReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getPatternCallAccess().getParametersValueReferenceParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_parameters_6_0=ruleValueReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getPatternCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_6_0,
                    	      								"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getPatternCallAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternCall"


    // $ANTLR start "entryRuleCompareConstraint"
    // InternalRdfPatternLanguage.g:1691:1: entryRuleCompareConstraint returns [EObject current=null] : iv_ruleCompareConstraint= ruleCompareConstraint EOF ;
    public final EObject entryRuleCompareConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareConstraint = null;


        try {
            // InternalRdfPatternLanguage.g:1691:58: (iv_ruleCompareConstraint= ruleCompareConstraint EOF )
            // InternalRdfPatternLanguage.g:1692:2: iv_ruleCompareConstraint= ruleCompareConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompareConstraint=ruleCompareConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareConstraint"


    // $ANTLR start "ruleCompareConstraint"
    // InternalRdfPatternLanguage.g:1698:1: ruleCompareConstraint returns [EObject current=null] : ( () ( (lv_leftOperand_1_0= ruleValueReference ) ) ( (lv_feature_2_0= ruleCompareFeature ) ) ( (lv_rightOperand_3_0= ruleValueReference ) ) ) ;
    public final EObject ruleCompareConstraint() throws RecognitionException {
        EObject current = null;

        EObject lv_leftOperand_1_0 = null;

        Enumerator lv_feature_2_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1704:2: ( ( () ( (lv_leftOperand_1_0= ruleValueReference ) ) ( (lv_feature_2_0= ruleCompareFeature ) ) ( (lv_rightOperand_3_0= ruleValueReference ) ) ) )
            // InternalRdfPatternLanguage.g:1705:2: ( () ( (lv_leftOperand_1_0= ruleValueReference ) ) ( (lv_feature_2_0= ruleCompareFeature ) ) ( (lv_rightOperand_3_0= ruleValueReference ) ) )
            {
            // InternalRdfPatternLanguage.g:1705:2: ( () ( (lv_leftOperand_1_0= ruleValueReference ) ) ( (lv_feature_2_0= ruleCompareFeature ) ) ( (lv_rightOperand_3_0= ruleValueReference ) ) )
            // InternalRdfPatternLanguage.g:1706:3: () ( (lv_leftOperand_1_0= ruleValueReference ) ) ( (lv_feature_2_0= ruleCompareFeature ) ) ( (lv_rightOperand_3_0= ruleValueReference ) )
            {
            // InternalRdfPatternLanguage.g:1706:3: ()
            // InternalRdfPatternLanguage.g:1707:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCompareConstraintAccess().getCompareConstraintAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1713:3: ( (lv_leftOperand_1_0= ruleValueReference ) )
            // InternalRdfPatternLanguage.g:1714:4: (lv_leftOperand_1_0= ruleValueReference )
            {
            // InternalRdfPatternLanguage.g:1714:4: (lv_leftOperand_1_0= ruleValueReference )
            // InternalRdfPatternLanguage.g:1715:5: lv_leftOperand_1_0= ruleValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompareConstraintAccess().getLeftOperandValueReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_leftOperand_1_0=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompareConstraintRule());
              					}
              					set(
              						current,
              						"leftOperand",
              						lv_leftOperand_1_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:1732:3: ( (lv_feature_2_0= ruleCompareFeature ) )
            // InternalRdfPatternLanguage.g:1733:4: (lv_feature_2_0= ruleCompareFeature )
            {
            // InternalRdfPatternLanguage.g:1733:4: (lv_feature_2_0= ruleCompareFeature )
            // InternalRdfPatternLanguage.g:1734:5: lv_feature_2_0= ruleCompareFeature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompareConstraintAccess().getFeatureCompareFeatureEnumRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_feature_2_0=ruleCompareFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompareConstraintRule());
              					}
              					set(
              						current,
              						"feature",
              						lv_feature_2_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.CompareFeature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:1751:3: ( (lv_rightOperand_3_0= ruleValueReference ) )
            // InternalRdfPatternLanguage.g:1752:4: (lv_rightOperand_3_0= ruleValueReference )
            {
            // InternalRdfPatternLanguage.g:1752:4: (lv_rightOperand_3_0= ruleValueReference )
            // InternalRdfPatternLanguage.g:1753:5: lv_rightOperand_3_0= ruleValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompareConstraintAccess().getRightOperandValueReferenceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_rightOperand_3_0=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompareConstraintRule());
              					}
              					set(
              						current,
              						"rightOperand",
              						lv_rightOperand_3_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareConstraint"


    // $ANTLR start "entryRulePathExpressionHead"
    // InternalRdfPatternLanguage.g:1774:1: entryRulePathExpressionHead returns [EObject current=null] : iv_rulePathExpressionHead= rulePathExpressionHead EOF ;
    public final EObject entryRulePathExpressionHead() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathExpressionHead = null;


        try {
            // InternalRdfPatternLanguage.g:1774:59: (iv_rulePathExpressionHead= rulePathExpressionHead EOF )
            // InternalRdfPatternLanguage.g:1775:2: iv_rulePathExpressionHead= rulePathExpressionHead EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathExpressionHeadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathExpressionHead=rulePathExpressionHead();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathExpressionHead; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathExpressionHead"


    // $ANTLR start "rulePathExpressionHead"
    // InternalRdfPatternLanguage.g:1781:1: rulePathExpressionHead returns [EObject current=null] : ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '.' ( (lv_tail_3_0= rulePathExpressionTail ) ) otherlv_4= '(' ( (lv_src_5_0= ruleVariableReference ) ) otherlv_6= ',' ( (lv_dst_7_0= ruleValueReference ) ) otherlv_8= ')' ) ;
    public final EObject rulePathExpressionHead() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_type_1_0 = null;

        EObject lv_tail_3_0 = null;

        EObject lv_src_5_0 = null;

        EObject lv_dst_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1787:2: ( ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '.' ( (lv_tail_3_0= rulePathExpressionTail ) ) otherlv_4= '(' ( (lv_src_5_0= ruleVariableReference ) ) otherlv_6= ',' ( (lv_dst_7_0= ruleValueReference ) ) otherlv_8= ')' ) )
            // InternalRdfPatternLanguage.g:1788:2: ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '.' ( (lv_tail_3_0= rulePathExpressionTail ) ) otherlv_4= '(' ( (lv_src_5_0= ruleVariableReference ) ) otherlv_6= ',' ( (lv_dst_7_0= ruleValueReference ) ) otherlv_8= ')' )
            {
            // InternalRdfPatternLanguage.g:1788:2: ( () ( (lv_type_1_0= ruleType ) ) otherlv_2= '.' ( (lv_tail_3_0= rulePathExpressionTail ) ) otherlv_4= '(' ( (lv_src_5_0= ruleVariableReference ) ) otherlv_6= ',' ( (lv_dst_7_0= ruleValueReference ) ) otherlv_8= ')' )
            // InternalRdfPatternLanguage.g:1789:3: () ( (lv_type_1_0= ruleType ) ) otherlv_2= '.' ( (lv_tail_3_0= rulePathExpressionTail ) ) otherlv_4= '(' ( (lv_src_5_0= ruleVariableReference ) ) otherlv_6= ',' ( (lv_dst_7_0= ruleValueReference ) ) otherlv_8= ')'
            {
            // InternalRdfPatternLanguage.g:1789:3: ()
            // InternalRdfPatternLanguage.g:1790:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPathExpressionHeadAccess().getPathExpressionHeadAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1796:3: ( (lv_type_1_0= ruleType ) )
            // InternalRdfPatternLanguage.g:1797:4: (lv_type_1_0= ruleType )
            {
            // InternalRdfPatternLanguage.g:1797:4: (lv_type_1_0= ruleType )
            // InternalRdfPatternLanguage.g:1798:5: lv_type_1_0= ruleType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathExpressionHeadAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_type_1_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathExpressionHeadRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.Type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPathExpressionHeadAccess().getFullStopKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:1819:3: ( (lv_tail_3_0= rulePathExpressionTail ) )
            // InternalRdfPatternLanguage.g:1820:4: (lv_tail_3_0= rulePathExpressionTail )
            {
            // InternalRdfPatternLanguage.g:1820:4: (lv_tail_3_0= rulePathExpressionTail )
            // InternalRdfPatternLanguage.g:1821:5: lv_tail_3_0= rulePathExpressionTail
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathExpressionHeadAccess().getTailPathExpressionTailParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_tail_3_0=rulePathExpressionTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathExpressionHeadRule());
              					}
              					set(
              						current,
              						"tail",
              						lv_tail_3_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.PathExpressionTail");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getPathExpressionHeadAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalRdfPatternLanguage.g:1842:3: ( (lv_src_5_0= ruleVariableReference ) )
            // InternalRdfPatternLanguage.g:1843:4: (lv_src_5_0= ruleVariableReference )
            {
            // InternalRdfPatternLanguage.g:1843:4: (lv_src_5_0= ruleVariableReference )
            // InternalRdfPatternLanguage.g:1844:5: lv_src_5_0= ruleVariableReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathExpressionHeadAccess().getSrcVariableReferenceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_src_5_0=ruleVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathExpressionHeadRule());
              					}
              					set(
              						current,
              						"src",
              						lv_src_5_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.VariableReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,20,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getPathExpressionHeadAccess().getCommaKeyword_6());
              		
            }
            // InternalRdfPatternLanguage.g:1865:3: ( (lv_dst_7_0= ruleValueReference ) )
            // InternalRdfPatternLanguage.g:1866:4: (lv_dst_7_0= ruleValueReference )
            {
            // InternalRdfPatternLanguage.g:1866:4: (lv_dst_7_0= ruleValueReference )
            // InternalRdfPatternLanguage.g:1867:5: lv_dst_7_0= ruleValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathExpressionHeadAccess().getDstValueReferenceParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_dst_7_0=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathExpressionHeadRule());
              					}
              					set(
              						current,
              						"dst",
              						lv_dst_7_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getPathExpressionHeadAccess().getRightParenthesisKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathExpressionHead"


    // $ANTLR start "entryRulePathExpressionTail"
    // InternalRdfPatternLanguage.g:1892:1: entryRulePathExpressionTail returns [EObject current=null] : iv_rulePathExpressionTail= rulePathExpressionTail EOF ;
    public final EObject entryRulePathExpressionTail() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathExpressionTail = null;


        try {
            // InternalRdfPatternLanguage.g:1892:59: (iv_rulePathExpressionTail= rulePathExpressionTail EOF )
            // InternalRdfPatternLanguage.g:1893:2: iv_rulePathExpressionTail= rulePathExpressionTail EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathExpressionTailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathExpressionTail=rulePathExpressionTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathExpressionTail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathExpressionTail"


    // $ANTLR start "rulePathExpressionTail"
    // InternalRdfPatternLanguage.g:1899:1: rulePathExpressionTail returns [EObject current=null] : ( () ( (lv_type_1_0= ruleRefType ) ) (otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']' )? ( (lv_closure_5_0= '*' ) )? (otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) ) )? ) ;
    public final EObject rulePathExpressionTail() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_index_3_0=null;
        Token otherlv_4=null;
        Token lv_closure_5_0=null;
        Token otherlv_6=null;
        EObject lv_type_1_0 = null;

        EObject lv_tail_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:1905:2: ( ( () ( (lv_type_1_0= ruleRefType ) ) (otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']' )? ( (lv_closure_5_0= '*' ) )? (otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) ) )? ) )
            // InternalRdfPatternLanguage.g:1906:2: ( () ( (lv_type_1_0= ruleRefType ) ) (otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']' )? ( (lv_closure_5_0= '*' ) )? (otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) ) )? )
            {
            // InternalRdfPatternLanguage.g:1906:2: ( () ( (lv_type_1_0= ruleRefType ) ) (otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']' )? ( (lv_closure_5_0= '*' ) )? (otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) ) )? )
            // InternalRdfPatternLanguage.g:1907:3: () ( (lv_type_1_0= ruleRefType ) ) (otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']' )? ( (lv_closure_5_0= '*' ) )? (otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) ) )?
            {
            // InternalRdfPatternLanguage.g:1907:3: ()
            // InternalRdfPatternLanguage.g:1908:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPathExpressionTailAccess().getPathExpressionTailAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:1914:3: ( (lv_type_1_0= ruleRefType ) )
            // InternalRdfPatternLanguage.g:1915:4: (lv_type_1_0= ruleRefType )
            {
            // InternalRdfPatternLanguage.g:1915:4: (lv_type_1_0= ruleRefType )
            // InternalRdfPatternLanguage.g:1916:5: lv_type_1_0= ruleRefType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathExpressionTailAccess().getTypeRefTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_type_1_0=ruleRefType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathExpressionTailRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.RefType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:1933:3: (otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==35) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1934:4: otherlv_2= '[' ( (lv_index_3_0= RULE_INT ) ) otherlv_4= ']'
                    {
                    otherlv_2=(Token)match(input,35,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPathExpressionTailAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:1938:4: ( (lv_index_3_0= RULE_INT ) )
                    // InternalRdfPatternLanguage.g:1939:5: (lv_index_3_0= RULE_INT )
                    {
                    // InternalRdfPatternLanguage.g:1939:5: (lv_index_3_0= RULE_INT )
                    // InternalRdfPatternLanguage.g:1940:6: lv_index_3_0= RULE_INT
                    {
                    lv_index_3_0=(Token)match(input,RULE_INT,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_index_3_0, grammarAccess.getPathExpressionTailAccess().getIndexINTTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPathExpressionTailRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"index",
                      							lv_index_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.INT");
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,36,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPathExpressionTailAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:1961:3: ( (lv_closure_5_0= '*' ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==37) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1962:4: (lv_closure_5_0= '*' )
                    {
                    // InternalRdfPatternLanguage.g:1962:4: (lv_closure_5_0= '*' )
                    // InternalRdfPatternLanguage.g:1963:5: lv_closure_5_0= '*'
                    {
                    lv_closure_5_0=(Token)match(input,37,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_closure_5_0, grammarAccess.getPathExpressionTailAccess().getClosureAsteriskKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPathExpressionTailRule());
                      					}
                      					setWithLastConsumed(current, "closure", true, "*");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:1975:3: (otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==34) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalRdfPatternLanguage.g:1976:4: otherlv_6= '.' ( (lv_tail_7_0= rulePathExpressionTail ) )
                    {
                    otherlv_6=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPathExpressionTailAccess().getFullStopKeyword_4_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:1980:4: ( (lv_tail_7_0= rulePathExpressionTail ) )
                    // InternalRdfPatternLanguage.g:1981:5: (lv_tail_7_0= rulePathExpressionTail )
                    {
                    // InternalRdfPatternLanguage.g:1981:5: (lv_tail_7_0= rulePathExpressionTail )
                    // InternalRdfPatternLanguage.g:1982:6: lv_tail_7_0= rulePathExpressionTail
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPathExpressionTailAccess().getTailPathExpressionTailParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_tail_7_0=rulePathExpressionTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPathExpressionTailRule());
                      						}
                      						set(
                      							current,
                      							"tail",
                      							lv_tail_7_0,
                      							"org.eclipse.incquery.patternlanguage.PatternLanguage.PathExpressionTail");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathExpressionTail"


    // $ANTLR start "entryRuleAnnotationValueReference"
    // InternalRdfPatternLanguage.g:2004:1: entryRuleAnnotationValueReference returns [EObject current=null] : iv_ruleAnnotationValueReference= ruleAnnotationValueReference EOF ;
    public final EObject entryRuleAnnotationValueReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationValueReference = null;


        try {
            // InternalRdfPatternLanguage.g:2004:65: (iv_ruleAnnotationValueReference= ruleAnnotationValueReference EOF )
            // InternalRdfPatternLanguage.g:2005:2: iv_ruleAnnotationValueReference= ruleAnnotationValueReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationValueReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationValueReference=ruleAnnotationValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationValueReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotationValueReference"


    // $ANTLR start "ruleAnnotationValueReference"
    // InternalRdfPatternLanguage.g:2011:1: ruleAnnotationValueReference returns [EObject current=null] : (this_ValueReference_0= ruleValueReference | this_ListValue_1= ruleListValue ) ;
    public final EObject ruleAnnotationValueReference() throws RecognitionException {
        EObject current = null;

        EObject this_ValueReference_0 = null;

        EObject this_ListValue_1 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2017:2: ( (this_ValueReference_0= ruleValueReference | this_ListValue_1= ruleListValue ) )
            // InternalRdfPatternLanguage.g:2018:2: (this_ValueReference_0= ruleValueReference | this_ListValue_1= ruleListValue )
            {
            // InternalRdfPatternLanguage.g:2018:2: (this_ValueReference_0= ruleValueReference | this_ListValue_1= ruleListValue )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=RULE_ID && LA28_0<=RULE_INT)||(LA28_0>=38 && LA28_0<=42)||LA28_0==44) ) {
                alt28=1;
            }
            else if ( (LA28_0==28) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalRdfPatternLanguage.g:2019:3: this_ValueReference_0= ruleValueReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationValueReferenceAccess().getValueReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValueReference_0=ruleValueReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValueReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:2028:3: this_ListValue_1= ruleListValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationValueReferenceAccess().getListValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ListValue_1=ruleListValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ListValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotationValueReference"


    // $ANTLR start "entryRuleIntValue"
    // InternalRdfPatternLanguage.g:2040:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalRdfPatternLanguage.g:2040:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalRdfPatternLanguage.g:2041:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalRdfPatternLanguage.g:2047:1: ruleIntValue returns [EObject current=null] : ( () ( (lv_value_1_0= ruleINTNUMBER ) ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2053:2: ( ( () ( (lv_value_1_0= ruleINTNUMBER ) ) ) )
            // InternalRdfPatternLanguage.g:2054:2: ( () ( (lv_value_1_0= ruleINTNUMBER ) ) )
            {
            // InternalRdfPatternLanguage.g:2054:2: ( () ( (lv_value_1_0= ruleINTNUMBER ) ) )
            // InternalRdfPatternLanguage.g:2055:3: () ( (lv_value_1_0= ruleINTNUMBER ) )
            {
            // InternalRdfPatternLanguage.g:2055:3: ()
            // InternalRdfPatternLanguage.g:2056:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIntValueAccess().getIntValueAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:2062:3: ( (lv_value_1_0= ruleINTNUMBER ) )
            // InternalRdfPatternLanguage.g:2063:4: (lv_value_1_0= ruleINTNUMBER )
            {
            // InternalRdfPatternLanguage.g:2063:4: (lv_value_1_0= ruleINTNUMBER )
            // InternalRdfPatternLanguage.g:2064:5: lv_value_1_0= ruleINTNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIntValueAccess().getValueINTNUMBERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleINTNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIntValueRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.INTNUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleINTNUMBER"
    // InternalRdfPatternLanguage.g:2085:1: entryRuleINTNUMBER returns [String current=null] : iv_ruleINTNUMBER= ruleINTNUMBER EOF ;
    public final String entryRuleINTNUMBER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTNUMBER = null;


        try {
            // InternalRdfPatternLanguage.g:2085:49: (iv_ruleINTNUMBER= ruleINTNUMBER EOF )
            // InternalRdfPatternLanguage.g:2086:2: iv_ruleINTNUMBER= ruleINTNUMBER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTNUMBERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTNUMBER=ruleINTNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTNUMBER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTNUMBER"


    // $ANTLR start "ruleINTNUMBER"
    // InternalRdfPatternLanguage.g:2092:1: ruleINTNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleINTNUMBER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2098:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalRdfPatternLanguage.g:2099:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalRdfPatternLanguage.g:2099:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalRdfPatternLanguage.g:2100:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalRdfPatternLanguage.g:2100:3: (kw= '-' )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==38) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalRdfPatternLanguage.g:2101:4: kw= '-'
                    {
                    kw=(Token)match(input,38,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getINTNUMBERAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getINTNUMBERAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTNUMBER"


    // $ANTLR start "entryRuleStringValue"
    // InternalRdfPatternLanguage.g:2118:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalRdfPatternLanguage.g:2118:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalRdfPatternLanguage.g:2119:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalRdfPatternLanguage.g:2125:1: ruleStringValue returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2131:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalRdfPatternLanguage.g:2132:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalRdfPatternLanguage.g:2132:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalRdfPatternLanguage.g:2133:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalRdfPatternLanguage.g:2133:3: ()
            // InternalRdfPatternLanguage.g:2134:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStringValueAccess().getStringValueAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:2140:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalRdfPatternLanguage.g:2141:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalRdfPatternLanguage.g:2141:4: (lv_value_1_0= RULE_STRING )
            // InternalRdfPatternLanguage.g:2142:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStringValueRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalRdfPatternLanguage.g:2162:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalRdfPatternLanguage.g:2162:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalRdfPatternLanguage.g:2163:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalRdfPatternLanguage.g:2169:1: ruleBoolValue returns [EObject current=null] : ( () ( (lv_value_1_0= ruleBOOLEAN ) ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2175:2: ( ( () ( (lv_value_1_0= ruleBOOLEAN ) ) ) )
            // InternalRdfPatternLanguage.g:2176:2: ( () ( (lv_value_1_0= ruleBOOLEAN ) ) )
            {
            // InternalRdfPatternLanguage.g:2176:2: ( () ( (lv_value_1_0= ruleBOOLEAN ) ) )
            // InternalRdfPatternLanguage.g:2177:3: () ( (lv_value_1_0= ruleBOOLEAN ) )
            {
            // InternalRdfPatternLanguage.g:2177:3: ()
            // InternalRdfPatternLanguage.g:2178:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBoolValueAccess().getBoolValueAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:2184:3: ( (lv_value_1_0= ruleBOOLEAN ) )
            // InternalRdfPatternLanguage.g:2185:4: (lv_value_1_0= ruleBOOLEAN )
            {
            // InternalRdfPatternLanguage.g:2185:4: (lv_value_1_0= ruleBOOLEAN )
            // InternalRdfPatternLanguage.g:2186:5: lv_value_1_0= ruleBOOLEAN
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBoolValueAccess().getValueBOOLEANParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleBOOLEAN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBoolValueRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.BOOLEAN");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleBOOLEAN"
    // InternalRdfPatternLanguage.g:2207:1: entryRuleBOOLEAN returns [String current=null] : iv_ruleBOOLEAN= ruleBOOLEAN EOF ;
    public final String entryRuleBOOLEAN() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBOOLEAN = null;


        try {
            // InternalRdfPatternLanguage.g:2207:47: (iv_ruleBOOLEAN= ruleBOOLEAN EOF )
            // InternalRdfPatternLanguage.g:2208:2: iv_ruleBOOLEAN= ruleBOOLEAN EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBOOLEANRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBOOLEAN=ruleBOOLEAN();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBOOLEAN.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBOOLEAN"


    // $ANTLR start "ruleBOOLEAN"
    // InternalRdfPatternLanguage.g:2214:1: ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'true' | kw= 'false' | kw= 'TRUE' | kw= 'FALSE' ) ;
    public final AntlrDatatypeRuleToken ruleBOOLEAN() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2220:2: ( (kw= 'true' | kw= 'false' | kw= 'TRUE' | kw= 'FALSE' ) )
            // InternalRdfPatternLanguage.g:2221:2: (kw= 'true' | kw= 'false' | kw= 'TRUE' | kw= 'FALSE' )
            {
            // InternalRdfPatternLanguage.g:2221:2: (kw= 'true' | kw= 'false' | kw= 'TRUE' | kw= 'FALSE' )
            int alt30=4;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt30=1;
                }
                break;
            case 40:
                {
                alt30=2;
                }
                break;
            case 41:
                {
                alt30=3;
                }
                break;
            case 42:
                {
                alt30=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalRdfPatternLanguage.g:2222:3: kw= 'true'
                    {
                    kw=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:2228:3: kw= 'false'
                    {
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:2234:3: kw= 'TRUE'
                    {
                    kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTRUEKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:2240:3: kw= 'FALSE'
                    {
                    kw=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFALSEKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBOOLEAN"


    // $ANTLR start "entryRuleDoubleValue"
    // InternalRdfPatternLanguage.g:2249:1: entryRuleDoubleValue returns [EObject current=null] : iv_ruleDoubleValue= ruleDoubleValue EOF ;
    public final EObject entryRuleDoubleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoubleValue = null;


        try {
            // InternalRdfPatternLanguage.g:2249:52: (iv_ruleDoubleValue= ruleDoubleValue EOF )
            // InternalRdfPatternLanguage.g:2250:2: iv_ruleDoubleValue= ruleDoubleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoubleValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoubleValue=ruleDoubleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoubleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDoubleValue"


    // $ANTLR start "ruleDoubleValue"
    // InternalRdfPatternLanguage.g:2256:1: ruleDoubleValue returns [EObject current=null] : ( () ( (lv_value_1_0= ruleDOUBLE ) ) ) ;
    public final EObject ruleDoubleValue() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2262:2: ( ( () ( (lv_value_1_0= ruleDOUBLE ) ) ) )
            // InternalRdfPatternLanguage.g:2263:2: ( () ( (lv_value_1_0= ruleDOUBLE ) ) )
            {
            // InternalRdfPatternLanguage.g:2263:2: ( () ( (lv_value_1_0= ruleDOUBLE ) ) )
            // InternalRdfPatternLanguage.g:2264:3: () ( (lv_value_1_0= ruleDOUBLE ) )
            {
            // InternalRdfPatternLanguage.g:2264:3: ()
            // InternalRdfPatternLanguage.g:2265:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDoubleValueAccess().getDoubleValueAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:2271:3: ( (lv_value_1_0= ruleDOUBLE ) )
            // InternalRdfPatternLanguage.g:2272:4: (lv_value_1_0= ruleDOUBLE )
            {
            // InternalRdfPatternLanguage.g:2272:4: (lv_value_1_0= ruleDOUBLE )
            // InternalRdfPatternLanguage.g:2273:5: lv_value_1_0= ruleDOUBLE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDoubleValueAccess().getValueDOUBLEParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleDOUBLE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDoubleValueRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.DOUBLE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDoubleValue"


    // $ANTLR start "entryRuleDOUBLE"
    // InternalRdfPatternLanguage.g:2294:1: entryRuleDOUBLE returns [String current=null] : iv_ruleDOUBLE= ruleDOUBLE EOF ;
    public final String entryRuleDOUBLE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDOUBLE = null;


        try {
            // InternalRdfPatternLanguage.g:2294:46: (iv_ruleDOUBLE= ruleDOUBLE EOF )
            // InternalRdfPatternLanguage.g:2295:2: iv_ruleDOUBLE= ruleDOUBLE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDOUBLERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDOUBLE=ruleDOUBLE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDOUBLE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDOUBLE"


    // $ANTLR start "ruleDOUBLE"
    // InternalRdfPatternLanguage.g:2301:1: ruleDOUBLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT kw= '.' this_INT_3= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleDOUBLE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;
        Token this_INT_3=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2307:2: ( ( (kw= '-' )? this_INT_1= RULE_INT kw= '.' this_INT_3= RULE_INT ) )
            // InternalRdfPatternLanguage.g:2308:2: ( (kw= '-' )? this_INT_1= RULE_INT kw= '.' this_INT_3= RULE_INT )
            {
            // InternalRdfPatternLanguage.g:2308:2: ( (kw= '-' )? this_INT_1= RULE_INT kw= '.' this_INT_3= RULE_INT )
            // InternalRdfPatternLanguage.g:2309:3: (kw= '-' )? this_INT_1= RULE_INT kw= '.' this_INT_3= RULE_INT
            {
            // InternalRdfPatternLanguage.g:2309:3: (kw= '-' )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==38) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalRdfPatternLanguage.g:2310:4: kw= '-'
                    {
                    kw=(Token)match(input,38,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1());
              		
            }
            kw=(Token)match(input,34,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getDOUBLEAccess().getFullStopKeyword_2());
              		
            }
            this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_3);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_3, grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDOUBLE"


    // $ANTLR start "entryRuleVariableValue"
    // InternalRdfPatternLanguage.g:2339:1: entryRuleVariableValue returns [EObject current=null] : iv_ruleVariableValue= ruleVariableValue EOF ;
    public final EObject entryRuleVariableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableValue = null;


        try {
            // InternalRdfPatternLanguage.g:2339:54: (iv_ruleVariableValue= ruleVariableValue EOF )
            // InternalRdfPatternLanguage.g:2340:2: iv_ruleVariableValue= ruleVariableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableValue=ruleVariableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableValue"


    // $ANTLR start "ruleVariableValue"
    // InternalRdfPatternLanguage.g:2346:1: ruleVariableValue returns [EObject current=null] : ( () ( (lv_value_1_0= ruleVariableReference ) ) ) ;
    public final EObject ruleVariableValue() throws RecognitionException {
        EObject current = null;

        EObject lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2352:2: ( ( () ( (lv_value_1_0= ruleVariableReference ) ) ) )
            // InternalRdfPatternLanguage.g:2353:2: ( () ( (lv_value_1_0= ruleVariableReference ) ) )
            {
            // InternalRdfPatternLanguage.g:2353:2: ( () ( (lv_value_1_0= ruleVariableReference ) ) )
            // InternalRdfPatternLanguage.g:2354:3: () ( (lv_value_1_0= ruleVariableReference ) )
            {
            // InternalRdfPatternLanguage.g:2354:3: ()
            // InternalRdfPatternLanguage.g:2355:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableValueAccess().getVariableValueAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:2361:3: ( (lv_value_1_0= ruleVariableReference ) )
            // InternalRdfPatternLanguage.g:2362:4: (lv_value_1_0= ruleVariableReference )
            {
            // InternalRdfPatternLanguage.g:2362:4: (lv_value_1_0= ruleVariableReference )
            // InternalRdfPatternLanguage.g:2363:5: lv_value_1_0= ruleVariableReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableValueAccess().getValueVariableReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableValueRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.VariableReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableValue"


    // $ANTLR start "entryRuleListValue"
    // InternalRdfPatternLanguage.g:2384:1: entryRuleListValue returns [EObject current=null] : iv_ruleListValue= ruleListValue EOF ;
    public final EObject entryRuleListValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleListValue = null;


        try {
            // InternalRdfPatternLanguage.g:2384:50: (iv_ruleListValue= ruleListValue EOF )
            // InternalRdfPatternLanguage.g:2385:2: iv_ruleListValue= ruleListValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleListValue=ruleListValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleListValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleListValue"


    // $ANTLR start "ruleListValue"
    // InternalRdfPatternLanguage.g:2391:1: ruleListValue returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_values_2_0= ruleValueReference ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) ) )* otherlv_5= '}' ) ;
    public final EObject ruleListValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_values_2_0 = null;

        EObject lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2397:2: ( ( () otherlv_1= '{' ( (lv_values_2_0= ruleValueReference ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) ) )* otherlv_5= '}' ) )
            // InternalRdfPatternLanguage.g:2398:2: ( () otherlv_1= '{' ( (lv_values_2_0= ruleValueReference ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) ) )* otherlv_5= '}' )
            {
            // InternalRdfPatternLanguage.g:2398:2: ( () otherlv_1= '{' ( (lv_values_2_0= ruleValueReference ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) ) )* otherlv_5= '}' )
            // InternalRdfPatternLanguage.g:2399:3: () otherlv_1= '{' ( (lv_values_2_0= ruleValueReference ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) ) )* otherlv_5= '}'
            {
            // InternalRdfPatternLanguage.g:2399:3: ()
            // InternalRdfPatternLanguage.g:2400:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListValueAccess().getListValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:2410:3: ( (lv_values_2_0= ruleValueReference ) )
            // InternalRdfPatternLanguage.g:2411:4: (lv_values_2_0= ruleValueReference )
            {
            // InternalRdfPatternLanguage.g:2411:4: (lv_values_2_0= ruleValueReference )
            // InternalRdfPatternLanguage.g:2412:5: lv_values_2_0= ruleValueReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getListValueAccess().getValuesValueReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_values_2_0=ruleValueReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getListValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:2429:3: (otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==20) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:2430:4: otherlv_3= ',' ( (lv_values_4_0= ruleValueReference ) )
            	    {
            	    otherlv_3=(Token)match(input,20,FOLLOW_11); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getListValueAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalRdfPatternLanguage.g:2434:4: ( (lv_values_4_0= ruleValueReference ) )
            	    // InternalRdfPatternLanguage.g:2435:5: (lv_values_4_0= ruleValueReference )
            	    {
            	    // InternalRdfPatternLanguage.g:2435:5: (lv_values_4_0= ruleValueReference )
            	    // InternalRdfPatternLanguage.g:2436:6: lv_values_4_0= ruleValueReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getListValueAccess().getValuesValueReferenceParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_values_4_0=ruleValueReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getListValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"org.eclipse.incquery.patternlanguage.rdf.RdfPatternLanguage.ValueReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            otherlv_5=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getListValueAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleListValue"


    // $ANTLR start "entryRuleFunctionEvaluationValue"
    // InternalRdfPatternLanguage.g:2462:1: entryRuleFunctionEvaluationValue returns [EObject current=null] : iv_ruleFunctionEvaluationValue= ruleFunctionEvaluationValue EOF ;
    public final EObject entryRuleFunctionEvaluationValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionEvaluationValue = null;


        try {
            // InternalRdfPatternLanguage.g:2462:64: (iv_ruleFunctionEvaluationValue= ruleFunctionEvaluationValue EOF )
            // InternalRdfPatternLanguage.g:2463:2: iv_ruleFunctionEvaluationValue= ruleFunctionEvaluationValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionEvaluationValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionEvaluationValue=ruleFunctionEvaluationValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionEvaluationValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionEvaluationValue"


    // $ANTLR start "ruleFunctionEvaluationValue"
    // InternalRdfPatternLanguage.g:2469:1: ruleFunctionEvaluationValue returns [EObject current=null] : ( () otherlv_1= 'eval' otherlv_2= '(' ( (lv_expression_3_0= ruleXExpression ) ) otherlv_4= ')' ) ;
    public final EObject ruleFunctionEvaluationValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2475:2: ( ( () otherlv_1= 'eval' otherlv_2= '(' ( (lv_expression_3_0= ruleXExpression ) ) otherlv_4= ')' ) )
            // InternalRdfPatternLanguage.g:2476:2: ( () otherlv_1= 'eval' otherlv_2= '(' ( (lv_expression_3_0= ruleXExpression ) ) otherlv_4= ')' )
            {
            // InternalRdfPatternLanguage.g:2476:2: ( () otherlv_1= 'eval' otherlv_2= '(' ( (lv_expression_3_0= ruleXExpression ) ) otherlv_4= ')' )
            // InternalRdfPatternLanguage.g:2477:3: () otherlv_1= 'eval' otherlv_2= '(' ( (lv_expression_3_0= ruleXExpression ) ) otherlv_4= ')'
            {
            // InternalRdfPatternLanguage.g:2477:3: ()
            // InternalRdfPatternLanguage.g:2478:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionEvaluationValueAccess().getFunctionEvaluationValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,43,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionEvaluationValueAccess().getEvalKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFunctionEvaluationValueAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:2492:3: ( (lv_expression_3_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:2493:4: (lv_expression_3_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:2493:4: (lv_expression_3_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:2494:5: lv_expression_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionEvaluationValueAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_expression_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionEvaluationValueRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getFunctionEvaluationValueAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionEvaluationValue"


    // $ANTLR start "entryRuleAggregatedValue"
    // InternalRdfPatternLanguage.g:2519:1: entryRuleAggregatedValue returns [EObject current=null] : iv_ruleAggregatedValue= ruleAggregatedValue EOF ;
    public final EObject entryRuleAggregatedValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAggregatedValue = null;


        try {
            // InternalRdfPatternLanguage.g:2519:56: (iv_ruleAggregatedValue= ruleAggregatedValue EOF )
            // InternalRdfPatternLanguage.g:2520:2: iv_ruleAggregatedValue= ruleAggregatedValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregatedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAggregatedValue=ruleAggregatedValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregatedValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregatedValue"


    // $ANTLR start "ruleAggregatedValue"
    // InternalRdfPatternLanguage.g:2526:1: ruleAggregatedValue returns [EObject current=null] : ( () ( (lv_aggregator_1_0= ruleAggregatorExpression ) ) ( (lv_call_2_0= rulePatternCall ) ) ) ;
    public final EObject ruleAggregatedValue() throws RecognitionException {
        EObject current = null;

        EObject lv_aggregator_1_0 = null;

        EObject lv_call_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2532:2: ( ( () ( (lv_aggregator_1_0= ruleAggregatorExpression ) ) ( (lv_call_2_0= rulePatternCall ) ) ) )
            // InternalRdfPatternLanguage.g:2533:2: ( () ( (lv_aggregator_1_0= ruleAggregatorExpression ) ) ( (lv_call_2_0= rulePatternCall ) ) )
            {
            // InternalRdfPatternLanguage.g:2533:2: ( () ( (lv_aggregator_1_0= ruleAggregatorExpression ) ) ( (lv_call_2_0= rulePatternCall ) ) )
            // InternalRdfPatternLanguage.g:2534:3: () ( (lv_aggregator_1_0= ruleAggregatorExpression ) ) ( (lv_call_2_0= rulePatternCall ) )
            {
            // InternalRdfPatternLanguage.g:2534:3: ()
            // InternalRdfPatternLanguage.g:2535:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAggregatedValueAccess().getAggregatedValueAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:2541:3: ( (lv_aggregator_1_0= ruleAggregatorExpression ) )
            // InternalRdfPatternLanguage.g:2542:4: (lv_aggregator_1_0= ruleAggregatorExpression )
            {
            // InternalRdfPatternLanguage.g:2542:4: (lv_aggregator_1_0= ruleAggregatorExpression )
            // InternalRdfPatternLanguage.g:2543:5: lv_aggregator_1_0= ruleAggregatorExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregatedValueAccess().getAggregatorAggregatorExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_aggregator_1_0=ruleAggregatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregatedValueRule());
              					}
              					set(
              						current,
              						"aggregator",
              						lv_aggregator_1_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.AggregatorExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:2560:3: ( (lv_call_2_0= rulePatternCall ) )
            // InternalRdfPatternLanguage.g:2561:4: (lv_call_2_0= rulePatternCall )
            {
            // InternalRdfPatternLanguage.g:2561:4: (lv_call_2_0= rulePatternCall )
            // InternalRdfPatternLanguage.g:2562:5: lv_call_2_0= rulePatternCall
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAggregatedValueAccess().getCallPatternCallParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_call_2_0=rulePatternCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAggregatedValueRule());
              					}
              					set(
              						current,
              						"call",
              						lv_call_2_0,
              						"org.eclipse.incquery.patternlanguage.PatternLanguage.PatternCall");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAggregatedValue"


    // $ANTLR start "entryRuleAggregatorExpression"
    // InternalRdfPatternLanguage.g:2583:1: entryRuleAggregatorExpression returns [EObject current=null] : iv_ruleAggregatorExpression= ruleAggregatorExpression EOF ;
    public final EObject entryRuleAggregatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAggregatorExpression = null;


        try {
            // InternalRdfPatternLanguage.g:2583:61: (iv_ruleAggregatorExpression= ruleAggregatorExpression EOF )
            // InternalRdfPatternLanguage.g:2584:2: iv_ruleAggregatorExpression= ruleAggregatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAggregatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAggregatorExpression=ruleAggregatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAggregatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAggregatorExpression"


    // $ANTLR start "ruleAggregatorExpression"
    // InternalRdfPatternLanguage.g:2590:1: ruleAggregatorExpression returns [EObject current=null] : ( () otherlv_1= 'count' ) ;
    public final EObject ruleAggregatorExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2596:2: ( ( () otherlv_1= 'count' ) )
            // InternalRdfPatternLanguage.g:2597:2: ( () otherlv_1= 'count' )
            {
            // InternalRdfPatternLanguage.g:2597:2: ( () otherlv_1= 'count' )
            // InternalRdfPatternLanguage.g:2598:3: () otherlv_1= 'count'
            {
            // InternalRdfPatternLanguage.g:2598:3: ()
            // InternalRdfPatternLanguage.g:2599:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAggregatorExpressionAccess().getCountAggregatorAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAggregatorExpressionAccess().getCountKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAggregatorExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalRdfPatternLanguage.g:2613:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalRdfPatternLanguage.g:2613:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalRdfPatternLanguage.g:2614:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalRdfPatternLanguage.g:2620:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2626:2: (this_XAssignment_0= ruleXAssignment )
            // InternalRdfPatternLanguage.g:2627:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalRdfPatternLanguage.g:2638:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalRdfPatternLanguage.g:2638:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalRdfPatternLanguage.g:2639:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalRdfPatternLanguage.g:2645:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2651:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalRdfPatternLanguage.g:2652:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalRdfPatternLanguage.g:2652:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt34=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==25) ) {
                    alt34=1;
                }
                else if ( (LA34_1==EOF||(LA34_1>=RULE_ID && LA34_1<=RULE_STRING)||(LA34_1>=RULE_INT && LA34_1<=RULE_DECIMAL)||(LA34_1>=17 && LA34_1<=20)||(LA34_1>=28 && LA34_1<=30)||(LA34_1>=33 && LA34_1<=40)||(LA34_1>=45 && LA34_1<=75)||(LA34_1>=77 && LA34_1<=100)) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
                }
                break;
            case 87:
                {
                int LA34_2 = input.LA(2);

                if ( (LA34_2==EOF||(LA34_2>=RULE_ID && LA34_2<=RULE_STRING)||(LA34_2>=RULE_INT && LA34_2<=RULE_DECIMAL)||(LA34_2>=17 && LA34_2<=20)||(LA34_2>=28 && LA34_2<=30)||(LA34_2>=33 && LA34_2<=40)||(LA34_2>=45 && LA34_2<=75)||(LA34_2>=77 && LA34_2<=100)) ) {
                    alt34=2;
                }
                else if ( (LA34_2==25) ) {
                    alt34=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 2, input);

                    throw nvae;
                }
                }
                break;
            case 88:
                {
                int LA34_3 = input.LA(2);

                if ( (LA34_3==EOF||(LA34_3>=RULE_ID && LA34_3<=RULE_STRING)||(LA34_3>=RULE_INT && LA34_3<=RULE_DECIMAL)||(LA34_3>=17 && LA34_3<=20)||(LA34_3>=28 && LA34_3<=30)||(LA34_3>=33 && LA34_3<=40)||(LA34_3>=45 && LA34_3<=75)||(LA34_3>=77 && LA34_3<=100)) ) {
                    alt34=2;
                }
                else if ( (LA34_3==25) ) {
                    alt34=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 3, input);

                    throw nvae;
                }
                }
                break;
            case 89:
                {
                int LA34_4 = input.LA(2);

                if ( (LA34_4==25) ) {
                    alt34=1;
                }
                else if ( (LA34_4==EOF||(LA34_4>=RULE_ID && LA34_4<=RULE_STRING)||(LA34_4>=RULE_INT && LA34_4<=RULE_DECIMAL)||(LA34_4>=17 && LA34_4<=20)||(LA34_4>=28 && LA34_4<=30)||(LA34_4>=33 && LA34_4<=40)||(LA34_4>=45 && LA34_4<=75)||(LA34_4>=77 && LA34_4<=100)) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 4, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                int LA34_5 = input.LA(2);

                if ( (LA34_5==25) ) {
                    alt34=1;
                }
                else if ( (LA34_5==EOF||(LA34_5>=RULE_ID && LA34_5<=RULE_STRING)||(LA34_5>=RULE_INT && LA34_5<=RULE_DECIMAL)||(LA34_5>=17 && LA34_5<=20)||(LA34_5>=28 && LA34_5<=30)||(LA34_5>=33 && LA34_5<=40)||(LA34_5>=45 && LA34_5<=75)||(LA34_5>=77 && LA34_5<=100)) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 18:
            case 28:
            case 33:
            case 35:
            case 38:
            case 39:
            case 40:
            case 50:
            case 69:
            case 75:
            case 77:
            case 79:
            case 82:
            case 83:
            case 84:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 99:
                {
                alt34=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalRdfPatternLanguage.g:2653:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalRdfPatternLanguage.g:2653:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalRdfPatternLanguage.g:2654:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalRdfPatternLanguage.g:2654:4: ()
                    // InternalRdfPatternLanguage.g:2655:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalRdfPatternLanguage.g:2661:4: ( ( ruleFeatureCallID ) )
                    // InternalRdfPatternLanguage.g:2662:5: ( ruleFeatureCallID )
                    {
                    // InternalRdfPatternLanguage.g:2662:5: ( ruleFeatureCallID )
                    // InternalRdfPatternLanguage.g:2663:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_39);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalRdfPatternLanguage.g:2684:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalRdfPatternLanguage.g:2685:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalRdfPatternLanguage.g:2685:5: (lv_value_3_0= ruleXAssignment )
                    // InternalRdfPatternLanguage.g:2686:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:2705:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalRdfPatternLanguage.g:2705:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalRdfPatternLanguage.g:2706:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_40);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalRdfPatternLanguage.g:2714:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt33=2;
                    alt33 = dfa33.predict(input);
                    switch (alt33) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:2715:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalRdfPatternLanguage.g:2715:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalRdfPatternLanguage.g:2716:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalRdfPatternLanguage.g:2726:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalRdfPatternLanguage.g:2727:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalRdfPatternLanguage.g:2727:7: ()
                            // InternalRdfPatternLanguage.g:2728:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalRdfPatternLanguage.g:2734:7: ( ( ruleOpMultiAssign ) )
                            // InternalRdfPatternLanguage.g:2735:8: ( ruleOpMultiAssign )
                            {
                            // InternalRdfPatternLanguage.g:2735:8: ( ruleOpMultiAssign )
                            // InternalRdfPatternLanguage.g:2736:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_39);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalRdfPatternLanguage.g:2752:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalRdfPatternLanguage.g:2753:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalRdfPatternLanguage.g:2753:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalRdfPatternLanguage.g:2754:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalRdfPatternLanguage.g:2777:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalRdfPatternLanguage.g:2777:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalRdfPatternLanguage.g:2778:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalRdfPatternLanguage.g:2784:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2790:2: (kw= '=' )
            // InternalRdfPatternLanguage.g:2791:2: kw= '='
            {
            kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalRdfPatternLanguage.g:2799:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalRdfPatternLanguage.g:2799:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalRdfPatternLanguage.g:2800:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalRdfPatternLanguage.g:2806:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2812:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalRdfPatternLanguage.g:2813:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalRdfPatternLanguage.g:2813:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt36=7;
            switch ( input.LA(1) ) {
            case 45:
                {
                alt36=1;
                }
                break;
            case 46:
                {
                alt36=2;
                }
                break;
            case 47:
                {
                alt36=3;
                }
                break;
            case 48:
                {
                alt36=4;
                }
                break;
            case 49:
                {
                alt36=5;
                }
                break;
            case 50:
                {
                alt36=6;
                }
                break;
            case 51:
                {
                alt36=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalRdfPatternLanguage.g:2814:3: kw= '+='
                    {
                    kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:2820:3: kw= '-='
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:2826:3: kw= '*='
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:2832:3: kw= '/='
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:2838:3: kw= '%='
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalRdfPatternLanguage.g:2844:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalRdfPatternLanguage.g:2844:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalRdfPatternLanguage.g:2845:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,50,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,50,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalRdfPatternLanguage.g:2862:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalRdfPatternLanguage.g:2862:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalRdfPatternLanguage.g:2863:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,51,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:2868:4: (kw= '>' )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==51) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:2869:5: kw= '>'
                            {
                            kw=(Token)match(input,51,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalRdfPatternLanguage.g:2885:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalRdfPatternLanguage.g:2885:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalRdfPatternLanguage.g:2886:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalRdfPatternLanguage.g:2892:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2898:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalRdfPatternLanguage.g:2899:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalRdfPatternLanguage.g:2899:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalRdfPatternLanguage.g:2900:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:2908:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==53) ) {
                    int LA37_2 = input.LA(2);

                    if ( (synpred2_InternalRdfPatternLanguage()) ) {
                        alt37=1;
                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:2909:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalRdfPatternLanguage.g:2909:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalRdfPatternLanguage.g:2910:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:2920:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalRdfPatternLanguage.g:2921:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalRdfPatternLanguage.g:2921:6: ()
            	    // InternalRdfPatternLanguage.g:2922:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:2928:6: ( ( ruleOpOr ) )
            	    // InternalRdfPatternLanguage.g:2929:7: ( ruleOpOr )
            	    {
            	    // InternalRdfPatternLanguage.g:2929:7: ( ruleOpOr )
            	    // InternalRdfPatternLanguage.g:2930:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:2946:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalRdfPatternLanguage.g:2947:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalRdfPatternLanguage.g:2947:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalRdfPatternLanguage.g:2948:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalRdfPatternLanguage.g:2970:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalRdfPatternLanguage.g:2970:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalRdfPatternLanguage.g:2971:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalRdfPatternLanguage.g:2977:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:2983:2: (kw= '||' )
            // InternalRdfPatternLanguage.g:2984:2: kw= '||'
            {
            kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalRdfPatternLanguage.g:2992:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalRdfPatternLanguage.g:2992:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalRdfPatternLanguage.g:2993:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalRdfPatternLanguage.g:2999:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3005:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalRdfPatternLanguage.g:3006:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3006:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalRdfPatternLanguage.g:3007:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_45);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:3015:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==54) ) {
                    int LA38_2 = input.LA(2);

                    if ( (synpred3_InternalRdfPatternLanguage()) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:3016:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3016:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalRdfPatternLanguage.g:3017:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3027:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalRdfPatternLanguage.g:3028:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3028:6: ()
            	    // InternalRdfPatternLanguage.g:3029:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:3035:6: ( ( ruleOpAnd ) )
            	    // InternalRdfPatternLanguage.g:3036:7: ( ruleOpAnd )
            	    {
            	    // InternalRdfPatternLanguage.g:3036:7: ( ruleOpAnd )
            	    // InternalRdfPatternLanguage.g:3037:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3053:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalRdfPatternLanguage.g:3054:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalRdfPatternLanguage.g:3054:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalRdfPatternLanguage.g:3055:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalRdfPatternLanguage.g:3077:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalRdfPatternLanguage.g:3077:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalRdfPatternLanguage.g:3078:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalRdfPatternLanguage.g:3084:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3090:2: (kw= '&&' )
            // InternalRdfPatternLanguage.g:3091:2: kw= '&&'
            {
            kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalRdfPatternLanguage.g:3099:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalRdfPatternLanguage.g:3099:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalRdfPatternLanguage.g:3100:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalRdfPatternLanguage.g:3106:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3112:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalRdfPatternLanguage.g:3113:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3113:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalRdfPatternLanguage.g:3114:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_46);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:3122:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop39:
            do {
                int alt39=2;
                switch ( input.LA(1) ) {
                case 55:
                    {
                    int LA39_2 = input.LA(2);

                    if ( (synpred4_InternalRdfPatternLanguage()) ) {
                        alt39=1;
                    }


                    }
                    break;
                case 56:
                    {
                    int LA39_3 = input.LA(2);

                    if ( (synpred4_InternalRdfPatternLanguage()) ) {
                        alt39=1;
                    }


                    }
                    break;
                case 57:
                    {
                    int LA39_4 = input.LA(2);

                    if ( (synpred4_InternalRdfPatternLanguage()) ) {
                        alt39=1;
                    }


                    }
                    break;
                case 58:
                    {
                    int LA39_5 = input.LA(2);

                    if ( (synpred4_InternalRdfPatternLanguage()) ) {
                        alt39=1;
                    }


                    }
                    break;

                }

                switch (alt39) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:3123:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3123:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalRdfPatternLanguage.g:3124:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3134:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalRdfPatternLanguage.g:3135:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3135:6: ()
            	    // InternalRdfPatternLanguage.g:3136:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:3142:6: ( ( ruleOpEquality ) )
            	    // InternalRdfPatternLanguage.g:3143:7: ( ruleOpEquality )
            	    {
            	    // InternalRdfPatternLanguage.g:3143:7: ( ruleOpEquality )
            	    // InternalRdfPatternLanguage.g:3144:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3160:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalRdfPatternLanguage.g:3161:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalRdfPatternLanguage.g:3161:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalRdfPatternLanguage.g:3162:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_46);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalRdfPatternLanguage.g:3184:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalRdfPatternLanguage.g:3184:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalRdfPatternLanguage.g:3185:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalRdfPatternLanguage.g:3191:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3197:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalRdfPatternLanguage.g:3198:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalRdfPatternLanguage.g:3198:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt40=4;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt40=1;
                }
                break;
            case 56:
                {
                alt40=2;
                }
                break;
            case 57:
                {
                alt40=3;
                }
                break;
            case 58:
                {
                alt40=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3199:3: kw= '=='
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3205:3: kw= '!='
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:3211:3: kw= '==='
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:3217:3: kw= '!=='
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalRdfPatternLanguage.g:3226:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalRdfPatternLanguage.g:3226:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalRdfPatternLanguage.g:3227:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalRdfPatternLanguage.g:3233:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3239:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalRdfPatternLanguage.g:3240:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3240:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalRdfPatternLanguage.g:3241:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_47);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:3249:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop41:
            do {
                int alt41=3;
                switch ( input.LA(1) ) {
                case 50:
                    {
                    int LA41_2 = input.LA(2);

                    if ( (synpred6_InternalRdfPatternLanguage()) ) {
                        alt41=2;
                    }


                    }
                    break;
                case 51:
                    {
                    int LA41_3 = input.LA(2);

                    if ( (synpred6_InternalRdfPatternLanguage()) ) {
                        alt41=2;
                    }


                    }
                    break;
                case 59:
                    {
                    int LA41_4 = input.LA(2);

                    if ( (synpred5_InternalRdfPatternLanguage()) ) {
                        alt41=1;
                    }


                    }
                    break;
                case 52:
                    {
                    int LA41_5 = input.LA(2);

                    if ( (synpred6_InternalRdfPatternLanguage()) ) {
                        alt41=2;
                    }


                    }
                    break;

                }

                switch (alt41) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:3250:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3250:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalRdfPatternLanguage.g:3251:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3251:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalRdfPatternLanguage.g:3252:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalRdfPatternLanguage.g:3258:6: ( () otherlv_2= 'instanceof' )
            	    // InternalRdfPatternLanguage.g:3259:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalRdfPatternLanguage.g:3259:7: ()
            	    // InternalRdfPatternLanguage.g:3260:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,59,FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3272:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalRdfPatternLanguage.g:3273:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalRdfPatternLanguage.g:3273:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalRdfPatternLanguage.g:3274:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalRdfPatternLanguage.g:3293:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3293:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalRdfPatternLanguage.g:3294:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3294:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalRdfPatternLanguage.g:3295:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3305:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalRdfPatternLanguage.g:3306:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3306:7: ()
            	    // InternalRdfPatternLanguage.g:3307:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:3313:7: ( ( ruleOpCompare ) )
            	    // InternalRdfPatternLanguage.g:3314:8: ( ruleOpCompare )
            	    {
            	    // InternalRdfPatternLanguage.g:3314:8: ( ruleOpCompare )
            	    // InternalRdfPatternLanguage.g:3315:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3331:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalRdfPatternLanguage.g:3332:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalRdfPatternLanguage.g:3332:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalRdfPatternLanguage.g:3333:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalRdfPatternLanguage.g:3356:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalRdfPatternLanguage.g:3356:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalRdfPatternLanguage.g:3357:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalRdfPatternLanguage.g:3363:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3369:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalRdfPatternLanguage.g:3370:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalRdfPatternLanguage.g:3370:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt42=4;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt42=1;
                }
                break;
            case 50:
                {
                int LA42_2 = input.LA(2);

                if ( (LA42_2==EOF||(LA42_2>=RULE_ID && LA42_2<=RULE_STRING)||(LA42_2>=RULE_INT && LA42_2<=RULE_DECIMAL)||LA42_2==18||LA42_2==28||LA42_2==33||LA42_2==35||(LA42_2>=38 && LA42_2<=40)||LA42_2==50||LA42_2==69||LA42_2==75||LA42_2==77||LA42_2==79||(LA42_2>=82 && LA42_2<=84)||(LA42_2>=87 && LA42_2<=97)||LA42_2==99) ) {
                    alt42=4;
                }
                else if ( (LA42_2==25) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;
                }
                }
                break;
            case 51:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3371:3: kw= '>='
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3377:3: (kw= '<' kw= '=' )
                    {
                    // InternalRdfPatternLanguage.g:3377:3: (kw= '<' kw= '=' )
                    // InternalRdfPatternLanguage.g:3378:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,50,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:3390:3: kw= '>'
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:3396:3: kw= '<'
                    {
                    kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalRdfPatternLanguage.g:3405:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalRdfPatternLanguage.g:3405:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalRdfPatternLanguage.g:3406:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalRdfPatternLanguage.g:3412:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3418:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalRdfPatternLanguage.g:3419:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3419:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalRdfPatternLanguage.g:3420:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_49);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:3428:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop43:
            do {
                int alt43=2;
                alt43 = dfa43.predict(input);
                switch (alt43) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:3429:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3429:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalRdfPatternLanguage.g:3430:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3440:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalRdfPatternLanguage.g:3441:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3441:6: ()
            	    // InternalRdfPatternLanguage.g:3442:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:3448:6: ( ( ruleOpOther ) )
            	    // InternalRdfPatternLanguage.g:3449:7: ( ruleOpOther )
            	    {
            	    // InternalRdfPatternLanguage.g:3449:7: ( ruleOpOther )
            	    // InternalRdfPatternLanguage.g:3450:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3466:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalRdfPatternLanguage.g:3467:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalRdfPatternLanguage.g:3467:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalRdfPatternLanguage.g:3468:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalRdfPatternLanguage.g:3490:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalRdfPatternLanguage.g:3490:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalRdfPatternLanguage.g:3491:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalRdfPatternLanguage.g:3497:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3503:2: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalRdfPatternLanguage.g:3504:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalRdfPatternLanguage.g:3504:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt46=9;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3505:3: kw= '->'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3511:3: kw= '..<'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:3517:3: (kw= '>' kw= '..' )
                    {
                    // InternalRdfPatternLanguage.g:3517:3: (kw= '>' kw= '..' )
                    // InternalRdfPatternLanguage.g:3518:4: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,51,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:3530:3: kw= '..'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:3536:3: kw= '=>'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalRdfPatternLanguage.g:3542:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalRdfPatternLanguage.g:3542:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalRdfPatternLanguage.g:3543:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,51,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:3548:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==51) ) {
                        int LA44_1 = input.LA(2);

                        if ( (LA44_1==EOF||(LA44_1>=RULE_ID && LA44_1<=RULE_STRING)||(LA44_1>=RULE_INT && LA44_1<=RULE_DECIMAL)||LA44_1==18||LA44_1==28||LA44_1==33||LA44_1==35||(LA44_1>=38 && LA44_1<=40)||LA44_1==50||LA44_1==69||LA44_1==75||LA44_1==77||LA44_1==79||(LA44_1>=82 && LA44_1<=84)||(LA44_1>=87 && LA44_1<=97)||LA44_1==99) ) {
                            alt44=2;
                        }
                        else if ( (LA44_1==51) && (synpred8_InternalRdfPatternLanguage())) {
                            alt44=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 44, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 0, input);

                        throw nvae;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:3549:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalRdfPatternLanguage.g:3549:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalRdfPatternLanguage.g:3550:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalRdfPatternLanguage.g:3555:6: (kw= '>' kw= '>' )
                            // InternalRdfPatternLanguage.g:3556:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,51,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalRdfPatternLanguage.g:3569:5: kw= '>'
                            {
                            kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalRdfPatternLanguage.g:3577:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalRdfPatternLanguage.g:3577:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalRdfPatternLanguage.g:3578:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,50,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:3583:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt45=3;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==50) ) {
                        int LA45_1 = input.LA(2);

                        if ( (synpred9_InternalRdfPatternLanguage()) ) {
                            alt45=1;
                        }
                        else if ( (true) ) {
                            alt45=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 45, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA45_0==63) ) {
                        alt45=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:3584:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalRdfPatternLanguage.g:3584:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalRdfPatternLanguage.g:3585:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalRdfPatternLanguage.g:3590:6: (kw= '<' kw= '<' )
                            // InternalRdfPatternLanguage.g:3591:7: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,50,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalRdfPatternLanguage.g:3604:5: kw= '<'
                            {
                            kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalRdfPatternLanguage.g:3610:5: kw= '=>'
                            {
                            kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalRdfPatternLanguage.g:3618:3: kw= '<>'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalRdfPatternLanguage.g:3624:3: kw= '?:'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalRdfPatternLanguage.g:3633:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalRdfPatternLanguage.g:3633:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalRdfPatternLanguage.g:3634:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalRdfPatternLanguage.g:3640:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3646:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalRdfPatternLanguage.g:3647:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3647:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalRdfPatternLanguage.g:3648:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_53);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:3656:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==33) ) {
                    int LA47_2 = input.LA(2);

                    if ( (synpred10_InternalRdfPatternLanguage()) ) {
                        alt47=1;
                    }


                }
                else if ( (LA47_0==38) ) {
                    int LA47_3 = input.LA(2);

                    if ( (synpred10_InternalRdfPatternLanguage()) ) {
                        alt47=1;
                    }


                }


                switch (alt47) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:3657:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3657:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalRdfPatternLanguage.g:3658:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3668:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalRdfPatternLanguage.g:3669:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3669:6: ()
            	    // InternalRdfPatternLanguage.g:3670:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:3676:6: ( ( ruleOpAdd ) )
            	    // InternalRdfPatternLanguage.g:3677:7: ( ruleOpAdd )
            	    {
            	    // InternalRdfPatternLanguage.g:3677:7: ( ruleOpAdd )
            	    // InternalRdfPatternLanguage.g:3678:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3694:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalRdfPatternLanguage.g:3695:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalRdfPatternLanguage.g:3695:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalRdfPatternLanguage.g:3696:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_53);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalRdfPatternLanguage.g:3718:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalRdfPatternLanguage.g:3718:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalRdfPatternLanguage.g:3719:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalRdfPatternLanguage.g:3725:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3731:2: ( (kw= '+' | kw= '-' ) )
            // InternalRdfPatternLanguage.g:3732:2: (kw= '+' | kw= '-' )
            {
            // InternalRdfPatternLanguage.g:3732:2: (kw= '+' | kw= '-' )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==33) ) {
                alt48=1;
            }
            else if ( (LA48_0==38) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3733:3: kw= '+'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3739:3: kw= '-'
                    {
                    kw=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalRdfPatternLanguage.g:3748:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalRdfPatternLanguage.g:3748:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalRdfPatternLanguage.g:3749:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalRdfPatternLanguage.g:3755:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3761:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalRdfPatternLanguage.g:3762:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3762:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalRdfPatternLanguage.g:3763:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_54);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:3771:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop49:
            do {
                int alt49=2;
                switch ( input.LA(1) ) {
                case 37:
                    {
                    int LA49_2 = input.LA(2);

                    if ( (synpred11_InternalRdfPatternLanguage()) ) {
                        alt49=1;
                    }


                    }
                    break;
                case 66:
                    {
                    int LA49_3 = input.LA(2);

                    if ( (synpred11_InternalRdfPatternLanguage()) ) {
                        alt49=1;
                    }


                    }
                    break;
                case 67:
                    {
                    int LA49_4 = input.LA(2);

                    if ( (synpred11_InternalRdfPatternLanguage()) ) {
                        alt49=1;
                    }


                    }
                    break;
                case 68:
                    {
                    int LA49_5 = input.LA(2);

                    if ( (synpred11_InternalRdfPatternLanguage()) ) {
                        alt49=1;
                    }


                    }
                    break;

                }

                switch (alt49) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:3772:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3772:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalRdfPatternLanguage.g:3773:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3783:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalRdfPatternLanguage.g:3784:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalRdfPatternLanguage.g:3784:6: ()
            	    // InternalRdfPatternLanguage.g:3785:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:3791:6: ( ( ruleOpMulti ) )
            	    // InternalRdfPatternLanguage.g:3792:7: ( ruleOpMulti )
            	    {
            	    // InternalRdfPatternLanguage.g:3792:7: ( ruleOpMulti )
            	    // InternalRdfPatternLanguage.g:3793:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:3809:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalRdfPatternLanguage.g:3810:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalRdfPatternLanguage.g:3810:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalRdfPatternLanguage.g:3811:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_54);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalRdfPatternLanguage.g:3833:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalRdfPatternLanguage.g:3833:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalRdfPatternLanguage.g:3834:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalRdfPatternLanguage.g:3840:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3846:2: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalRdfPatternLanguage.g:3847:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalRdfPatternLanguage.g:3847:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt50=4;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt50=1;
                }
                break;
            case 66:
                {
                alt50=2;
                }
                break;
            case 67:
                {
                alt50=3;
                }
                break;
            case 68:
                {
                alt50=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3848:3: kw= '*'
                    {
                    kw=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3854:3: kw= '**'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:3860:3: kw= '/'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:3866:3: kw= '%'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalRdfPatternLanguage.g:3875:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalRdfPatternLanguage.g:3875:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalRdfPatternLanguage.g:3876:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalRdfPatternLanguage.g:3882:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3888:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalRdfPatternLanguage.g:3889:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalRdfPatternLanguage.g:3889:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==33||LA51_0==38||LA51_0==69) ) {
                alt51=1;
            }
            else if ( ((LA51_0>=RULE_ID && LA51_0<=RULE_STRING)||(LA51_0>=RULE_INT && LA51_0<=RULE_DECIMAL)||LA51_0==18||LA51_0==28||LA51_0==35||(LA51_0>=39 && LA51_0<=40)||LA51_0==50||LA51_0==75||LA51_0==77||LA51_0==79||(LA51_0>=82 && LA51_0<=84)||(LA51_0>=87 && LA51_0<=97)||LA51_0==99) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3890:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalRdfPatternLanguage.g:3890:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalRdfPatternLanguage.g:3891:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalRdfPatternLanguage.g:3891:4: ()
                    // InternalRdfPatternLanguage.g:3892:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalRdfPatternLanguage.g:3898:4: ( ( ruleOpUnary ) )
                    // InternalRdfPatternLanguage.g:3899:5: ( ruleOpUnary )
                    {
                    // InternalRdfPatternLanguage.g:3899:5: ( ruleOpUnary )
                    // InternalRdfPatternLanguage.g:3900:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:3914:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalRdfPatternLanguage.g:3915:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalRdfPatternLanguage.g:3915:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalRdfPatternLanguage.g:3916:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3935:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalRdfPatternLanguage.g:3947:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalRdfPatternLanguage.g:3947:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalRdfPatternLanguage.g:3948:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalRdfPatternLanguage.g:3954:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3960:2: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalRdfPatternLanguage.g:3961:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalRdfPatternLanguage.g:3961:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt52=3;
            switch ( input.LA(1) ) {
            case 69:
                {
                alt52=1;
                }
                break;
            case 38:
                {
                alt52=2;
                }
                break;
            case 33:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalRdfPatternLanguage.g:3962:3: kw= '!'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:3968:3: kw= '-'
                    {
                    kw=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:3974:3: kw= '+'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalRdfPatternLanguage.g:3983:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalRdfPatternLanguage.g:3983:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalRdfPatternLanguage.g:3984:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalRdfPatternLanguage.g:3990:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:3996:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalRdfPatternLanguage.g:3997:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalRdfPatternLanguage.g:3997:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalRdfPatternLanguage.g:3998:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_55);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:4006:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==70) ) {
                    int LA53_2 = input.LA(2);

                    if ( (synpred12_InternalRdfPatternLanguage()) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:4007:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalRdfPatternLanguage.g:4007:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalRdfPatternLanguage.g:4008:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalRdfPatternLanguage.g:4014:5: ( () otherlv_2= 'as' )
            	    // InternalRdfPatternLanguage.g:4015:6: () otherlv_2= 'as'
            	    {
            	    // InternalRdfPatternLanguage.g:4015:6: ()
            	    // InternalRdfPatternLanguage.g:4016:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,70,FOLLOW_48); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:4028:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalRdfPatternLanguage.g:4029:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalRdfPatternLanguage.g:4029:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalRdfPatternLanguage.g:4030:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalRdfPatternLanguage.g:4052:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalRdfPatternLanguage.g:4052:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalRdfPatternLanguage.g:4053:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalRdfPatternLanguage.g:4059:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4065:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalRdfPatternLanguage.g:4066:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalRdfPatternLanguage.g:4066:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalRdfPatternLanguage.g:4067:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_56);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:4075:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==71) ) {
                int LA54_1 = input.LA(2);

                if ( (synpred13_InternalRdfPatternLanguage()) ) {
                    alt54=1;
                }
            }
            else if ( (LA54_0==72) ) {
                int LA54_2 = input.LA(2);

                if ( (synpred13_InternalRdfPatternLanguage()) ) {
                    alt54=1;
                }
            }
            switch (alt54) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4076:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalRdfPatternLanguage.g:4086:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalRdfPatternLanguage.g:4087:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalRdfPatternLanguage.g:4087:5: ()
                    // InternalRdfPatternLanguage.g:4088:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalRdfPatternLanguage.g:4094:5: ( ( ruleOpPostfix ) )
                    // InternalRdfPatternLanguage.g:4095:6: ( ruleOpPostfix )
                    {
                    // InternalRdfPatternLanguage.g:4095:6: ( ruleOpPostfix )
                    // InternalRdfPatternLanguage.g:4096:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalRdfPatternLanguage.g:4116:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalRdfPatternLanguage.g:4116:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalRdfPatternLanguage.g:4117:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalRdfPatternLanguage.g:4123:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4129:2: ( (kw= '++' | kw= '--' ) )
            // InternalRdfPatternLanguage.g:4130:2: (kw= '++' | kw= '--' )
            {
            // InternalRdfPatternLanguage.g:4130:2: (kw= '++' | kw= '--' )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==71) ) {
                alt55=1;
            }
            else if ( (LA55_0==72) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4131:3: kw= '++'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:4137:3: kw= '--'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalRdfPatternLanguage.g:4146:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalRdfPatternLanguage.g:4146:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalRdfPatternLanguage.g:4147:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalRdfPatternLanguage.g:4153:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4159:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalRdfPatternLanguage.g:4160:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalRdfPatternLanguage.g:4160:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalRdfPatternLanguage.g:4161:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_57);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:4169:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop64:
            do {
                int alt64=3;
                switch ( input.LA(1) ) {
                case 34:
                    {
                    int LA64_2 = input.LA(2);

                    if ( (synpred14_InternalRdfPatternLanguage()) ) {
                        alt64=1;
                    }
                    else if ( (synpred15_InternalRdfPatternLanguage()) ) {
                        alt64=2;
                    }


                    }
                    break;
                case 73:
                    {
                    int LA64_3 = input.LA(2);

                    if ( (synpred14_InternalRdfPatternLanguage()) ) {
                        alt64=1;
                    }
                    else if ( (synpred15_InternalRdfPatternLanguage()) ) {
                        alt64=2;
                    }


                    }
                    break;
                case 74:
                    {
                    int LA64_4 = input.LA(2);

                    if ( (synpred15_InternalRdfPatternLanguage()) ) {
                        alt64=2;
                    }


                    }
                    break;

                }

                switch (alt64) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:4170:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:4170:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalRdfPatternLanguage.g:4171:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalRdfPatternLanguage.g:4171:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalRdfPatternLanguage.g:4172:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalRdfPatternLanguage.g:4192:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalRdfPatternLanguage.g:4193:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalRdfPatternLanguage.g:4193:7: ()
            	    // InternalRdfPatternLanguage.g:4194:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:4200:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt56=2;
            	    int LA56_0 = input.LA(1);

            	    if ( (LA56_0==34) ) {
            	        alt56=1;
            	    }
            	    else if ( (LA56_0==73) ) {
            	        alt56=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 56, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt56) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:4201:8: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,34,FOLLOW_58); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalRdfPatternLanguage.g:4206:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalRdfPatternLanguage.g:4206:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalRdfPatternLanguage.g:4207:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalRdfPatternLanguage.g:4207:9: (lv_explicitStatic_3_0= '::' )
            	            // InternalRdfPatternLanguage.g:4208:10: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,73,FOLLOW_58); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalRdfPatternLanguage.g:4221:7: ( ( ruleFeatureCallID ) )
            	    // InternalRdfPatternLanguage.g:4222:8: ( ruleFeatureCallID )
            	    {
            	    // InternalRdfPatternLanguage.g:4222:8: ( ruleFeatureCallID )
            	    // InternalRdfPatternLanguage.g:4223:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_23);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:4246:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalRdfPatternLanguage.g:4247:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalRdfPatternLanguage.g:4247:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalRdfPatternLanguage.g:4248:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalRdfPatternLanguage.g:4267:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalRdfPatternLanguage.g:4267:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalRdfPatternLanguage.g:4268:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalRdfPatternLanguage.g:4268:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalRdfPatternLanguage.g:4269:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:4289:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalRdfPatternLanguage.g:4290:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalRdfPatternLanguage.g:4290:7: ()
            	    // InternalRdfPatternLanguage.g:4291:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalRdfPatternLanguage.g:4297:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt57=3;
            	    switch ( input.LA(1) ) {
            	    case 34:
            	        {
            	        alt57=1;
            	        }
            	        break;
            	    case 74:
            	        {
            	        alt57=2;
            	        }
            	        break;
            	    case 73:
            	        {
            	        alt57=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt57) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:4298:8: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,34,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalRdfPatternLanguage.g:4303:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalRdfPatternLanguage.g:4303:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalRdfPatternLanguage.g:4304:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalRdfPatternLanguage.g:4304:9: (lv_nullSafe_9_0= '?.' )
            	            // InternalRdfPatternLanguage.g:4305:10: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,74,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", true, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalRdfPatternLanguage.g:4318:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalRdfPatternLanguage.g:4318:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalRdfPatternLanguage.g:4319:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalRdfPatternLanguage.g:4319:9: (lv_explicitStatic_10_0= '::' )
            	            // InternalRdfPatternLanguage.g:4320:10: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,73,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:4335:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt59=2;
            	    int LA59_0 = input.LA(1);

            	    if ( (LA59_0==50) ) {
            	        alt59=1;
            	    }
            	    switch (alt59) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:4336:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,50,FOLLOW_60); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalRdfPatternLanguage.g:4340:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalRdfPatternLanguage.g:4341:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalRdfPatternLanguage.g:4341:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalRdfPatternLanguage.g:4342:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_61);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalRdfPatternLanguage.g:4359:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop58:
            	            do {
            	                int alt58=2;
            	                int LA58_0 = input.LA(1);

            	                if ( (LA58_0==20) ) {
            	                    alt58=1;
            	                }


            	                switch (alt58) {
            	            	case 1 :
            	            	    // InternalRdfPatternLanguage.g:4360:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,20,FOLLOW_60); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalRdfPatternLanguage.g:4364:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalRdfPatternLanguage.g:4365:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalRdfPatternLanguage.g:4365:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalRdfPatternLanguage.g:4366:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_61);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop58;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,51,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalRdfPatternLanguage.g:4389:5: ( ( ruleIdOrSuper ) )
            	    // InternalRdfPatternLanguage.g:4390:6: ( ruleIdOrSuper )
            	    {
            	    // InternalRdfPatternLanguage.g:4390:6: ( ruleIdOrSuper )
            	    // InternalRdfPatternLanguage.g:4391:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_62);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:4405:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt62=2;
            	    alt62 = dfa62.predict(input);
            	    switch (alt62) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:4406:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalRdfPatternLanguage.g:4406:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalRdfPatternLanguage.g:4407:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalRdfPatternLanguage.g:4411:7: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalRdfPatternLanguage.g:4412:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,18,FOLLOW_63); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalRdfPatternLanguage.g:4424:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt61=3;
            	            alt61 = dfa61.predict(input);
            	            switch (alt61) {
            	                case 1 :
            	                    // InternalRdfPatternLanguage.g:4425:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalRdfPatternLanguage.g:4425:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalRdfPatternLanguage.g:4426:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalRdfPatternLanguage.g:4451:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalRdfPatternLanguage.g:4452:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_10);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalRdfPatternLanguage.g:4470:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalRdfPatternLanguage.g:4470:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalRdfPatternLanguage.g:4471:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalRdfPatternLanguage.g:4471:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalRdfPatternLanguage.g:4472:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalRdfPatternLanguage.g:4472:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalRdfPatternLanguage.g:4473:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_19);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalRdfPatternLanguage.g:4490:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop60:
            	                    do {
            	                        int alt60=2;
            	                        int LA60_0 = input.LA(1);

            	                        if ( (LA60_0==20) ) {
            	                            alt60=1;
            	                        }


            	                        switch (alt60) {
            	                    	case 1 :
            	                    	    // InternalRdfPatternLanguage.g:4491:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,20,FOLLOW_39); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalRdfPatternLanguage.g:4495:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalRdfPatternLanguage.g:4496:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalRdfPatternLanguage.g:4496:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalRdfPatternLanguage.g:4497:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_19);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop60;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,19,FOLLOW_64); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalRdfPatternLanguage.g:4522:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt63=2;
            	    alt63 = dfa63.predict(input);
            	    switch (alt63) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:4523:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalRdfPatternLanguage.g:4529:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalRdfPatternLanguage.g:4530:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_57);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalRdfPatternLanguage.g:4553:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalRdfPatternLanguage.g:4553:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalRdfPatternLanguage.g:4554:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalRdfPatternLanguage.g:4560:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4566:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalRdfPatternLanguage.g:4567:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalRdfPatternLanguage.g:4567:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt65=15;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4568:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:4577:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:4586:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:4595:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalRdfPatternLanguage.g:4595:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalRdfPatternLanguage.g:4596:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:4613:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalRdfPatternLanguage.g:4622:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalRdfPatternLanguage.g:4631:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalRdfPatternLanguage.g:4640:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalRdfPatternLanguage.g:4640:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalRdfPatternLanguage.g:4641:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalRdfPatternLanguage.g:4664:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalRdfPatternLanguage.g:4673:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalRdfPatternLanguage.g:4682:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalRdfPatternLanguage.g:4691:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalRdfPatternLanguage.g:4700:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalRdfPatternLanguage.g:4709:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalRdfPatternLanguage.g:4718:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalRdfPatternLanguage.g:4730:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:4730:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalRdfPatternLanguage.g:4731:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalRdfPatternLanguage.g:4737:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4743:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalRdfPatternLanguage.g:4744:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalRdfPatternLanguage.g:4744:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt66=7;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==75) ) {
                alt66=1;
            }
            else if ( (LA66_0==35) && (synpred21_InternalRdfPatternLanguage())) {
                alt66=2;
            }
            else if ( ((LA66_0>=39 && LA66_0<=40)) ) {
                alt66=3;
            }
            else if ( ((LA66_0>=RULE_INT && LA66_0<=RULE_DECIMAL)) ) {
                alt66=4;
            }
            else if ( (LA66_0==93) ) {
                alt66=5;
            }
            else if ( (LA66_0==RULE_STRING) ) {
                alt66=6;
            }
            else if ( (LA66_0==94) ) {
                alt66=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4745:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:4754:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalRdfPatternLanguage.g:4754:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalRdfPatternLanguage.g:4755:4: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:4771:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:4780:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:4789:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalRdfPatternLanguage.g:4798:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalRdfPatternLanguage.g:4807:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalRdfPatternLanguage.g:4819:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:4819:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalRdfPatternLanguage.g:4820:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalRdfPatternLanguage.g:4826:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4832:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalRdfPatternLanguage.g:4833:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalRdfPatternLanguage.g:4833:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==75) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==35) ) {
                    alt67=2;
                }
                else if ( (LA67_1==28) ) {
                    alt67=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4834:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:4843:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalRdfPatternLanguage.g:4855:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:4855:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalRdfPatternLanguage.g:4856:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalRdfPatternLanguage.g:4862:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4868:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalRdfPatternLanguage.g:4869:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalRdfPatternLanguage.g:4869:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalRdfPatternLanguage.g:4870:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalRdfPatternLanguage.g:4870:3: ()
            // InternalRdfPatternLanguage.g:4871:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,28,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:4885:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=RULE_ID && LA69_0<=RULE_STRING)||(LA69_0>=RULE_INT && LA69_0<=RULE_DECIMAL)||LA69_0==18||LA69_0==28||LA69_0==33||LA69_0==35||(LA69_0>=38 && LA69_0<=40)||LA69_0==50||LA69_0==69||LA69_0==75||LA69_0==77||LA69_0==79||(LA69_0>=82 && LA69_0<=84)||(LA69_0>=87 && LA69_0<=97)||LA69_0==99) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4886:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:4886:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:4887:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:4887:5: (lv_elements_3_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:4888:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:4905:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==20) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:4906:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:4910:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalRdfPatternLanguage.g:4911:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalRdfPatternLanguage.g:4911:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalRdfPatternLanguage.g:4912:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalRdfPatternLanguage.g:4939:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:4939:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalRdfPatternLanguage.g:4940:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalRdfPatternLanguage.g:4946:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:4952:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalRdfPatternLanguage.g:4953:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalRdfPatternLanguage.g:4953:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalRdfPatternLanguage.g:4954:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalRdfPatternLanguage.g:4954:3: ()
            // InternalRdfPatternLanguage.g:4955:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,35,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:4969:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_ID && LA71_0<=RULE_STRING)||(LA71_0>=RULE_INT && LA71_0<=RULE_DECIMAL)||LA71_0==18||LA71_0==28||LA71_0==33||LA71_0==35||(LA71_0>=38 && LA71_0<=40)||LA71_0==50||LA71_0==69||LA71_0==75||LA71_0==77||LA71_0==79||(LA71_0>=82 && LA71_0<=84)||(LA71_0>=87 && LA71_0<=97)||LA71_0==99) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalRdfPatternLanguage.g:4970:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:4970:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:4971:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:4971:5: (lv_elements_3_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:4972:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_68);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:4989:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==20) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:4990:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:4994:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalRdfPatternLanguage.g:4995:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalRdfPatternLanguage.g:4995:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalRdfPatternLanguage.g:4996:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_68);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalRdfPatternLanguage.g:5023:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalRdfPatternLanguage.g:5023:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalRdfPatternLanguage.g:5024:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalRdfPatternLanguage.g:5030:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5036:2: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalRdfPatternLanguage.g:5037:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalRdfPatternLanguage.g:5037:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalRdfPatternLanguage.g:5038:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalRdfPatternLanguage.g:5038:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalRdfPatternLanguage.g:5039:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalRdfPatternLanguage.g:5045:4: ( () otherlv_1= '[' )
            // InternalRdfPatternLanguage.g:5046:5: () otherlv_1= '['
            {
            // InternalRdfPatternLanguage.g:5046:5: ()
            // InternalRdfPatternLanguage.g:5047:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,35,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:5059:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5060:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalRdfPatternLanguage.g:5083:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalRdfPatternLanguage.g:5084:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalRdfPatternLanguage.g:5084:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==RULE_ID||LA73_0==18||LA73_0==63) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:5085:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalRdfPatternLanguage.g:5085:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalRdfPatternLanguage.g:5086:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalRdfPatternLanguage.g:5086:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalRdfPatternLanguage.g:5087:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_70);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalRdfPatternLanguage.g:5104:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop72:
                            do {
                                int alt72=2;
                                int LA72_0 = input.LA(1);

                                if ( (LA72_0==20) ) {
                                    alt72=1;
                                }


                                switch (alt72) {
                            	case 1 :
                            	    // InternalRdfPatternLanguage.g:5105:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,20,FOLLOW_48); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalRdfPatternLanguage.g:5109:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalRdfPatternLanguage.g:5110:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalRdfPatternLanguage.g:5110:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalRdfPatternLanguage.g:5111:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_70);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop72;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalRdfPatternLanguage.g:5130:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalRdfPatternLanguage.g:5131:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalRdfPatternLanguage.g:5131:6: (lv_explicitSyntax_5_0= '|' )
                    // InternalRdfPatternLanguage.g:5132:7: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,76,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", true, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:5146:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalRdfPatternLanguage.g:5147:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalRdfPatternLanguage.g:5147:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalRdfPatternLanguage.g:5148:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalRdfPatternLanguage.g:5173:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalRdfPatternLanguage.g:5173:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalRdfPatternLanguage.g:5174:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalRdfPatternLanguage.g:5180:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5186:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalRdfPatternLanguage.g:5187:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalRdfPatternLanguage.g:5187:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalRdfPatternLanguage.g:5188:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalRdfPatternLanguage.g:5188:3: ()
            // InternalRdfPatternLanguage.g:5189:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:5195:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( ((LA76_0>=RULE_ID && LA76_0<=RULE_STRING)||(LA76_0>=RULE_INT && LA76_0<=RULE_DECIMAL)||LA76_0==18||LA76_0==28||LA76_0==33||LA76_0==35||(LA76_0>=38 && LA76_0<=40)||LA76_0==50||LA76_0==69||LA76_0==75||LA76_0==77||LA76_0==79||(LA76_0>=82 && LA76_0<=97)||LA76_0==99) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:5196:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalRdfPatternLanguage.g:5196:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalRdfPatternLanguage.g:5197:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalRdfPatternLanguage.g:5197:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalRdfPatternLanguage.g:5198:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:5215:4: (otherlv_2= ';' )?
            	    int alt75=2;
            	    int LA75_0 = input.LA(1);

            	    if ( (LA75_0==29) ) {
            	        alt75=1;
            	    }
            	    switch (alt75) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:5216:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,29,FOLLOW_73); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalRdfPatternLanguage.g:5226:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalRdfPatternLanguage.g:5226:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalRdfPatternLanguage.g:5227:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalRdfPatternLanguage.g:5233:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5239:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:5240:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:5240:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:5241:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:5241:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalRdfPatternLanguage.g:5242:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalRdfPatternLanguage.g:5267:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalRdfPatternLanguage.g:5268:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalRdfPatternLanguage.g:5268:5: ()
            // InternalRdfPatternLanguage.g:5269:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalRdfPatternLanguage.g:5275:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ID||LA78_0==18||LA78_0==63) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5276:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:5276:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalRdfPatternLanguage.g:5277:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalRdfPatternLanguage.g:5277:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalRdfPatternLanguage.g:5278:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_70);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:5295:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==20) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:5296:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,20,FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalRdfPatternLanguage.g:5300:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalRdfPatternLanguage.g:5301:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalRdfPatternLanguage.g:5301:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalRdfPatternLanguage.g:5302:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:5321:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalRdfPatternLanguage.g:5322:6: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalRdfPatternLanguage.g:5322:6: (lv_explicitSyntax_4_0= '|' )
            // InternalRdfPatternLanguage.g:5323:7: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,76,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", true, "|");
              						
            }

            }


            }


            }


            }

            // InternalRdfPatternLanguage.g:5337:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:5338:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:5338:4: (lv_expression_5_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:5339:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalRdfPatternLanguage.g:5360:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalRdfPatternLanguage.g:5360:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalRdfPatternLanguage.g:5361:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalRdfPatternLanguage.g:5367:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5373:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalRdfPatternLanguage.g:5374:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalRdfPatternLanguage.g:5374:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalRdfPatternLanguage.g:5375:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_10);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalRdfPatternLanguage.g:5395:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalRdfPatternLanguage.g:5395:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalRdfPatternLanguage.g:5396:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalRdfPatternLanguage.g:5402:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5408:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalRdfPatternLanguage.g:5409:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalRdfPatternLanguage.g:5409:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalRdfPatternLanguage.g:5410:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalRdfPatternLanguage.g:5410:3: ()
            // InternalRdfPatternLanguage.g:5411:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,77,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:5425:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:5426:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:5426:4: (lv_if_3_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:5427:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalRdfPatternLanguage.g:5448:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:5449:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:5449:4: (lv_then_5_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:5450:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_74);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:5467:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==78) ) {
                int LA79_1 = input.LA(2);

                if ( (synpred25_InternalRdfPatternLanguage()) ) {
                    alt79=1;
                }
            }
            switch (alt79) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5468:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalRdfPatternLanguage.g:5468:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalRdfPatternLanguage.g:5469:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,78,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalRdfPatternLanguage.g:5475:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:5476:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:5476:5: (lv_else_7_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:5477:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalRdfPatternLanguage.g:5499:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalRdfPatternLanguage.g:5499:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalRdfPatternLanguage.g:5500:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalRdfPatternLanguage.g:5506:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5512:2: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalRdfPatternLanguage.g:5513:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalRdfPatternLanguage.g:5513:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalRdfPatternLanguage.g:5514:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalRdfPatternLanguage.g:5514:3: ()
            // InternalRdfPatternLanguage.g:5515:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,79,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:5525:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5526:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalRdfPatternLanguage.g:5526:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalRdfPatternLanguage.g:5527:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalRdfPatternLanguage.g:5527:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalRdfPatternLanguage.g:5528:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalRdfPatternLanguage.g:5538:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalRdfPatternLanguage.g:5539:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,18,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalRdfPatternLanguage.g:5543:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalRdfPatternLanguage.g:5544:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalRdfPatternLanguage.g:5544:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalRdfPatternLanguage.g:5545:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_8);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,17,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:5568:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:5569:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:5569:6: (lv_switch_5_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:5570:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_10);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,19,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:5593:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalRdfPatternLanguage.g:5593:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalRdfPatternLanguage.g:5594:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalRdfPatternLanguage.g:5594:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt80=2;
                    alt80 = dfa80.predict(input);
                    switch (alt80) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:5595:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalRdfPatternLanguage.g:5604:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalRdfPatternLanguage.g:5605:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalRdfPatternLanguage.g:5605:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalRdfPatternLanguage.g:5606:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalRdfPatternLanguage.g:5606:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalRdfPatternLanguage.g:5607:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_8);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,17,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalRdfPatternLanguage.g:5630:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:5631:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:5631:6: (lv_switch_9_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:5632:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_25);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,28,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalRdfPatternLanguage.g:5655:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_ID||(LA82_0>=17 && LA82_0<=18)||LA82_0==20||LA82_0==63||LA82_0==81) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:5656:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalRdfPatternLanguage.g:5656:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalRdfPatternLanguage.g:5657:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_76);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            // InternalRdfPatternLanguage.g:5674:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==80) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5675:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,80,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,17,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalRdfPatternLanguage.g:5683:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:5684:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:5684:5: (lv_default_14_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:5685:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalRdfPatternLanguage.g:5711:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalRdfPatternLanguage.g:5711:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalRdfPatternLanguage.g:5712:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalRdfPatternLanguage.g:5718:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5724:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalRdfPatternLanguage.g:5725:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalRdfPatternLanguage.g:5725:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalRdfPatternLanguage.g:5726:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalRdfPatternLanguage.g:5726:3: ()
            // InternalRdfPatternLanguage.g:5727:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:5733:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_ID||LA84_0==18||LA84_0==63) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5734:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalRdfPatternLanguage.g:5734:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalRdfPatternLanguage.g:5735:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_78);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:5752:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==81) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5753:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,81,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:5757:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:5758:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:5758:5: (lv_case_3_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:5759:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_79);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:5777:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==17) ) {
                alt86=1;
            }
            else if ( (LA86_0==20) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5778:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalRdfPatternLanguage.g:5778:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalRdfPatternLanguage.g:5779:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,17,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalRdfPatternLanguage.g:5783:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:5784:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:5784:6: (lv_then_5_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:5785:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:5804:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalRdfPatternLanguage.g:5804:4: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalRdfPatternLanguage.g:5805:5: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalRdfPatternLanguage.g:5805:5: (lv_fallThrough_6_0= ',' )
                    // InternalRdfPatternLanguage.g:5806:6: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", true, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalRdfPatternLanguage.g:5823:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalRdfPatternLanguage.g:5823:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalRdfPatternLanguage.g:5824:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalRdfPatternLanguage.g:5830:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5836:2: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:5837:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:5837:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:5838:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:5838:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalRdfPatternLanguage.g:5839:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalRdfPatternLanguage.g:5852:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalRdfPatternLanguage.g:5853:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalRdfPatternLanguage.g:5853:5: ()
            // InternalRdfPatternLanguage.g:5854:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,82,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,18,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalRdfPatternLanguage.g:5868:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalRdfPatternLanguage.g:5869:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalRdfPatternLanguage.g:5869:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalRdfPatternLanguage.g:5870:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_8);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,17,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:5893:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:5894:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:5894:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:5895:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:5916:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:5917:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:5917:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:5918:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalRdfPatternLanguage.g:5939:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalRdfPatternLanguage.g:5939:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalRdfPatternLanguage.g:5940:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalRdfPatternLanguage.g:5946:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:5952:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:5953:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:5953:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:5954:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:5954:3: ()
            // InternalRdfPatternLanguage.g:5955:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,82,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:5969:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( ((LA88_0>=RULE_ID && LA88_0<=RULE_STRING)||(LA88_0>=RULE_INT && LA88_0<=RULE_DECIMAL)||LA88_0==18||LA88_0==28||LA88_0==33||LA88_0==35||(LA88_0>=38 && LA88_0<=40)||LA88_0==50||LA88_0==69||LA88_0==75||LA88_0==77||LA88_0==79||(LA88_0>=82 && LA88_0<=97)||LA88_0==99) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalRdfPatternLanguage.g:5970:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:5970:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalRdfPatternLanguage.g:5971:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalRdfPatternLanguage.g:5971:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalRdfPatternLanguage.g:5972:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:5989:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==20) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:5990:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_82); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:5994:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalRdfPatternLanguage.g:5995:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalRdfPatternLanguage.g:5995:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalRdfPatternLanguage.g:5996:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,29,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalRdfPatternLanguage.g:6019:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=RULE_ID && LA89_0<=RULE_STRING)||(LA89_0>=RULE_INT && LA89_0<=RULE_DECIMAL)||LA89_0==18||LA89_0==28||LA89_0==33||LA89_0==35||(LA89_0>=38 && LA89_0<=40)||LA89_0==50||LA89_0==69||LA89_0==75||LA89_0==77||LA89_0==79||(LA89_0>=82 && LA89_0<=84)||(LA89_0>=87 && LA89_0<=97)||LA89_0==99) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6020:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:6020:4: (lv_expression_7_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:6021:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_27);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,29,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalRdfPatternLanguage.g:6042:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( ((LA91_0>=RULE_ID && LA91_0<=RULE_STRING)||(LA91_0>=RULE_INT && LA91_0<=RULE_DECIMAL)||LA91_0==18||LA91_0==28||LA91_0==33||LA91_0==35||(LA91_0>=38 && LA91_0<=40)||LA91_0==50||LA91_0==69||LA91_0==75||LA91_0==77||LA91_0==79||(LA91_0>=82 && LA91_0<=84)||(LA91_0>=87 && LA91_0<=97)||LA91_0==99) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6043:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalRdfPatternLanguage.g:6043:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:6044:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:6044:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:6045:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:6062:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==20) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:6063:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,20,FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:6067:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalRdfPatternLanguage.g:6068:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalRdfPatternLanguage.g:6068:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalRdfPatternLanguage.g:6069:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop90;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalRdfPatternLanguage.g:6092:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:6093:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:6093:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:6094:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalRdfPatternLanguage.g:6115:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalRdfPatternLanguage.g:6115:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalRdfPatternLanguage.g:6116:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalRdfPatternLanguage.g:6122:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6128:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:6129:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:6129:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:6130:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:6130:3: ()
            // InternalRdfPatternLanguage.g:6131:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:6145:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:6146:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:6146:4: (lv_predicate_3_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:6147:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalRdfPatternLanguage.g:6168:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:6169:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:6169:4: (lv_body_5_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:6170:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalRdfPatternLanguage.g:6191:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalRdfPatternLanguage.g:6191:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalRdfPatternLanguage.g:6192:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalRdfPatternLanguage.g:6198:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6204:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalRdfPatternLanguage.g:6205:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalRdfPatternLanguage.g:6205:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalRdfPatternLanguage.g:6206:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalRdfPatternLanguage.g:6206:3: ()
            // InternalRdfPatternLanguage.g:6207:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,84,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:6217:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:6218:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:6218:4: (lv_body_2_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:6219:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_85);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,83,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalRdfPatternLanguage.g:6244:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:6245:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:6245:4: (lv_predicate_5_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:6246:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalRdfPatternLanguage.g:6271:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalRdfPatternLanguage.g:6271:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalRdfPatternLanguage.g:6272:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalRdfPatternLanguage.g:6278:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6284:2: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalRdfPatternLanguage.g:6285:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalRdfPatternLanguage.g:6285:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalRdfPatternLanguage.g:6286:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalRdfPatternLanguage.g:6286:3: ()
            // InternalRdfPatternLanguage.g:6287:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,28,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:6297:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( ((LA93_0>=RULE_ID && LA93_0<=RULE_STRING)||(LA93_0>=RULE_INT && LA93_0<=RULE_DECIMAL)||LA93_0==18||LA93_0==28||LA93_0==33||LA93_0==35||(LA93_0>=38 && LA93_0<=40)||LA93_0==50||LA93_0==69||LA93_0==75||LA93_0==77||LA93_0==79||(LA93_0>=82 && LA93_0<=97)||LA93_0==99) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:6298:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalRdfPatternLanguage.g:6298:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalRdfPatternLanguage.g:6299:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalRdfPatternLanguage.g:6299:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalRdfPatternLanguage.g:6300:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalRdfPatternLanguage.g:6317:4: (otherlv_3= ';' )?
            	    int alt92=2;
            	    int LA92_0 = input.LA(1);

            	    if ( (LA92_0==29) ) {
            	        alt92=1;
            	    }
            	    switch (alt92) {
            	        case 1 :
            	            // InternalRdfPatternLanguage.g:6318:5: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,29,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            otherlv_4=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalRdfPatternLanguage.g:6332:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalRdfPatternLanguage.g:6332:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalRdfPatternLanguage.g:6333:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalRdfPatternLanguage.g:6339:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6345:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:6346:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:6346:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( ((LA94_0>=85 && LA94_0<=86)) ) {
                alt94=1;
            }
            else if ( ((LA94_0>=RULE_ID && LA94_0<=RULE_STRING)||(LA94_0>=RULE_INT && LA94_0<=RULE_DECIMAL)||LA94_0==18||LA94_0==28||LA94_0==33||LA94_0==35||(LA94_0>=38 && LA94_0<=40)||LA94_0==50||LA94_0==69||LA94_0==75||LA94_0==77||LA94_0==79||(LA94_0>=82 && LA94_0<=84)||(LA94_0>=87 && LA94_0<=97)||LA94_0==99) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6347:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:6356:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalRdfPatternLanguage.g:6368:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalRdfPatternLanguage.g:6368:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalRdfPatternLanguage.g:6369:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalRdfPatternLanguage.g:6375:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6381:2: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalRdfPatternLanguage.g:6382:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalRdfPatternLanguage.g:6382:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalRdfPatternLanguage.g:6383:3: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalRdfPatternLanguage.g:6383:3: ()
            // InternalRdfPatternLanguage.g:6384:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:6390:3: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==85) ) {
                alt95=1;
            }
            else if ( (LA95_0==86) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6391:4: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalRdfPatternLanguage.g:6391:4: ( (lv_writeable_1_0= 'var' ) )
                    // InternalRdfPatternLanguage.g:6392:5: (lv_writeable_1_0= 'var' )
                    {
                    // InternalRdfPatternLanguage.g:6392:5: (lv_writeable_1_0= 'var' )
                    // InternalRdfPatternLanguage.g:6393:6: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,85,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", true, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:6406:4: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,86,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:6411:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==RULE_ID) ) {
                int LA96_1 = input.LA(2);

                if ( (synpred29_InternalRdfPatternLanguage()) ) {
                    alt96=1;
                }
                else if ( (true) ) {
                    alt96=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA96_0==18) && (synpred29_InternalRdfPatternLanguage())) {
                alt96=1;
            }
            else if ( (LA96_0==63) && (synpred29_InternalRdfPatternLanguage())) {
                alt96=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6412:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalRdfPatternLanguage.g:6412:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalRdfPatternLanguage.g:6413:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalRdfPatternLanguage.g:6426:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalRdfPatternLanguage.g:6427:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalRdfPatternLanguage.g:6427:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalRdfPatternLanguage.g:6428:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalRdfPatternLanguage.g:6428:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalRdfPatternLanguage.g:6429:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_7);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:6446:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalRdfPatternLanguage.g:6447:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalRdfPatternLanguage.g:6447:7: (lv_name_4_0= ruleValidID )
                    // InternalRdfPatternLanguage.g:6448:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_88);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:6468:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalRdfPatternLanguage.g:6468:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalRdfPatternLanguage.g:6469:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalRdfPatternLanguage.g:6469:5: (lv_name_5_0= ruleValidID )
                    // InternalRdfPatternLanguage.g:6470:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_88);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:6488:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==25) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6489:4: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,25,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:6493:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:6494:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:6494:5: (lv_right_7_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:6495:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalRdfPatternLanguage.g:6517:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalRdfPatternLanguage.g:6517:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalRdfPatternLanguage.g:6518:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalRdfPatternLanguage.g:6524:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6530:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalRdfPatternLanguage.g:6531:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalRdfPatternLanguage.g:6531:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalRdfPatternLanguage.g:6532:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalRdfPatternLanguage.g:6532:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ID) ) {
                int LA98_1 = input.LA(2);

                if ( (LA98_1==RULE_ID||(LA98_1>=34 && LA98_1<=35)||LA98_1==50) ) {
                    alt98=1;
                }
            }
            else if ( (LA98_0==18||LA98_0==63) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6533:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalRdfPatternLanguage.g:6533:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalRdfPatternLanguage.g:6534:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_7);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:6551:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalRdfPatternLanguage.g:6552:4: (lv_name_1_0= ruleValidID )
            {
            // InternalRdfPatternLanguage.g:6552:4: (lv_name_1_0= ruleValidID )
            // InternalRdfPatternLanguage.g:6553:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalRdfPatternLanguage.g:6574:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalRdfPatternLanguage.g:6574:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalRdfPatternLanguage.g:6575:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalRdfPatternLanguage.g:6581:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6587:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalRdfPatternLanguage.g:6588:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalRdfPatternLanguage.g:6588:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalRdfPatternLanguage.g:6589:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalRdfPatternLanguage.g:6589:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalRdfPatternLanguage.g:6590:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalRdfPatternLanguage.g:6590:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalRdfPatternLanguage.g:6591:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:6608:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalRdfPatternLanguage.g:6609:4: (lv_name_1_0= ruleValidID )
            {
            // InternalRdfPatternLanguage.g:6609:4: (lv_name_1_0= ruleValidID )
            // InternalRdfPatternLanguage.g:6610:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalRdfPatternLanguage.g:6631:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalRdfPatternLanguage.g:6631:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalRdfPatternLanguage.g:6632:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalRdfPatternLanguage.g:6638:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6644:2: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalRdfPatternLanguage.g:6645:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalRdfPatternLanguage.g:6645:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalRdfPatternLanguage.g:6646:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalRdfPatternLanguage.g:6646:3: ()
            // InternalRdfPatternLanguage.g:6647:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:6653:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==50) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6654:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,50,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:6658:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalRdfPatternLanguage.g:6659:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalRdfPatternLanguage.g:6659:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalRdfPatternLanguage.g:6660:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:6677:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==20) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:6678:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:6682:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalRdfPatternLanguage.g:6683:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalRdfPatternLanguage.g:6683:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalRdfPatternLanguage.g:6684:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,51,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:6707:3: ( ( ruleIdOrSuper ) )
            // InternalRdfPatternLanguage.g:6708:4: ( ruleIdOrSuper )
            {
            // InternalRdfPatternLanguage.g:6708:4: ( ruleIdOrSuper )
            // InternalRdfPatternLanguage.g:6709:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_89);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:6723:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt103=2;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6724:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalRdfPatternLanguage.g:6724:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalRdfPatternLanguage.g:6725:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalRdfPatternLanguage.g:6729:5: (lv_explicitOperationCall_7_0= '(' )
                    // InternalRdfPatternLanguage.g:6730:6: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,18,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:6742:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt102=3;
                    alt102 = dfa102.predict(input);
                    switch (alt102) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:6743:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalRdfPatternLanguage.g:6743:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalRdfPatternLanguage.g:6744:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalRdfPatternLanguage.g:6769:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalRdfPatternLanguage.g:6770:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_10);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalRdfPatternLanguage.g:6788:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalRdfPatternLanguage.g:6788:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalRdfPatternLanguage.g:6789:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalRdfPatternLanguage.g:6789:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalRdfPatternLanguage.g:6790:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalRdfPatternLanguage.g:6790:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalRdfPatternLanguage.g:6791:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_19);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalRdfPatternLanguage.g:6808:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==20) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    // InternalRdfPatternLanguage.g:6809:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,20,FOLLOW_39); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalRdfPatternLanguage.g:6813:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalRdfPatternLanguage.g:6814:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalRdfPatternLanguage.g:6814:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalRdfPatternLanguage.g:6815:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_19);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,19,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:6840:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6841:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalRdfPatternLanguage.g:6847:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalRdfPatternLanguage.g:6848:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalRdfPatternLanguage.g:6869:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalRdfPatternLanguage.g:6869:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalRdfPatternLanguage.g:6870:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalRdfPatternLanguage.g:6876:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6882:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalRdfPatternLanguage.g:6883:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalRdfPatternLanguage.g:6883:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt105=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt105=1;
                }
                break;
            case 87:
                {
                alt105=2;
                }
                break;
            case 88:
                {
                alt105=3;
                }
                break;
            case 89:
                {
                alt105=4;
                }
                break;
            case 90:
                {
                alt105=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6884:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:6895:3: kw= 'extends'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:6901:3: kw= 'static'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalRdfPatternLanguage.g:6907:3: kw= 'import'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalRdfPatternLanguage.g:6913:3: kw= 'extension'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalRdfPatternLanguage.g:6922:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalRdfPatternLanguage.g:6922:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalRdfPatternLanguage.g:6923:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalRdfPatternLanguage.g:6929:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6935:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalRdfPatternLanguage.g:6936:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalRdfPatternLanguage.g:6936:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==RULE_ID||(LA106_0>=87 && LA106_0<=90)) ) {
                alt106=1;
            }
            else if ( (LA106_0==91) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalRdfPatternLanguage.g:6937:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:6948:3: kw= 'super'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalRdfPatternLanguage.g:6957:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalRdfPatternLanguage.g:6957:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalRdfPatternLanguage.g:6958:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalRdfPatternLanguage.g:6964:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:6970:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalRdfPatternLanguage.g:6971:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalRdfPatternLanguage.g:6971:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalRdfPatternLanguage.g:6972:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalRdfPatternLanguage.g:6972:3: ()
            // InternalRdfPatternLanguage.g:6973:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,92,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:6983:3: ( ( ruleQualifiedName ) )
            // InternalRdfPatternLanguage.g:6984:4: ( ruleQualifiedName )
            {
            // InternalRdfPatternLanguage.g:6984:4: ( ruleQualifiedName )
            // InternalRdfPatternLanguage.g:6985:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_91);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:6999:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt108=2;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7000:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalRdfPatternLanguage.g:7000:4: ( ( '<' )=>otherlv_3= '<' )
                    // InternalRdfPatternLanguage.g:7001:5: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,50,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalRdfPatternLanguage.g:7007:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalRdfPatternLanguage.g:7008:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalRdfPatternLanguage.g:7008:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalRdfPatternLanguage.g:7009:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:7026:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==20) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:7027:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:7031:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalRdfPatternLanguage.g:7032:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalRdfPatternLanguage.g:7032:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalRdfPatternLanguage.g:7033:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,51,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:7056:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt111=2;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7057:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalRdfPatternLanguage.g:7057:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalRdfPatternLanguage.g:7058:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalRdfPatternLanguage.g:7062:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalRdfPatternLanguage.g:7063:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,18,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:7075:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt110=3;
                    alt110 = dfa110.predict(input);
                    switch (alt110) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:7076:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalRdfPatternLanguage.g:7076:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalRdfPatternLanguage.g:7077:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalRdfPatternLanguage.g:7102:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalRdfPatternLanguage.g:7103:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_10);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalRdfPatternLanguage.g:7121:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalRdfPatternLanguage.g:7121:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalRdfPatternLanguage.g:7122:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalRdfPatternLanguage.g:7122:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalRdfPatternLanguage.g:7123:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalRdfPatternLanguage.g:7123:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalRdfPatternLanguage.g:7124:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_19);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalRdfPatternLanguage.g:7141:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop109:
                            do {
                                int alt109=2;
                                int LA109_0 = input.LA(1);

                                if ( (LA109_0==20) ) {
                                    alt109=1;
                                }


                                switch (alt109) {
                            	case 1 :
                            	    // InternalRdfPatternLanguage.g:7142:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,20,FOLLOW_39); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalRdfPatternLanguage.g:7146:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalRdfPatternLanguage.g:7147:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalRdfPatternLanguage.g:7147:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalRdfPatternLanguage.g:7148:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_19);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop109;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,19,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:7173:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt112=2;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7174:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalRdfPatternLanguage.g:7180:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalRdfPatternLanguage.g:7181:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalRdfPatternLanguage.g:7202:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:7202:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalRdfPatternLanguage.g:7203:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalRdfPatternLanguage.g:7209:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7215:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalRdfPatternLanguage.g:7216:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalRdfPatternLanguage.g:7216:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalRdfPatternLanguage.g:7217:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalRdfPatternLanguage.g:7217:3: ()
            // InternalRdfPatternLanguage.g:7218:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:7224:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==40) ) {
                alt113=1;
            }
            else if ( (LA113_0==39) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7225:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:7230:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalRdfPatternLanguage.g:7230:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalRdfPatternLanguage.g:7231:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalRdfPatternLanguage.g:7231:5: (lv_isTrue_2_0= 'true' )
                    // InternalRdfPatternLanguage.g:7232:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalRdfPatternLanguage.g:7249:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:7249:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalRdfPatternLanguage.g:7250:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalRdfPatternLanguage.g:7256:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7262:2: ( ( () otherlv_1= 'null' ) )
            // InternalRdfPatternLanguage.g:7263:2: ( () otherlv_1= 'null' )
            {
            // InternalRdfPatternLanguage.g:7263:2: ( () otherlv_1= 'null' )
            // InternalRdfPatternLanguage.g:7264:3: () otherlv_1= 'null'
            {
            // InternalRdfPatternLanguage.g:7264:3: ()
            // InternalRdfPatternLanguage.g:7265:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalRdfPatternLanguage.g:7279:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:7279:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalRdfPatternLanguage.g:7280:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalRdfPatternLanguage.g:7286:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7292:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalRdfPatternLanguage.g:7293:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalRdfPatternLanguage.g:7293:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalRdfPatternLanguage.g:7294:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalRdfPatternLanguage.g:7294:3: ()
            // InternalRdfPatternLanguage.g:7295:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:7301:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalRdfPatternLanguage.g:7302:4: (lv_value_1_0= ruleNumber )
            {
            // InternalRdfPatternLanguage.g:7302:4: (lv_value_1_0= ruleNumber )
            // InternalRdfPatternLanguage.g:7303:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalRdfPatternLanguage.g:7324:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:7324:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalRdfPatternLanguage.g:7325:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalRdfPatternLanguage.g:7331:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7337:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalRdfPatternLanguage.g:7338:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalRdfPatternLanguage.g:7338:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalRdfPatternLanguage.g:7339:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalRdfPatternLanguage.g:7339:3: ()
            // InternalRdfPatternLanguage.g:7340:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalRdfPatternLanguage.g:7346:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalRdfPatternLanguage.g:7347:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalRdfPatternLanguage.g:7347:4: (lv_value_1_0= RULE_STRING )
            // InternalRdfPatternLanguage.g:7348:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalRdfPatternLanguage.g:7368:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalRdfPatternLanguage.g:7368:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalRdfPatternLanguage.g:7369:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalRdfPatternLanguage.g:7375:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7381:2: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalRdfPatternLanguage.g:7382:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalRdfPatternLanguage.g:7382:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalRdfPatternLanguage.g:7383:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalRdfPatternLanguage.g:7383:3: ()
            // InternalRdfPatternLanguage.g:7384:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,94,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:7398:3: ( ( ruleQualifiedName ) )
            // InternalRdfPatternLanguage.g:7399:4: ( ruleQualifiedName )
            {
            // InternalRdfPatternLanguage.g:7399:4: ( ruleQualifiedName )
            // InternalRdfPatternLanguage.g:7400:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_92);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:7414:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==35) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:7415:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalRdfPatternLanguage.g:7415:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalRdfPatternLanguage.g:7416:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_92);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalRdfPatternLanguage.g:7441:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalRdfPatternLanguage.g:7441:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalRdfPatternLanguage.g:7442:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalRdfPatternLanguage.g:7448:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7454:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:7455:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:7455:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:7456:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:7456:3: ()
            // InternalRdfPatternLanguage.g:7457:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,95,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:7467:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:7468:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:7468:4: (lv_expression_2_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:7469:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalRdfPatternLanguage.g:7490:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalRdfPatternLanguage.g:7490:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalRdfPatternLanguage.g:7491:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalRdfPatternLanguage.g:7497:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7503:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalRdfPatternLanguage.g:7504:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalRdfPatternLanguage.g:7504:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalRdfPatternLanguage.g:7505:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalRdfPatternLanguage.g:7505:3: ()
            // InternalRdfPatternLanguage.g:7506:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,96,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:7516:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt115=2;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7517:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:7518:4: (lv_expression_2_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:7519:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalRdfPatternLanguage.g:7540:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalRdfPatternLanguage.g:7540:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalRdfPatternLanguage.g:7541:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalRdfPatternLanguage.g:7547:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7553:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalRdfPatternLanguage.g:7554:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalRdfPatternLanguage.g:7554:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalRdfPatternLanguage.g:7555:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalRdfPatternLanguage.g:7555:3: ()
            // InternalRdfPatternLanguage.g:7556:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,97,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:7566:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:7567:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:7567:4: (lv_expression_2_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:7568:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:7585:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==100) ) {
                alt118=1;
            }
            else if ( (LA118_0==98) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7586:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalRdfPatternLanguage.g:7586:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalRdfPatternLanguage.g:7587:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalRdfPatternLanguage.g:7587:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt116=0;
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==100) ) {
                            int LA116_2 = input.LA(2);

                            if ( (synpred38_InternalRdfPatternLanguage()) ) {
                                alt116=1;
                            }


                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:7588:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalRdfPatternLanguage.g:7589:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalRdfPatternLanguage.g:7590:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_95);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt116 >= 1 ) break loop116;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(116, input);
                                throw eee;
                        }
                        cnt116++;
                    } while (true);

                    // InternalRdfPatternLanguage.g:7607:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==98) ) {
                        int LA117_1 = input.LA(2);

                        if ( (synpred39_InternalRdfPatternLanguage()) ) {
                            alt117=1;
                        }
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:7608:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalRdfPatternLanguage.g:7608:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalRdfPatternLanguage.g:7609:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,98,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalRdfPatternLanguage.g:7615:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalRdfPatternLanguage.g:7616:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalRdfPatternLanguage.g:7616:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalRdfPatternLanguage.g:7617:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:7637:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalRdfPatternLanguage.g:7637:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalRdfPatternLanguage.g:7638:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,98,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalRdfPatternLanguage.g:7642:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalRdfPatternLanguage.g:7643:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalRdfPatternLanguage.g:7643:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalRdfPatternLanguage.g:7644:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalRdfPatternLanguage.g:7667:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalRdfPatternLanguage.g:7667:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalRdfPatternLanguage.g:7668:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalRdfPatternLanguage.g:7674:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7680:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:7681:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:7681:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:7682:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:7682:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalRdfPatternLanguage.g:7683:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalRdfPatternLanguage.g:7690:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalRdfPatternLanguage.g:7691:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalRdfPatternLanguage.g:7691:5: ()
            // InternalRdfPatternLanguage.g:7692:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,99,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,18,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:7708:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:7709:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:7709:4: (lv_param_3_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:7710:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalRdfPatternLanguage.g:7731:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:7732:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:7732:4: (lv_expression_5_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:7733:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalRdfPatternLanguage.g:7754:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalRdfPatternLanguage.g:7754:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalRdfPatternLanguage.g:7755:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalRdfPatternLanguage.g:7761:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7767:2: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalRdfPatternLanguage.g:7768:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalRdfPatternLanguage.g:7768:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalRdfPatternLanguage.g:7769:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalRdfPatternLanguage.g:7769:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalRdfPatternLanguage.g:7770:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,100,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:7780:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalRdfPatternLanguage.g:7781:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalRdfPatternLanguage.g:7781:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalRdfPatternLanguage.g:7782:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalRdfPatternLanguage.g:7803:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalRdfPatternLanguage.g:7804:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalRdfPatternLanguage.g:7804:4: (lv_expression_4_0= ruleXExpression )
            // InternalRdfPatternLanguage.g:7805:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalRdfPatternLanguage.g:7826:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalRdfPatternLanguage.g:7826:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalRdfPatternLanguage.g:7827:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalRdfPatternLanguage.g:7833:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7839:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalRdfPatternLanguage.g:7840:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalRdfPatternLanguage.g:7840:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalRdfPatternLanguage.g:7841:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_37);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalRdfPatternLanguage.g:7851:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==34) ) {
                    int LA119_2 = input.LA(2);

                    if ( (LA119_2==RULE_ID) ) {
                        int LA119_3 = input.LA(3);

                        if ( (synpred42_InternalRdfPatternLanguage()) ) {
                            alt119=1;
                        }


                    }


                }


                switch (alt119) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:7852:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalRdfPatternLanguage.g:7852:4: ( ( '.' )=>kw= '.' )
            	    // InternalRdfPatternLanguage.g:7853:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_37);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalRdfPatternLanguage.g:7875:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalRdfPatternLanguage.g:7877:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalRdfPatternLanguage.g:7878:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalRdfPatternLanguage.g:7887:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalRdfPatternLanguage.g:7894:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalRdfPatternLanguage.g:7895:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalRdfPatternLanguage.g:7895:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==RULE_HEX) ) {
                alt123=1;
            }
            else if ( (LA123_0==RULE_INT||LA123_0==RULE_DECIMAL) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7896:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:7904:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalRdfPatternLanguage.g:7904:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalRdfPatternLanguage.g:7905:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalRdfPatternLanguage.g:7905:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==RULE_INT) ) {
                        alt120=1;
                    }
                    else if ( (LA120_0==RULE_DECIMAL) ) {
                        alt120=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 120, 0, input);

                        throw nvae;
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:7906:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalRdfPatternLanguage.g:7914:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalRdfPatternLanguage.g:7922:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==34) ) {
                        int LA122_1 = input.LA(2);

                        if ( (LA122_1==RULE_INT||LA122_1==RULE_DECIMAL) ) {
                            alt122=1;
                        }
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:7923:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,34,FOLLOW_96); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalRdfPatternLanguage.g:7928:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt121=2;
                            int LA121_0 = input.LA(1);

                            if ( (LA121_0==RULE_INT) ) {
                                alt121=1;
                            }
                            else if ( (LA121_0==RULE_DECIMAL) ) {
                                alt121=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 121, 0, input);

                                throw nvae;
                            }
                            switch (alt121) {
                                case 1 :
                                    // InternalRdfPatternLanguage.g:7929:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalRdfPatternLanguage.g:7937:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalRdfPatternLanguage.g:7954:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalRdfPatternLanguage.g:7954:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalRdfPatternLanguage.g:7955:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalRdfPatternLanguage.g:7961:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:7967:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalRdfPatternLanguage.g:7968:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalRdfPatternLanguage.g:7968:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==RULE_ID) ) {
                alt125=1;
            }
            else if ( (LA125_0==18||LA125_0==63) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // InternalRdfPatternLanguage.g:7969:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalRdfPatternLanguage.g:7969:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalRdfPatternLanguage.g:7970:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_90);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalRdfPatternLanguage.g:7978:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==35) ) {
                            int LA124_2 = input.LA(2);

                            if ( (LA124_2==36) ) {
                                int LA124_3 = input.LA(3);

                                if ( (synpred43_InternalRdfPatternLanguage()) ) {
                                    alt124=1;
                                }


                            }


                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:7979:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalRdfPatternLanguage.g:7985:5: ( () ruleArrayBrackets )
                    	    // InternalRdfPatternLanguage.g:7986:6: () ruleArrayBrackets
                    	    {
                    	    // InternalRdfPatternLanguage.g:7986:6: ()
                    	    // InternalRdfPatternLanguage.g:7987:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_90);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:8004:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalRdfPatternLanguage.g:8016:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalRdfPatternLanguage.g:8016:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalRdfPatternLanguage.g:8017:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalRdfPatternLanguage.g:8023:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8029:2: ( (kw= '[' kw= ']' ) )
            // InternalRdfPatternLanguage.g:8030:2: (kw= '[' kw= ']' )
            {
            // InternalRdfPatternLanguage.g:8030:2: (kw= '[' kw= ']' )
            // InternalRdfPatternLanguage.g:8031:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,35,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalRdfPatternLanguage.g:8045:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalRdfPatternLanguage.g:8045:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalRdfPatternLanguage.g:8046:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalRdfPatternLanguage.g:8052:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8058:2: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalRdfPatternLanguage.g:8059:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalRdfPatternLanguage.g:8059:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalRdfPatternLanguage.g:8060:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalRdfPatternLanguage.g:8060:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==18) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8061:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,18,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalRdfPatternLanguage.g:8065:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==RULE_ID||LA127_0==18||LA127_0==63) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:8066:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalRdfPatternLanguage.g:8066:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalRdfPatternLanguage.g:8067:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalRdfPatternLanguage.g:8067:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalRdfPatternLanguage.g:8068:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_19);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalRdfPatternLanguage.g:8085:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop126:
                            do {
                                int alt126=2;
                                int LA126_0 = input.LA(1);

                                if ( (LA126_0==20) ) {
                                    alt126=1;
                                }


                                switch (alt126) {
                            	case 1 :
                            	    // InternalRdfPatternLanguage.g:8086:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,20,FOLLOW_48); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalRdfPatternLanguage.g:8090:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalRdfPatternLanguage.g:8091:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalRdfPatternLanguage.g:8091:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalRdfPatternLanguage.g:8092:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_19);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop126;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,19,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,63,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:8120:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalRdfPatternLanguage.g:8121:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalRdfPatternLanguage.g:8121:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalRdfPatternLanguage.g:8122:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalRdfPatternLanguage.g:8143:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalRdfPatternLanguage.g:8143:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalRdfPatternLanguage.g:8144:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalRdfPatternLanguage.g:8150:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8156:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalRdfPatternLanguage.g:8157:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalRdfPatternLanguage.g:8157:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalRdfPatternLanguage.g:8158:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalRdfPatternLanguage.g:8158:3: ( ( ruleQualifiedName ) )
            // InternalRdfPatternLanguage.g:8159:4: ( ruleQualifiedName )
            {
            // InternalRdfPatternLanguage.g:8159:4: ( ruleQualifiedName )
            // InternalRdfPatternLanguage.g:8160:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_99);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalRdfPatternLanguage.g:8174:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt133=2;
            alt133 = dfa133.predict(input);
            switch (alt133) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8175:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalRdfPatternLanguage.g:8175:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalRdfPatternLanguage.g:8176:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,50,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalRdfPatternLanguage.g:8182:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalRdfPatternLanguage.g:8183:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalRdfPatternLanguage.g:8183:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalRdfPatternLanguage.g:8184:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:8201:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop129:
                    do {
                        int alt129=2;
                        int LA129_0 = input.LA(1);

                        if ( (LA129_0==20) ) {
                            alt129=1;
                        }


                        switch (alt129) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:8202:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalRdfPatternLanguage.g:8206:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalRdfPatternLanguage.g:8207:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalRdfPatternLanguage.g:8207:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalRdfPatternLanguage.g:8208:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop129;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,51,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalRdfPatternLanguage.g:8230:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==34) ) {
                            int LA132_2 = input.LA(2);

                            if ( (LA132_2==RULE_ID) ) {
                                int LA132_3 = input.LA(3);

                                if ( (synpred45_InternalRdfPatternLanguage()) ) {
                                    alt132=1;
                                }


                            }


                        }


                        switch (alt132) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:8231:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalRdfPatternLanguage.g:8231:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalRdfPatternLanguage.g:8232:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalRdfPatternLanguage.g:8238:6: ( () otherlv_7= '.' )
                    	    // InternalRdfPatternLanguage.g:8239:7: () otherlv_7= '.'
                    	    {
                    	    // InternalRdfPatternLanguage.g:8239:7: ()
                    	    // InternalRdfPatternLanguage.g:8240:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,34,FOLLOW_7); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalRdfPatternLanguage.g:8252:5: ( ( ruleValidID ) )
                    	    // InternalRdfPatternLanguage.g:8253:6: ( ruleValidID )
                    	    {
                    	    // InternalRdfPatternLanguage.g:8253:6: ( ruleValidID )
                    	    // InternalRdfPatternLanguage.g:8254:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_100);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalRdfPatternLanguage.g:8268:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt131=2;
                    	    alt131 = dfa131.predict(input);
                    	    switch (alt131) {
                    	        case 1 :
                    	            // InternalRdfPatternLanguage.g:8269:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalRdfPatternLanguage.g:8269:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalRdfPatternLanguage.g:8270:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,50,FOLLOW_60); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalRdfPatternLanguage.g:8276:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalRdfPatternLanguage.g:8277:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalRdfPatternLanguage.g:8277:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalRdfPatternLanguage.g:8278:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_61);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalRdfPatternLanguage.g:8295:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop130:
                    	            do {
                    	                int alt130=2;
                    	                int LA130_0 = input.LA(1);

                    	                if ( (LA130_0==20) ) {
                    	                    alt130=1;
                    	                }


                    	                switch (alt130) {
                    	            	case 1 :
                    	            	    // InternalRdfPatternLanguage.g:8296:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,20,FOLLOW_60); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalRdfPatternLanguage.g:8300:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalRdfPatternLanguage.g:8301:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalRdfPatternLanguage.g:8301:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalRdfPatternLanguage.g:8302:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_61);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop130;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,51,FOLLOW_37); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalRdfPatternLanguage.g:8331:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalRdfPatternLanguage.g:8331:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalRdfPatternLanguage.g:8332:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalRdfPatternLanguage.g:8338:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8344:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalRdfPatternLanguage.g:8345:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalRdfPatternLanguage.g:8345:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==RULE_ID||LA134_0==18||LA134_0==63) ) {
                alt134=1;
            }
            else if ( (LA134_0==101) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8346:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:8355:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalRdfPatternLanguage.g:8367:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalRdfPatternLanguage.g:8367:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalRdfPatternLanguage.g:8368:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalRdfPatternLanguage.g:8374:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8380:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalRdfPatternLanguage.g:8381:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalRdfPatternLanguage.g:8381:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalRdfPatternLanguage.g:8382:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalRdfPatternLanguage.g:8382:3: ()
            // InternalRdfPatternLanguage.g:8383:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalRdfPatternLanguage.g:8393:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt137=3;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==87) ) {
                alt137=1;
            }
            else if ( (LA137_0==91) ) {
                alt137=2;
            }
            switch (alt137) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8394:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalRdfPatternLanguage.g:8394:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalRdfPatternLanguage.g:8395:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalRdfPatternLanguage.g:8395:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalRdfPatternLanguage.g:8396:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalRdfPatternLanguage.g:8396:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalRdfPatternLanguage.g:8397:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_102);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:8414:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==102) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:8415:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalRdfPatternLanguage.g:8415:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalRdfPatternLanguage.g:8416:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:8435:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalRdfPatternLanguage.g:8435:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalRdfPatternLanguage.g:8436:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalRdfPatternLanguage.g:8436:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalRdfPatternLanguage.g:8437:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalRdfPatternLanguage.g:8437:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalRdfPatternLanguage.g:8438:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_102);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:8455:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==102) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // InternalRdfPatternLanguage.g:8456:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalRdfPatternLanguage.g:8456:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalRdfPatternLanguage.g:8457:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_102);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalRdfPatternLanguage.g:8480:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalRdfPatternLanguage.g:8480:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalRdfPatternLanguage.g:8481:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalRdfPatternLanguage.g:8487:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8493:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalRdfPatternLanguage.g:8494:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalRdfPatternLanguage.g:8494:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalRdfPatternLanguage.g:8495:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,87,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:8499:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalRdfPatternLanguage.g:8500:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalRdfPatternLanguage.g:8500:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalRdfPatternLanguage.g:8501:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalRdfPatternLanguage.g:8522:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalRdfPatternLanguage.g:8522:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalRdfPatternLanguage.g:8523:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalRdfPatternLanguage.g:8529:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8535:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalRdfPatternLanguage.g:8536:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalRdfPatternLanguage.g:8536:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalRdfPatternLanguage.g:8537:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,102,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:8541:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalRdfPatternLanguage.g:8542:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalRdfPatternLanguage.g:8542:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalRdfPatternLanguage.g:8543:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalRdfPatternLanguage.g:8564:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalRdfPatternLanguage.g:8564:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalRdfPatternLanguage.g:8565:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalRdfPatternLanguage.g:8571:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8577:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalRdfPatternLanguage.g:8578:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalRdfPatternLanguage.g:8578:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalRdfPatternLanguage.g:8579:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,91,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:8583:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalRdfPatternLanguage.g:8584:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalRdfPatternLanguage.g:8584:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalRdfPatternLanguage.g:8585:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalRdfPatternLanguage.g:8606:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalRdfPatternLanguage.g:8606:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalRdfPatternLanguage.g:8607:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalRdfPatternLanguage.g:8613:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8619:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalRdfPatternLanguage.g:8620:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalRdfPatternLanguage.g:8620:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalRdfPatternLanguage.g:8621:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,102,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:8625:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalRdfPatternLanguage.g:8626:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalRdfPatternLanguage.g:8626:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalRdfPatternLanguage.g:8627:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalRdfPatternLanguage.g:8648:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalRdfPatternLanguage.g:8648:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalRdfPatternLanguage.g:8649:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalRdfPatternLanguage.g:8655:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8661:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalRdfPatternLanguage.g:8662:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalRdfPatternLanguage.g:8662:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalRdfPatternLanguage.g:8663:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_32);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,34,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalRdfPatternLanguage.g:8687:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalRdfPatternLanguage.g:8687:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalRdfPatternLanguage.g:8688:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalRdfPatternLanguage.g:8694:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8700:2: (this_ID_0= RULE_ID )
            // InternalRdfPatternLanguage.g:8701:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalRdfPatternLanguage.g:8711:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalRdfPatternLanguage.g:8711:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalRdfPatternLanguage.g:8712:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalRdfPatternLanguage.g:8718:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8724:2: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalRdfPatternLanguage.g:8725:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalRdfPatternLanguage.g:8725:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalRdfPatternLanguage.g:8726:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,89,FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalRdfPatternLanguage.g:8730:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt140=3;
            alt140 = dfa140.predict(input);
            switch (alt140) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8731:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalRdfPatternLanguage.g:8731:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalRdfPatternLanguage.g:8732:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalRdfPatternLanguage.g:8732:5: ( (lv_static_1_0= 'static' ) )
                    // InternalRdfPatternLanguage.g:8733:6: (lv_static_1_0= 'static' )
                    {
                    // InternalRdfPatternLanguage.g:8733:6: (lv_static_1_0= 'static' )
                    // InternalRdfPatternLanguage.g:8734:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,88,FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:8746:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==90) ) {
                        alt138=1;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:8747:6: (lv_extension_2_0= 'extension' )
                            {
                            // InternalRdfPatternLanguage.g:8747:6: (lv_extension_2_0= 'extension' )
                            // InternalRdfPatternLanguage.g:8748:7: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,90,FOLLOW_105); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", true, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalRdfPatternLanguage.g:8760:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalRdfPatternLanguage.g:8761:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalRdfPatternLanguage.g:8761:6: ( ruleQualifiedNameInStaticImport )
                    // InternalRdfPatternLanguage.g:8762:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_106);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalRdfPatternLanguage.g:8776:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==37) ) {
                        alt139=1;
                    }
                    else if ( (LA139_0==RULE_ID) ) {
                        alt139=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 139, 0, input);

                        throw nvae;
                    }
                    switch (alt139) {
                        case 1 :
                            // InternalRdfPatternLanguage.g:8777:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalRdfPatternLanguage.g:8777:6: ( (lv_wildcard_4_0= '*' ) )
                            // InternalRdfPatternLanguage.g:8778:7: (lv_wildcard_4_0= '*' )
                            {
                            // InternalRdfPatternLanguage.g:8778:7: (lv_wildcard_4_0= '*' )
                            // InternalRdfPatternLanguage.g:8779:8: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,37,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalRdfPatternLanguage.g:8792:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalRdfPatternLanguage.g:8792:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalRdfPatternLanguage.g:8793:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalRdfPatternLanguage.g:8793:7: (lv_memberName_5_0= ruleValidID )
                            // InternalRdfPatternLanguage.g:8794:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_107);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:8814:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalRdfPatternLanguage.g:8814:4: ( ( ruleQualifiedName ) )
                    // InternalRdfPatternLanguage.g:8815:5: ( ruleQualifiedName )
                    {
                    // InternalRdfPatternLanguage.g:8815:5: ( ruleQualifiedName )
                    // InternalRdfPatternLanguage.g:8816:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_107);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalRdfPatternLanguage.g:8831:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalRdfPatternLanguage.g:8831:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalRdfPatternLanguage.g:8832:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalRdfPatternLanguage.g:8832:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalRdfPatternLanguage.g:8833:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_107);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalRdfPatternLanguage.g:8851:3: (otherlv_8= ';' )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==29) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8852:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalRdfPatternLanguage.g:8861:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalRdfPatternLanguage.g:8861:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalRdfPatternLanguage.g:8862:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalRdfPatternLanguage.g:8868:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8874:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalRdfPatternLanguage.g:8875:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalRdfPatternLanguage.g:8875:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt142=0;
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==RULE_ID) ) {
                    int LA142_2 = input.LA(2);

                    if ( (LA142_2==34) ) {
                        alt142=1;
                    }


                }


                switch (alt142) {
            	case 1 :
            	    // InternalRdfPatternLanguage.g:8876:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_32);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,34,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt142 >= 1 ) break loop142;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(142, input);
                        throw eee;
                }
                cnt142++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleCompareFeature"
    // InternalRdfPatternLanguage.g:8895:1: ruleCompareFeature returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) ) ;
    public final Enumerator ruleCompareFeature() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalRdfPatternLanguage.g:8901:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) ) )
            // InternalRdfPatternLanguage.g:8902:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) )
            {
            // InternalRdfPatternLanguage.g:8902:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '!=' ) )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==55) ) {
                alt143=1;
            }
            else if ( (LA143_0==56) ) {
                alt143=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // InternalRdfPatternLanguage.g:8903:3: (enumLiteral_0= '==' )
                    {
                    // InternalRdfPatternLanguage.g:8903:3: (enumLiteral_0= '==' )
                    // InternalRdfPatternLanguage.g:8904:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareFeatureAccess().getEqualityEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareFeatureAccess().getEqualityEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalRdfPatternLanguage.g:8911:3: (enumLiteral_1= '!=' )
                    {
                    // InternalRdfPatternLanguage.g:8911:3: (enumLiteral_1= '!=' )
                    // InternalRdfPatternLanguage.g:8912:4: enumLiteral_1= '!='
                    {
                    enumLiteral_1=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareFeatureAccess().getInequalityEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareFeatureAccess().getInequalityEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareFeature"

    // $ANTLR start synpred1_InternalRdfPatternLanguage
    public final void synpred1_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:2716:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalRdfPatternLanguage.g:2716:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalRdfPatternLanguage.g:2716:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalRdfPatternLanguage.g:2717:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalRdfPatternLanguage.g:2717:7: ()
        // InternalRdfPatternLanguage.g:2718:7: 
        {
        }

        // InternalRdfPatternLanguage.g:2719:7: ( ( ruleOpMultiAssign ) )
        // InternalRdfPatternLanguage.g:2720:8: ( ruleOpMultiAssign )
        {
        // InternalRdfPatternLanguage.g:2720:8: ( ruleOpMultiAssign )
        // InternalRdfPatternLanguage.g:2721:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalRdfPatternLanguage

    // $ANTLR start synpred2_InternalRdfPatternLanguage
    public final void synpred2_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:2910:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalRdfPatternLanguage.g:2910:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalRdfPatternLanguage.g:2910:6: ( () ( ( ruleOpOr ) ) )
        // InternalRdfPatternLanguage.g:2911:6: () ( ( ruleOpOr ) )
        {
        // InternalRdfPatternLanguage.g:2911:6: ()
        // InternalRdfPatternLanguage.g:2912:6: 
        {
        }

        // InternalRdfPatternLanguage.g:2913:6: ( ( ruleOpOr ) )
        // InternalRdfPatternLanguage.g:2914:7: ( ruleOpOr )
        {
        // InternalRdfPatternLanguage.g:2914:7: ( ruleOpOr )
        // InternalRdfPatternLanguage.g:2915:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalRdfPatternLanguage

    // $ANTLR start synpred3_InternalRdfPatternLanguage
    public final void synpred3_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3017:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalRdfPatternLanguage.g:3017:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalRdfPatternLanguage.g:3017:6: ( () ( ( ruleOpAnd ) ) )
        // InternalRdfPatternLanguage.g:3018:6: () ( ( ruleOpAnd ) )
        {
        // InternalRdfPatternLanguage.g:3018:6: ()
        // InternalRdfPatternLanguage.g:3019:6: 
        {
        }

        // InternalRdfPatternLanguage.g:3020:6: ( ( ruleOpAnd ) )
        // InternalRdfPatternLanguage.g:3021:7: ( ruleOpAnd )
        {
        // InternalRdfPatternLanguage.g:3021:7: ( ruleOpAnd )
        // InternalRdfPatternLanguage.g:3022:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalRdfPatternLanguage

    // $ANTLR start synpred4_InternalRdfPatternLanguage
    public final void synpred4_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3124:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalRdfPatternLanguage.g:3124:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalRdfPatternLanguage.g:3124:6: ( () ( ( ruleOpEquality ) ) )
        // InternalRdfPatternLanguage.g:3125:6: () ( ( ruleOpEquality ) )
        {
        // InternalRdfPatternLanguage.g:3125:6: ()
        // InternalRdfPatternLanguage.g:3126:6: 
        {
        }

        // InternalRdfPatternLanguage.g:3127:6: ( ( ruleOpEquality ) )
        // InternalRdfPatternLanguage.g:3128:7: ( ruleOpEquality )
        {
        // InternalRdfPatternLanguage.g:3128:7: ( ruleOpEquality )
        // InternalRdfPatternLanguage.g:3129:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalRdfPatternLanguage

    // $ANTLR start synpred5_InternalRdfPatternLanguage
    public final void synpred5_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3252:6: ( ( () 'instanceof' ) )
        // InternalRdfPatternLanguage.g:3252:7: ( () 'instanceof' )
        {
        // InternalRdfPatternLanguage.g:3252:7: ( () 'instanceof' )
        // InternalRdfPatternLanguage.g:3253:7: () 'instanceof'
        {
        // InternalRdfPatternLanguage.g:3253:7: ()
        // InternalRdfPatternLanguage.g:3254:7: 
        {
        }

        match(input,59,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalRdfPatternLanguage

    // $ANTLR start synpred6_InternalRdfPatternLanguage
    public final void synpred6_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3295:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalRdfPatternLanguage.g:3295:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalRdfPatternLanguage.g:3295:7: ( () ( ( ruleOpCompare ) ) )
        // InternalRdfPatternLanguage.g:3296:7: () ( ( ruleOpCompare ) )
        {
        // InternalRdfPatternLanguage.g:3296:7: ()
        // InternalRdfPatternLanguage.g:3297:7: 
        {
        }

        // InternalRdfPatternLanguage.g:3298:7: ( ( ruleOpCompare ) )
        // InternalRdfPatternLanguage.g:3299:8: ( ruleOpCompare )
        {
        // InternalRdfPatternLanguage.g:3299:8: ( ruleOpCompare )
        // InternalRdfPatternLanguage.g:3300:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalRdfPatternLanguage

    // $ANTLR start synpred7_InternalRdfPatternLanguage
    public final void synpred7_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3430:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalRdfPatternLanguage.g:3430:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalRdfPatternLanguage.g:3430:6: ( () ( ( ruleOpOther ) ) )
        // InternalRdfPatternLanguage.g:3431:6: () ( ( ruleOpOther ) )
        {
        // InternalRdfPatternLanguage.g:3431:6: ()
        // InternalRdfPatternLanguage.g:3432:6: 
        {
        }

        // InternalRdfPatternLanguage.g:3433:6: ( ( ruleOpOther ) )
        // InternalRdfPatternLanguage.g:3434:7: ( ruleOpOther )
        {
        // InternalRdfPatternLanguage.g:3434:7: ( ruleOpOther )
        // InternalRdfPatternLanguage.g:3435:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalRdfPatternLanguage

    // $ANTLR start synpred8_InternalRdfPatternLanguage
    public final void synpred8_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3550:6: ( ( '>' '>' ) )
        // InternalRdfPatternLanguage.g:3550:7: ( '>' '>' )
        {
        // InternalRdfPatternLanguage.g:3550:7: ( '>' '>' )
        // InternalRdfPatternLanguage.g:3551:7: '>' '>'
        {
        match(input,51,FOLLOW_51); if (state.failed) return ;
        match(input,51,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalRdfPatternLanguage

    // $ANTLR start synpred9_InternalRdfPatternLanguage
    public final void synpred9_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3585:6: ( ( '<' '<' ) )
        // InternalRdfPatternLanguage.g:3585:7: ( '<' '<' )
        {
        // InternalRdfPatternLanguage.g:3585:7: ( '<' '<' )
        // InternalRdfPatternLanguage.g:3586:7: '<' '<'
        {
        match(input,50,FOLLOW_41); if (state.failed) return ;
        match(input,50,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalRdfPatternLanguage

    // $ANTLR start synpred10_InternalRdfPatternLanguage
    public final void synpred10_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3658:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalRdfPatternLanguage.g:3658:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalRdfPatternLanguage.g:3658:6: ( () ( ( ruleOpAdd ) ) )
        // InternalRdfPatternLanguage.g:3659:6: () ( ( ruleOpAdd ) )
        {
        // InternalRdfPatternLanguage.g:3659:6: ()
        // InternalRdfPatternLanguage.g:3660:6: 
        {
        }

        // InternalRdfPatternLanguage.g:3661:6: ( ( ruleOpAdd ) )
        // InternalRdfPatternLanguage.g:3662:7: ( ruleOpAdd )
        {
        // InternalRdfPatternLanguage.g:3662:7: ( ruleOpAdd )
        // InternalRdfPatternLanguage.g:3663:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalRdfPatternLanguage

    // $ANTLR start synpred11_InternalRdfPatternLanguage
    public final void synpred11_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:3773:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalRdfPatternLanguage.g:3773:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalRdfPatternLanguage.g:3773:6: ( () ( ( ruleOpMulti ) ) )
        // InternalRdfPatternLanguage.g:3774:6: () ( ( ruleOpMulti ) )
        {
        // InternalRdfPatternLanguage.g:3774:6: ()
        // InternalRdfPatternLanguage.g:3775:6: 
        {
        }

        // InternalRdfPatternLanguage.g:3776:6: ( ( ruleOpMulti ) )
        // InternalRdfPatternLanguage.g:3777:7: ( ruleOpMulti )
        {
        // InternalRdfPatternLanguage.g:3777:7: ( ruleOpMulti )
        // InternalRdfPatternLanguage.g:3778:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalRdfPatternLanguage

    // $ANTLR start synpred12_InternalRdfPatternLanguage
    public final void synpred12_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4008:5: ( ( () 'as' ) )
        // InternalRdfPatternLanguage.g:4008:6: ( () 'as' )
        {
        // InternalRdfPatternLanguage.g:4008:6: ( () 'as' )
        // InternalRdfPatternLanguage.g:4009:6: () 'as'
        {
        // InternalRdfPatternLanguage.g:4009:6: ()
        // InternalRdfPatternLanguage.g:4010:6: 
        {
        }

        match(input,70,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalRdfPatternLanguage

    // $ANTLR start synpred13_InternalRdfPatternLanguage
    public final void synpred13_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4076:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalRdfPatternLanguage.g:4076:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalRdfPatternLanguage.g:4076:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalRdfPatternLanguage.g:4077:5: () ( ( ruleOpPostfix ) )
        {
        // InternalRdfPatternLanguage.g:4077:5: ()
        // InternalRdfPatternLanguage.g:4078:5: 
        {
        }

        // InternalRdfPatternLanguage.g:4079:5: ( ( ruleOpPostfix ) )
        // InternalRdfPatternLanguage.g:4080:6: ( ruleOpPostfix )
        {
        // InternalRdfPatternLanguage.g:4080:6: ( ruleOpPostfix )
        // InternalRdfPatternLanguage.g:4081:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalRdfPatternLanguage

    // $ANTLR start synpred14_InternalRdfPatternLanguage
    public final void synpred14_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4172:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalRdfPatternLanguage.g:4172:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalRdfPatternLanguage.g:4172:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalRdfPatternLanguage.g:4173:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalRdfPatternLanguage.g:4173:7: ()
        // InternalRdfPatternLanguage.g:4174:7: 
        {
        }

        // InternalRdfPatternLanguage.g:4175:7: ( '.' | ( ( '::' ) ) )
        int alt144=2;
        int LA144_0 = input.LA(1);

        if ( (LA144_0==34) ) {
            alt144=1;
        }
        else if ( (LA144_0==73) ) {
            alt144=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 144, 0, input);

            throw nvae;
        }
        switch (alt144) {
            case 1 :
                // InternalRdfPatternLanguage.g:4176:8: '.'
                {
                match(input,34,FOLLOW_58); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalRdfPatternLanguage.g:4178:8: ( ( '::' ) )
                {
                // InternalRdfPatternLanguage.g:4178:8: ( ( '::' ) )
                // InternalRdfPatternLanguage.g:4179:9: ( '::' )
                {
                // InternalRdfPatternLanguage.g:4179:9: ( '::' )
                // InternalRdfPatternLanguage.g:4180:10: '::'
                {
                match(input,73,FOLLOW_58); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalRdfPatternLanguage.g:4184:7: ( ( ruleFeatureCallID ) )
        // InternalRdfPatternLanguage.g:4185:8: ( ruleFeatureCallID )
        {
        // InternalRdfPatternLanguage.g:4185:8: ( ruleFeatureCallID )
        // InternalRdfPatternLanguage.g:4186:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_23);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalRdfPatternLanguage

    // $ANTLR start synpred15_InternalRdfPatternLanguage
    public final void synpred15_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4269:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalRdfPatternLanguage.g:4269:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalRdfPatternLanguage.g:4269:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalRdfPatternLanguage.g:4270:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalRdfPatternLanguage.g:4270:7: ()
        // InternalRdfPatternLanguage.g:4271:7: 
        {
        }

        // InternalRdfPatternLanguage.g:4272:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt145=3;
        switch ( input.LA(1) ) {
        case 34:
            {
            alt145=1;
            }
            break;
        case 74:
            {
            alt145=2;
            }
            break;
        case 73:
            {
            alt145=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 145, 0, input);

            throw nvae;
        }

        switch (alt145) {
            case 1 :
                // InternalRdfPatternLanguage.g:4273:8: '.'
                {
                match(input,34,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalRdfPatternLanguage.g:4275:8: ( ( '?.' ) )
                {
                // InternalRdfPatternLanguage.g:4275:8: ( ( '?.' ) )
                // InternalRdfPatternLanguage.g:4276:9: ( '?.' )
                {
                // InternalRdfPatternLanguage.g:4276:9: ( '?.' )
                // InternalRdfPatternLanguage.g:4277:10: '?.'
                {
                match(input,74,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalRdfPatternLanguage.g:4281:8: ( ( '::' ) )
                {
                // InternalRdfPatternLanguage.g:4281:8: ( ( '::' ) )
                // InternalRdfPatternLanguage.g:4282:9: ( '::' )
                {
                // InternalRdfPatternLanguage.g:4282:9: ( '::' )
                // InternalRdfPatternLanguage.g:4283:10: '::'
                {
                match(input,73,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalRdfPatternLanguage

    // $ANTLR start synpred16_InternalRdfPatternLanguage
    public final void synpred16_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4407:7: ( ( '(' ) )
        // InternalRdfPatternLanguage.g:4407:8: ( '(' )
        {
        // InternalRdfPatternLanguage.g:4407:8: ( '(' )
        // InternalRdfPatternLanguage.g:4408:8: '('
        {
        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalRdfPatternLanguage

    // $ANTLR start synpred17_InternalRdfPatternLanguage
    public final void synpred17_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4426:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalRdfPatternLanguage.g:4426:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalRdfPatternLanguage.g:4426:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalRdfPatternLanguage.g:4427:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalRdfPatternLanguage.g:4427:9: ()
        // InternalRdfPatternLanguage.g:4428:9: 
        {
        }

        // InternalRdfPatternLanguage.g:4429:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt147=2;
        int LA147_0 = input.LA(1);

        if ( (LA147_0==RULE_ID||LA147_0==18||LA147_0==63) ) {
            alt147=1;
        }
        switch (alt147) {
            case 1 :
                // InternalRdfPatternLanguage.g:4430:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalRdfPatternLanguage.g:4430:10: ( ( ruleJvmFormalParameter ) )
                // InternalRdfPatternLanguage.g:4431:11: ( ruleJvmFormalParameter )
                {
                // InternalRdfPatternLanguage.g:4431:11: ( ruleJvmFormalParameter )
                // InternalRdfPatternLanguage.g:4432:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_70);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalRdfPatternLanguage.g:4435:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop146:
                do {
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( (LA146_0==20) ) {
                        alt146=1;
                    }


                    switch (alt146) {
                	case 1 :
                	    // InternalRdfPatternLanguage.g:4436:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_48); if (state.failed) return ;
                	    // InternalRdfPatternLanguage.g:4437:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalRdfPatternLanguage.g:4438:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalRdfPatternLanguage.g:4438:12: ( ruleJvmFormalParameter )
                	    // InternalRdfPatternLanguage.g:4439:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_70);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop146;
                    }
                } while (true);


                }
                break;

        }

        // InternalRdfPatternLanguage.g:4444:9: ( ( '|' ) )
        // InternalRdfPatternLanguage.g:4445:10: ( '|' )
        {
        // InternalRdfPatternLanguage.g:4445:10: ( '|' )
        // InternalRdfPatternLanguage.g:4446:11: '|'
        {
        match(input,76,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalRdfPatternLanguage

    // $ANTLR start synpred18_InternalRdfPatternLanguage
    public final void synpred18_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4523:6: ( ( () '[' ) )
        // InternalRdfPatternLanguage.g:4523:7: ( () '[' )
        {
        // InternalRdfPatternLanguage.g:4523:7: ( () '[' )
        // InternalRdfPatternLanguage.g:4524:7: () '['
        {
        // InternalRdfPatternLanguage.g:4524:7: ()
        // InternalRdfPatternLanguage.g:4525:7: 
        {
        }

        match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalRdfPatternLanguage

    // $ANTLR start synpred19_InternalRdfPatternLanguage
    public final void synpred19_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4596:4: ( ( () 'synchronized' '(' ) )
        // InternalRdfPatternLanguage.g:4596:5: ( () 'synchronized' '(' )
        {
        // InternalRdfPatternLanguage.g:4596:5: ( () 'synchronized' '(' )
        // InternalRdfPatternLanguage.g:4597:5: () 'synchronized' '('
        {
        // InternalRdfPatternLanguage.g:4597:5: ()
        // InternalRdfPatternLanguage.g:4598:5: 
        {
        }

        match(input,99,FOLLOW_9); if (state.failed) return ;
        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalRdfPatternLanguage

    // $ANTLR start synpred20_InternalRdfPatternLanguage
    public final void synpred20_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4641:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalRdfPatternLanguage.g:4641:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalRdfPatternLanguage.g:4641:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalRdfPatternLanguage.g:4642:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalRdfPatternLanguage.g:4642:5: ()
        // InternalRdfPatternLanguage.g:4643:5: 
        {
        }

        match(input,82,FOLLOW_9); if (state.failed) return ;
        match(input,18,FOLLOW_48); if (state.failed) return ;
        // InternalRdfPatternLanguage.g:4646:5: ( ( ruleJvmFormalParameter ) )
        // InternalRdfPatternLanguage.g:4647:6: ( ruleJvmFormalParameter )
        {
        // InternalRdfPatternLanguage.g:4647:6: ( ruleJvmFormalParameter )
        // InternalRdfPatternLanguage.g:4648:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_8);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,17,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalRdfPatternLanguage

    // $ANTLR start synpred21_InternalRdfPatternLanguage
    public final void synpred21_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:4755:4: ( ( () '[' ) )
        // InternalRdfPatternLanguage.g:4755:5: ( () '[' )
        {
        // InternalRdfPatternLanguage.g:4755:5: ( () '[' )
        // InternalRdfPatternLanguage.g:4756:5: () '['
        {
        // InternalRdfPatternLanguage.g:4756:5: ()
        // InternalRdfPatternLanguage.g:4757:5: 
        {
        }

        match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalRdfPatternLanguage

    // $ANTLR start synpred23_InternalRdfPatternLanguage
    public final void synpred23_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:5060:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalRdfPatternLanguage.g:5060:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalRdfPatternLanguage.g:5060:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalRdfPatternLanguage.g:5061:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalRdfPatternLanguage.g:5061:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt149=2;
        int LA149_0 = input.LA(1);

        if ( (LA149_0==RULE_ID||LA149_0==18||LA149_0==63) ) {
            alt149=1;
        }
        switch (alt149) {
            case 1 :
                // InternalRdfPatternLanguage.g:5062:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalRdfPatternLanguage.g:5062:6: ( ( ruleJvmFormalParameter ) )
                // InternalRdfPatternLanguage.g:5063:7: ( ruleJvmFormalParameter )
                {
                // InternalRdfPatternLanguage.g:5063:7: ( ruleJvmFormalParameter )
                // InternalRdfPatternLanguage.g:5064:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_70);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalRdfPatternLanguage.g:5067:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop148:
                do {
                    int alt148=2;
                    int LA148_0 = input.LA(1);

                    if ( (LA148_0==20) ) {
                        alt148=1;
                    }


                    switch (alt148) {
                	case 1 :
                	    // InternalRdfPatternLanguage.g:5068:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_48); if (state.failed) return ;
                	    // InternalRdfPatternLanguage.g:5069:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalRdfPatternLanguage.g:5070:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalRdfPatternLanguage.g:5070:8: ( ruleJvmFormalParameter )
                	    // InternalRdfPatternLanguage.g:5071:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_70);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop148;
                    }
                } while (true);


                }
                break;

        }

        // InternalRdfPatternLanguage.g:5076:5: ( ( '|' ) )
        // InternalRdfPatternLanguage.g:5077:6: ( '|' )
        {
        // InternalRdfPatternLanguage.g:5077:6: ( '|' )
        // InternalRdfPatternLanguage.g:5078:7: '|'
        {
        match(input,76,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalRdfPatternLanguage

    // $ANTLR start synpred25_InternalRdfPatternLanguage
    public final void synpred25_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:5469:5: ( 'else' )
        // InternalRdfPatternLanguage.g:5469:6: 'else'
        {
        match(input,78,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalRdfPatternLanguage

    // $ANTLR start synpred26_InternalRdfPatternLanguage
    public final void synpred26_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:5528:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalRdfPatternLanguage.g:5528:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalRdfPatternLanguage.g:5528:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalRdfPatternLanguage.g:5529:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,18,FOLLOW_48); if (state.failed) return ;
        // InternalRdfPatternLanguage.g:5530:7: ( ( ruleJvmFormalParameter ) )
        // InternalRdfPatternLanguage.g:5531:8: ( ruleJvmFormalParameter )
        {
        // InternalRdfPatternLanguage.g:5531:8: ( ruleJvmFormalParameter )
        // InternalRdfPatternLanguage.g:5532:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_8);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,17,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalRdfPatternLanguage

    // $ANTLR start synpred27_InternalRdfPatternLanguage
    public final void synpred27_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:5595:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalRdfPatternLanguage.g:5595:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalRdfPatternLanguage.g:5595:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalRdfPatternLanguage.g:5596:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalRdfPatternLanguage.g:5596:7: ( ( ruleJvmFormalParameter ) )
        // InternalRdfPatternLanguage.g:5597:8: ( ruleJvmFormalParameter )
        {
        // InternalRdfPatternLanguage.g:5597:8: ( ruleJvmFormalParameter )
        // InternalRdfPatternLanguage.g:5598:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_8);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,17,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalRdfPatternLanguage

    // $ANTLR start synpred29_InternalRdfPatternLanguage
    public final void synpred29_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:6413:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalRdfPatternLanguage.g:6413:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalRdfPatternLanguage.g:6413:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalRdfPatternLanguage.g:6414:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalRdfPatternLanguage.g:6414:6: ( ( ruleJvmTypeReference ) )
        // InternalRdfPatternLanguage.g:6415:7: ( ruleJvmTypeReference )
        {
        // InternalRdfPatternLanguage.g:6415:7: ( ruleJvmTypeReference )
        // InternalRdfPatternLanguage.g:6416:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_7);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalRdfPatternLanguage.g:6419:6: ( ( ruleValidID ) )
        // InternalRdfPatternLanguage.g:6420:7: ( ruleValidID )
        {
        // InternalRdfPatternLanguage.g:6420:7: ( ruleValidID )
        // InternalRdfPatternLanguage.g:6421:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalRdfPatternLanguage

    // $ANTLR start synpred30_InternalRdfPatternLanguage
    public final void synpred30_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:6725:5: ( ( '(' ) )
        // InternalRdfPatternLanguage.g:6725:6: ( '(' )
        {
        // InternalRdfPatternLanguage.g:6725:6: ( '(' )
        // InternalRdfPatternLanguage.g:6726:6: '('
        {
        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalRdfPatternLanguage

    // $ANTLR start synpred31_InternalRdfPatternLanguage
    public final void synpred31_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:6744:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalRdfPatternLanguage.g:6744:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalRdfPatternLanguage.g:6744:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalRdfPatternLanguage.g:6745:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalRdfPatternLanguage.g:6745:7: ()
        // InternalRdfPatternLanguage.g:6746:7: 
        {
        }

        // InternalRdfPatternLanguage.g:6747:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt153=2;
        int LA153_0 = input.LA(1);

        if ( (LA153_0==RULE_ID||LA153_0==18||LA153_0==63) ) {
            alt153=1;
        }
        switch (alt153) {
            case 1 :
                // InternalRdfPatternLanguage.g:6748:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalRdfPatternLanguage.g:6748:8: ( ( ruleJvmFormalParameter ) )
                // InternalRdfPatternLanguage.g:6749:9: ( ruleJvmFormalParameter )
                {
                // InternalRdfPatternLanguage.g:6749:9: ( ruleJvmFormalParameter )
                // InternalRdfPatternLanguage.g:6750:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_70);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalRdfPatternLanguage.g:6753:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop152:
                do {
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==20) ) {
                        alt152=1;
                    }


                    switch (alt152) {
                	case 1 :
                	    // InternalRdfPatternLanguage.g:6754:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_48); if (state.failed) return ;
                	    // InternalRdfPatternLanguage.g:6755:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalRdfPatternLanguage.g:6756:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalRdfPatternLanguage.g:6756:10: ( ruleJvmFormalParameter )
                	    // InternalRdfPatternLanguage.g:6757:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_70);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop152;
                    }
                } while (true);


                }
                break;

        }

        // InternalRdfPatternLanguage.g:6762:7: ( ( '|' ) )
        // InternalRdfPatternLanguage.g:6763:8: ( '|' )
        {
        // InternalRdfPatternLanguage.g:6763:8: ( '|' )
        // InternalRdfPatternLanguage.g:6764:9: '|'
        {
        match(input,76,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalRdfPatternLanguage

    // $ANTLR start synpred32_InternalRdfPatternLanguage
    public final void synpred32_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:6841:4: ( ( () '[' ) )
        // InternalRdfPatternLanguage.g:6841:5: ( () '[' )
        {
        // InternalRdfPatternLanguage.g:6841:5: ( () '[' )
        // InternalRdfPatternLanguage.g:6842:5: () '['
        {
        // InternalRdfPatternLanguage.g:6842:5: ()
        // InternalRdfPatternLanguage.g:6843:5: 
        {
        }

        match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalRdfPatternLanguage

    // $ANTLR start synpred33_InternalRdfPatternLanguage
    public final void synpred33_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7001:5: ( '<' )
        // InternalRdfPatternLanguage.g:7001:6: '<'
        {
        match(input,50,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalRdfPatternLanguage

    // $ANTLR start synpred34_InternalRdfPatternLanguage
    public final void synpred34_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7058:5: ( ( '(' ) )
        // InternalRdfPatternLanguage.g:7058:6: ( '(' )
        {
        // InternalRdfPatternLanguage.g:7058:6: ( '(' )
        // InternalRdfPatternLanguage.g:7059:6: '('
        {
        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalRdfPatternLanguage

    // $ANTLR start synpred35_InternalRdfPatternLanguage
    public final void synpred35_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7077:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalRdfPatternLanguage.g:7077:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalRdfPatternLanguage.g:7077:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalRdfPatternLanguage.g:7078:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalRdfPatternLanguage.g:7078:7: ()
        // InternalRdfPatternLanguage.g:7079:7: 
        {
        }

        // InternalRdfPatternLanguage.g:7080:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt155=2;
        int LA155_0 = input.LA(1);

        if ( (LA155_0==RULE_ID||LA155_0==18||LA155_0==63) ) {
            alt155=1;
        }
        switch (alt155) {
            case 1 :
                // InternalRdfPatternLanguage.g:7081:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalRdfPatternLanguage.g:7081:8: ( ( ruleJvmFormalParameter ) )
                // InternalRdfPatternLanguage.g:7082:9: ( ruleJvmFormalParameter )
                {
                // InternalRdfPatternLanguage.g:7082:9: ( ruleJvmFormalParameter )
                // InternalRdfPatternLanguage.g:7083:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_70);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalRdfPatternLanguage.g:7086:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop154:
                do {
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==20) ) {
                        alt154=1;
                    }


                    switch (alt154) {
                	case 1 :
                	    // InternalRdfPatternLanguage.g:7087:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_48); if (state.failed) return ;
                	    // InternalRdfPatternLanguage.g:7088:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalRdfPatternLanguage.g:7089:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalRdfPatternLanguage.g:7089:10: ( ruleJvmFormalParameter )
                	    // InternalRdfPatternLanguage.g:7090:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_70);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop154;
                    }
                } while (true);


                }
                break;

        }

        // InternalRdfPatternLanguage.g:7095:7: ( ( '|' ) )
        // InternalRdfPatternLanguage.g:7096:8: ( '|' )
        {
        // InternalRdfPatternLanguage.g:7096:8: ( '|' )
        // InternalRdfPatternLanguage.g:7097:9: '|'
        {
        match(input,76,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalRdfPatternLanguage

    // $ANTLR start synpred36_InternalRdfPatternLanguage
    public final void synpred36_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7174:4: ( ( () '[' ) )
        // InternalRdfPatternLanguage.g:7174:5: ( () '[' )
        {
        // InternalRdfPatternLanguage.g:7174:5: ( () '[' )
        // InternalRdfPatternLanguage.g:7175:5: () '['
        {
        // InternalRdfPatternLanguage.g:7175:5: ()
        // InternalRdfPatternLanguage.g:7176:5: 
        {
        }

        match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalRdfPatternLanguage

    // $ANTLR start synpred37_InternalRdfPatternLanguage
    public final void synpred37_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7517:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalRdfPatternLanguage.g:
        {
        if ( (input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING)||(input.LA(1)>=RULE_INT && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==18||input.LA(1)==28||input.LA(1)==33||input.LA(1)==35||(input.LA(1)>=38 && input.LA(1)<=40)||input.LA(1)==50||input.LA(1)==69||input.LA(1)==75||input.LA(1)==77||input.LA(1)==79||(input.LA(1)>=82 && input.LA(1)<=84)||(input.LA(1)>=87 && input.LA(1)<=97)||input.LA(1)==99 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalRdfPatternLanguage

    // $ANTLR start synpred38_InternalRdfPatternLanguage
    public final void synpred38_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7588:6: ( 'catch' )
        // InternalRdfPatternLanguage.g:7588:7: 'catch'
        {
        match(input,100,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalRdfPatternLanguage

    // $ANTLR start synpred39_InternalRdfPatternLanguage
    public final void synpred39_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7609:7: ( 'finally' )
        // InternalRdfPatternLanguage.g:7609:8: 'finally'
        {
        match(input,98,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalRdfPatternLanguage

    // $ANTLR start synpred42_InternalRdfPatternLanguage
    public final void synpred42_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7853:5: ( '.' )
        // InternalRdfPatternLanguage.g:7853:6: '.'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalRdfPatternLanguage

    // $ANTLR start synpred43_InternalRdfPatternLanguage
    public final void synpred43_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:7979:5: ( ( () ruleArrayBrackets ) )
        // InternalRdfPatternLanguage.g:7979:6: ( () ruleArrayBrackets )
        {
        // InternalRdfPatternLanguage.g:7979:6: ( () ruleArrayBrackets )
        // InternalRdfPatternLanguage.g:7980:6: () ruleArrayBrackets
        {
        // InternalRdfPatternLanguage.g:7980:6: ()
        // InternalRdfPatternLanguage.g:7981:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalRdfPatternLanguage

    // $ANTLR start synpred44_InternalRdfPatternLanguage
    public final void synpred44_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:8176:5: ( '<' )
        // InternalRdfPatternLanguage.g:8176:6: '<'
        {
        match(input,50,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalRdfPatternLanguage

    // $ANTLR start synpred45_InternalRdfPatternLanguage
    public final void synpred45_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:8232:6: ( ( () '.' ) )
        // InternalRdfPatternLanguage.g:8232:7: ( () '.' )
        {
        // InternalRdfPatternLanguage.g:8232:7: ( () '.' )
        // InternalRdfPatternLanguage.g:8233:7: () '.'
        {
        // InternalRdfPatternLanguage.g:8233:7: ()
        // InternalRdfPatternLanguage.g:8234:7: 
        {
        }

        match(input,34,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalRdfPatternLanguage

    // $ANTLR start synpred46_InternalRdfPatternLanguage
    public final void synpred46_InternalRdfPatternLanguage_fragment() throws RecognitionException {   
        // InternalRdfPatternLanguage.g:8270:7: ( '<' )
        // InternalRdfPatternLanguage.g:8270:8: '<'
        {
        match(input,50,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalRdfPatternLanguage

    // Delegated rules

    public final boolean synpred34_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalRdfPatternLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalRdfPatternLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA6 dfa6 = new DFA6(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA133 dfa133 = new DFA133(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA140 dfa140 = new DFA140(this);
    static final String dfa_1s = "\15\uffff";
    static final String dfa_2s = "\1\4\2\uffff\1\22\1\21\1\22\1\uffff\2\4\1\uffff\1\21\1\22\1\uffff";
    static final String dfa_3s = "\1\54\2\uffff\3\70\1\uffff\1\54\1\4\1\uffff\1\24\1\70\1\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\3\uffff\1\5\2\uffff\1\4\2\uffff\1\3";
    static final String dfa_5s = "\15\uffff}>";
    static final String[] dfa_6s = {
            "\1\4\1\3\1\5\1\2\15\uffff\1\6\11\uffff\2\1\5\uffff\5\2\1\uffff\1\2",
            "",
            "",
            "\1\7\3\uffff\2\2\37\uffff\2\2",
            "\1\10\45\uffff\2\2",
            "\1\7\44\uffff\2\2",
            "",
            "\1\12\3\11\36\uffff\5\11\1\uffff\1\11",
            "\1\13",
            "",
            "\1\11\1\uffff\1\14\1\11",
            "\1\7\44\uffff\2\2",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "404:2: (this_PatternCompositionConstraint_0= rulePatternCompositionConstraint | this_CompareConstraint_1= ruleCompareConstraint | this_RdfClassConstraint_2= ruleRdfClassConstraint | this_RdfPropertyConstraint_3= ruleRdfPropertyConstraint | this_RdfCheckConstraint_4= ruleRdfCheckConstraint )";
        }
    }
    static final String dfa_7s = "\12\uffff";
    static final String dfa_8s = "\2\uffff\1\6\1\10\6\uffff";
    static final String dfa_9s = "\1\4\1\7\2\23\6\uffff";
    static final String dfa_10s = "\1\52\1\7\2\70\6\uffff";
    static final String dfa_11s = "\4\uffff\1\4\1\6\1\1\1\2\1\3\1\5";
    static final String dfa_12s = "\12\uffff}>";
    static final String[] dfa_13s = {
            "\1\5\1\3\1\5\1\2\36\uffff\1\1\4\4",
            "\1\2",
            "\2\6\10\uffff\2\6\3\uffff\1\7\24\uffff\2\6",
            "\2\10\1\uffff\2\11\5\uffff\2\10\30\uffff\2\10",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "785:2: (this_IntValue_0= ruleIntValue | this_DoubleValue_1= ruleDoubleValue | this_StringValue_2= ruleStringValue | this_BoolValue_3= ruleBoolValue | this_RdfLiteral_4= ruleRdfLiteral | this_Iri_5= ruleIri )";
        }
    }
    static final String dfa_14s = "\1\10\11\uffff";
    static final String dfa_15s = "\1\4\7\0\2\uffff";
    static final String dfa_16s = "\1\144\7\0\2\uffff";
    static final String dfa_17s = "\10\uffff\1\2\1\1";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\6\1\5\2\uffff}>";
    static final String[] dfa_19s = {
            "\2\10\1\uffff\3\10\7\uffff\4\10\7\uffff\3\10\2\uffff\10\10\4\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\30\10\1\uffff\30\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_7;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2714:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_2 = input.LA(1);

                         
                        int index33_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_3 = input.LA(1);

                         
                        int index33_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA33_4 = input.LA(1);

                         
                        int index33_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA33_5 = input.LA(1);

                         
                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA33_7 = input.LA(1);

                         
                        int index33_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA33_6 = input.LA(1);

                         
                        int index33_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalRdfPatternLanguage()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\13\uffff";
    static final String dfa_21s = "\1\1\12\uffff";
    static final String dfa_22s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_23s = "\1\144\1\uffff\10\0\1\uffff";
    static final String dfa_24s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_25s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\6\1\0\1\1\1\uffff}>";
    static final String[] dfa_26s = {
            "\2\1\1\uffff\3\1\7\uffff\4\1\7\uffff\3\1\2\uffff\10\1\4\uffff\5\1\1\2\1\3\10\1\1\4\1\5\1\6\1\7\1\10\1\11\12\1\1\uffff\30\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "()* loopback of 3428:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_2 = input.LA(1);

                         
                        int index43_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_6 = input.LA(1);

                         
                        int index43_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalRdfPatternLanguage()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\1\62\2\uffff\1\63\7\uffff";
    static final String dfa_28s = "\1\101\2\uffff\1\76\7\uffff";
    static final String dfa_29s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_30s = "\13\uffff}>";
    static final String[] dfa_31s = {
            "\1\6\1\3\10\uffff\1\1\1\2\1\4\1\5\1\7\1\10",
            "",
            "",
            "\1\12\12\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "3504:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_32s = "\116\uffff";
    static final String dfa_33s = "\1\2\115\uffff";
    static final String dfa_34s = "\1\4\1\0\114\uffff";
    static final String dfa_35s = "\1\144\1\0\114\uffff";
    static final String dfa_36s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_37s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_38s = {
            "\2\2\1\uffff\3\2\7\uffff\1\2\1\1\2\2\7\uffff\3\2\2\uffff\10\2\4\uffff\37\2\1\uffff\30\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "4405:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\44\uffff";
    static final String dfa_40s = "\1\4\2\0\41\uffff";
    static final String dfa_41s = "\1\143\2\0\41\uffff";
    static final String dfa_42s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_43s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_44s = {
            "\1\1\1\5\1\uffff\3\5\10\uffff\1\2\1\43\10\uffff\1\5\4\uffff\1\5\1\uffff\1\5\2\uffff\3\5\11\uffff\1\5\14\uffff\1\3\5\uffff\1\5\5\uffff\1\5\1\4\1\5\1\uffff\1\5\2\uffff\3\5\2\uffff\13\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "4424:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_0 = input.LA(1);

                         
                        int index61_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_0==RULE_ID) ) {s = 1;}

                        else if ( (LA61_0==18) ) {s = 2;}

                        else if ( (LA61_0==63) && (synpred17_InternalRdfPatternLanguage())) {s = 3;}

                        else if ( (LA61_0==76) && (synpred17_InternalRdfPatternLanguage())) {s = 4;}

                        else if ( (LA61_0==RULE_STRING||(LA61_0>=RULE_INT && LA61_0<=RULE_DECIMAL)||LA61_0==28||LA61_0==33||LA61_0==35||(LA61_0>=38 && LA61_0<=40)||LA61_0==50||LA61_0==69||LA61_0==75||LA61_0==77||LA61_0==79||(LA61_0>=82 && LA61_0<=84)||(LA61_0>=87 && LA61_0<=97)||LA61_0==99) ) {s = 5;}

                        else if ( (LA61_0==19) ) {s = 35;}

                         
                        input.seek(index61_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_2 = input.LA(1);

                         
                        int index61_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index61_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_45s = {
            "\2\2\1\uffff\3\2\7\uffff\4\2\7\uffff\3\2\2\uffff\2\2\1\1\5\2\4\uffff\37\2\1\uffff\30\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4522:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_1 = input.LA(1);

                         
                        int index63_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index63_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\40\uffff";
    static final String dfa_47s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_48s = "\1\143\26\uffff\1\0\10\uffff";
    static final String dfa_49s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_50s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_51s = {
            "\1\5\1\14\1\uffff\3\14\10\uffff\1\35\11\uffff\1\2\6\uffff\1\14\3\uffff\2\14\11\uffff\1\5\30\uffff\1\14\1\uffff\1\26\1\uffff\1\3\2\uffff\1\27\1\30\1\31\2\uffff\5\5\1\1\2\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "4567:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_0==92) ) {s = 1;}

                        else if ( (LA65_0==28) ) {s = 2;}

                        else if ( (LA65_0==79) ) {s = 3;}

                        else if ( (LA65_0==99) && (synpred19_InternalRdfPatternLanguage())) {s = 4;}

                        else if ( (LA65_0==RULE_ID||LA65_0==50||(LA65_0>=87 && LA65_0<=91)) ) {s = 5;}

                        else if ( (LA65_0==RULE_STRING||(LA65_0>=RULE_INT && LA65_0<=RULE_DECIMAL)||LA65_0==35||(LA65_0>=39 && LA65_0<=40)||LA65_0==75||(LA65_0>=93 && LA65_0<=94)) ) {s = 12;}

                        else if ( (LA65_0==77) ) {s = 22;}

                        else if ( (LA65_0==82) ) {s = 23;}

                        else if ( (LA65_0==83) ) {s = 24;}

                        else if ( (LA65_0==84) ) {s = 25;}

                        else if ( (LA65_0==95) ) {s = 26;}

                        else if ( (LA65_0==96) ) {s = 27;}

                        else if ( (LA65_0==97) ) {s = 28;}

                        else if ( (LA65_0==18) ) {s = 29;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_23 = input.LA(1);

                         
                        int index65_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalRdfPatternLanguage()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index65_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\46\uffff";
    static final String dfa_53s = "\1\4\2\0\43\uffff";
    static final String dfa_54s = "\1\143\2\0\43\uffff";
    static final String dfa_55s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_56s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_57s = {
            "\1\1\1\5\1\uffff\3\5\10\uffff\1\2\11\uffff\1\5\4\uffff\1\5\1\uffff\2\5\1\uffff\3\5\11\uffff\1\5\14\uffff\1\3\5\uffff\1\5\5\uffff\1\5\1\4\1\5\1\uffff\1\5\2\uffff\20\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "5059:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA74_0==RULE_ID) ) {s = 1;}

                        else if ( (LA74_0==18) ) {s = 2;}

                        else if ( (LA74_0==63) && (synpred23_InternalRdfPatternLanguage())) {s = 3;}

                        else if ( (LA74_0==76) && (synpred23_InternalRdfPatternLanguage())) {s = 4;}

                        else if ( (LA74_0==RULE_STRING||(LA74_0>=RULE_INT && LA74_0<=RULE_DECIMAL)||LA74_0==28||LA74_0==33||(LA74_0>=35 && LA74_0<=36)||(LA74_0>=38 && LA74_0<=40)||LA74_0==50||LA74_0==69||LA74_0==75||LA74_0==77||LA74_0==79||(LA74_0>=82 && LA74_0<=97)||LA74_0==99) ) {s = 5;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\43\uffff";
    static final String dfa_59s = "\1\4\1\0\41\uffff";
    static final String dfa_60s = "\1\143\1\0\41\uffff";
    static final String dfa_61s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_62s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_63s = {
            "\2\2\1\uffff\3\2\10\uffff\1\1\11\uffff\1\2\4\uffff\1\2\1\uffff\1\2\2\uffff\3\2\11\uffff\1\2\14\uffff\1\2\5\uffff\1\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\3\2\2\uffff\13\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "5525:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalRdfPatternLanguage()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\42\uffff";
    static final String dfa_65s = "\1\4\2\0\37\uffff";
    static final String dfa_66s = "\1\143\2\0\37\uffff";
    static final String dfa_67s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_68s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_69s = {
            "\1\1\1\4\1\uffff\3\4\10\uffff\1\2\11\uffff\1\4\4\uffff\1\4\1\uffff\1\4\2\uffff\3\4\11\uffff\1\4\14\uffff\1\3\5\uffff\1\4\5\uffff\1\4\1\uffff\1\4\1\uffff\1\4\2\uffff\3\4\2\uffff\13\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "5594:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_0 = input.LA(1);

                         
                        int index80_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA80_0==RULE_ID) ) {s = 1;}

                        else if ( (LA80_0==18) ) {s = 2;}

                        else if ( (LA80_0==63) && (synpred27_InternalRdfPatternLanguage())) {s = 3;}

                        else if ( (LA80_0==RULE_STRING||(LA80_0>=RULE_INT && LA80_0<=RULE_DECIMAL)||LA80_0==28||LA80_0==33||LA80_0==35||(LA80_0>=38 && LA80_0<=40)||LA80_0==50||LA80_0==69||LA80_0==75||LA80_0==77||LA80_0==79||(LA80_0>=82 && LA80_0<=84)||(LA80_0>=87 && LA80_0<=97)||LA80_0==99) ) {s = 4;}

                         
                        input.seek(index80_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalRdfPatternLanguage()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_2 = input.LA(1);

                         
                        int index80_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalRdfPatternLanguage()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "6723:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_1 = input.LA(1);

                         
                        int index103_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index103_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "6742:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_0==RULE_ID) ) {s = 1;}

                        else if ( (LA102_0==18) ) {s = 2;}

                        else if ( (LA102_0==63) && (synpred31_InternalRdfPatternLanguage())) {s = 3;}

                        else if ( (LA102_0==76) && (synpred31_InternalRdfPatternLanguage())) {s = 4;}

                        else if ( (LA102_0==RULE_STRING||(LA102_0>=RULE_INT && LA102_0<=RULE_DECIMAL)||LA102_0==28||LA102_0==33||LA102_0==35||(LA102_0>=38 && LA102_0<=40)||LA102_0==50||LA102_0==69||LA102_0==75||LA102_0==77||LA102_0==79||(LA102_0>=82 && LA102_0<=84)||(LA102_0>=87 && LA102_0<=97)||LA102_0==99) ) {s = 5;}

                        else if ( (LA102_0==19) ) {s = 35;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_2 = input.LA(1);

                         
                        int index102_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index102_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "6840:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_1 = input.LA(1);

                         
                        int index104_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index104_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_70s = {
            "\2\2\1\uffff\3\2\7\uffff\4\2\7\uffff\3\2\2\uffff\10\2\4\uffff\5\2\1\1\31\2\1\uffff\30\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "6999:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_1 = input.LA(1);

                         
                        int index108_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index108_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "7056:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_1 = input.LA(1);

                         
                        int index111_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "7075:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_0 = input.LA(1);

                         
                        int index110_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA110_0==RULE_ID) ) {s = 1;}

                        else if ( (LA110_0==18) ) {s = 2;}

                        else if ( (LA110_0==63) && (synpred35_InternalRdfPatternLanguage())) {s = 3;}

                        else if ( (LA110_0==76) && (synpred35_InternalRdfPatternLanguage())) {s = 4;}

                        else if ( (LA110_0==RULE_STRING||(LA110_0>=RULE_INT && LA110_0<=RULE_DECIMAL)||LA110_0==28||LA110_0==33||LA110_0==35||(LA110_0>=38 && LA110_0<=40)||LA110_0==50||LA110_0==69||LA110_0==75||LA110_0==77||LA110_0==79||(LA110_0>=82 && LA110_0<=84)||(LA110_0>=87 && LA110_0<=97)||LA110_0==99) ) {s = 5;}

                        else if ( (LA110_0==19) ) {s = 35;}

                         
                        input.seek(index110_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA110_2 = input.LA(1);

                         
                        int index110_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalRdfPatternLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index110_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "7173:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\1\41\115\uffff";
    static final String dfa_72s = "\1\4\40\0\55\uffff";
    static final String dfa_73s = "\1\144\40\0\55\uffff";
    static final String dfa_74s = "\41\uffff\1\2\53\uffff\1\1";
    static final String dfa_75s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\55\uffff}>";
    static final String[] dfa_76s = {
            "\1\1\1\27\1\uffff\1\24\1\23\1\25\7\uffff\1\41\1\40\2\41\7\uffff\1\12\2\41\2\uffff\1\10\1\41\1\20\2\41\1\7\1\22\1\21\4\uffff\5\41\1\15\22\41\1\6\5\41\1\17\1\uffff\1\31\1\41\1\13\2\41\1\32\1\33\1\34\2\41\1\2\1\3\1\4\1\5\1\16\1\11\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_32;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "7516:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_1 = input.LA(1);

                         
                        int index115_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_2 = input.LA(1);

                         
                        int index115_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA115_3 = input.LA(1);

                         
                        int index115_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA115_4 = input.LA(1);

                         
                        int index115_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA115_5 = input.LA(1);

                         
                        int index115_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA115_6 = input.LA(1);

                         
                        int index115_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA115_7 = input.LA(1);

                         
                        int index115_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA115_8 = input.LA(1);

                         
                        int index115_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA115_9 = input.LA(1);

                         
                        int index115_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA115_10 = input.LA(1);

                         
                        int index115_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA115_11 = input.LA(1);

                         
                        int index115_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA115_12 = input.LA(1);

                         
                        int index115_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA115_13 = input.LA(1);

                         
                        int index115_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA115_14 = input.LA(1);

                         
                        int index115_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA115_15 = input.LA(1);

                         
                        int index115_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA115_16 = input.LA(1);

                         
                        int index115_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA115_17 = input.LA(1);

                         
                        int index115_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA115_18 = input.LA(1);

                         
                        int index115_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA115_19 = input.LA(1);

                         
                        int index115_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA115_20 = input.LA(1);

                         
                        int index115_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA115_21 = input.LA(1);

                         
                        int index115_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA115_22 = input.LA(1);

                         
                        int index115_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA115_23 = input.LA(1);

                         
                        int index115_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA115_24 = input.LA(1);

                         
                        int index115_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA115_25 = input.LA(1);

                         
                        int index115_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA115_26 = input.LA(1);

                         
                        int index115_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA115_27 = input.LA(1);

                         
                        int index115_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA115_28 = input.LA(1);

                         
                        int index115_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA115_29 = input.LA(1);

                         
                        int index115_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA115_30 = input.LA(1);

                         
                        int index115_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA115_31 = input.LA(1);

                         
                        int index115_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA115_32 = input.LA(1);

                         
                        int index115_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalRdfPatternLanguage()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index115_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_77s = "\117\uffff";
    static final String dfa_78s = "\1\2\116\uffff";
    static final String dfa_79s = "\1\4\1\0\115\uffff";
    static final String dfa_80s = "\1\146\1\0\115\uffff";
    static final String dfa_81s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_82s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_83s = {
            "\2\2\1\uffff\3\2\7\uffff\4\2\7\uffff\3\2\2\uffff\10\2\4\uffff\5\2\1\1\31\2\1\uffff\30\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA133 extends DFA {

        public DFA133(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 133;
            this.eot = dfa_77;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "8174:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA133_1 = input.LA(1);

                         
                        int index133_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalRdfPatternLanguage()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index133_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 133, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_77;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "8268:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalRdfPatternLanguage()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\7\uffff";
    static final String dfa_85s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_86s = "\1\4\1\uffff\1\35\1\4\1\uffff\1\35\1\uffff";
    static final String dfa_87s = "\1\130\1\uffff\1\42\1\45\1\uffff\1\42\1\uffff";
    static final String dfa_88s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_89s = "\7\uffff}>";
    static final String[] dfa_90s = {
            "\1\2\123\uffff\1\1",
            "",
            "\1\4\4\uffff\1\3",
            "\1\5\40\uffff\1\6",
            "",
            "\1\4\4\uffff\1\3",
            ""
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = dfa_84;
            this.eof = dfa_85;
            this.min = dfa_86;
            this.max = dfa_87;
            this.accept = dfa_88;
            this.special = dfa_89;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "8730:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x000000000981C002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000009810002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000009800002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x000017C0000000F0L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000C00000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x000007C0000000F0L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000009800000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000009000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000080010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000180000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000012000010L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000040002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x000017C0100000F0L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x000017C1C02000F0L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000180000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000200040000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x000017C0000800F0L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0180000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000002C00000002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002400000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000040100000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x000401CA100403B0L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x000FE00000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0018000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0780000000000002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x081C000000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x8000000000040010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0xF00C000000000002L,0x0000000000000003L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x8004000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000004200000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000002000000002L,0x000000000000001CL});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000180L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000600L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000010L,0x0000000007800000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0004000000000010L,0x000000000F800000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x8000000000040010L,0x0000002000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0008000000100000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000C00040002L,0x0000000000000600L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x800401CA100C03B0L,0x0000000BFF9CB820L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000C00000002L,0x0000000000000600L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x000401CA500403B0L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x000401DA100403B0L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000001000100000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x800401DA100403B0L,0x0000000BFFFCB820L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000100000L,0x0000000000001000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x000401DA100403B0L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x000401CA300403B2L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x000401CA100403B2L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x800401CA100403B0L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x8000000040160010L,0x0000000000030000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000120000L,0x0000000000020000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000120000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x000401CA300403B0L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000020100000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x000401CA100403B0L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x000401CA300403B0L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x000401CA100C03B0L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x000401CA500403B0L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x000401CA700403B0L,0x0000000BFFFCA820L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000800040002L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0004000800040002L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000800080000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x000401CA100403B2L,0x0000000BFF9CA820L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000001400000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x0000001400000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000280L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x80000000000C0010L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0004000400000002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000008800000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000010L,0x0000000001000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000010L,0x0000000004000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000002000000010L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000012L});

}