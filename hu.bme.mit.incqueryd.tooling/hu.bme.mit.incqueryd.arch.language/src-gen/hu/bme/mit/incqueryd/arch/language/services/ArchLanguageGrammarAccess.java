/*
* generated by Xtext
*/
package hu.bme.mit.incqueryd.arch.language.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ArchLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Configuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cClustersKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cClustersAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cClustersClusterParserRuleCall_1_3_0 = (RuleCall)cClustersAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cRecipesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cReteRecipesAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cReteRecipesReteRecipeParserRuleCall_2_3_0 = (RuleCall)cReteRecipesAssignment_2_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMappingsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMappingsAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cMappingsInfrastructureMappingParserRuleCall_3_3_0 = (RuleCall)cMappingsAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//Configuration returns arch::Configuration:
		//	{arch::Configuration} ("clusters" ":" "[" clusters+=Cluster* "]")? ("recipes" ":" "[" reteRecipes+=ReteRecipe* "]")?
		//	("mappings" ":" "[" mappings+=InfrastructureMapping* "]")?;
		public ParserRule getRule() { return rule; }

		//{arch::Configuration} ("clusters" ":" "[" clusters+=Cluster* "]")? ("recipes" ":" "[" reteRecipes+=ReteRecipe* "]")?
		//("mappings" ":" "[" mappings+=InfrastructureMapping* "]")?
		public Group getGroup() { return cGroup; }

		//{arch::Configuration}
		public Action getConfigurationAction_0() { return cConfigurationAction_0; }

		//("clusters" ":" "[" clusters+=Cluster* "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"clusters"
		public Keyword getClustersKeyword_1_0() { return cClustersKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }

		//clusters+=Cluster*
		public Assignment getClustersAssignment_1_3() { return cClustersAssignment_1_3; }

		//Cluster
		public RuleCall getClustersClusterParserRuleCall_1_3_0() { return cClustersClusterParserRuleCall_1_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }

		//("recipes" ":" "[" reteRecipes+=ReteRecipe* "]")?
		public Group getGroup_2() { return cGroup_2; }

		//"recipes"
		public Keyword getRecipesKeyword_2_0() { return cRecipesKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_2() { return cLeftSquareBracketKeyword_2_2; }

		//reteRecipes+=ReteRecipe*
		public Assignment getReteRecipesAssignment_2_3() { return cReteRecipesAssignment_2_3; }

		//ReteRecipe
		public RuleCall getReteRecipesReteRecipeParserRuleCall_2_3_0() { return cReteRecipesReteRecipeParserRuleCall_2_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_4() { return cRightSquareBracketKeyword_2_4; }

		//("mappings" ":" "[" mappings+=InfrastructureMapping* "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"mappings"
		public Keyword getMappingsKeyword_3_0() { return cMappingsKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_2() { return cLeftSquareBracketKeyword_3_2; }

		//mappings+=InfrastructureMapping*
		public Assignment getMappingsAssignment_3_3() { return cMappingsAssignment_3_3; }

		//InfrastructureMapping
		public RuleCall getMappingsInfrastructureMappingParserRuleCall_3_3_0() { return cMappingsInfrastructureMappingParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
	}

	public class ClusterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Cluster");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClusterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cReteMachinesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cReteMachinesAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cReteMachinesMachineParserRuleCall_2_3_0 = (RuleCall)cReteMachinesAssignment_2_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCacheMachinesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cCacheMachinesAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cCacheMachinesMachineParserRuleCall_3_3_0 = (RuleCall)cCacheMachinesAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Cluster returns inf::Cluster:
		//	{inf::Cluster} "{" ("reteMachines" ":" "[" reteMachines+=Machine* "]")? ("cacheMachines" ":" "["
		//	cacheMachines+=Machine* "]")? "}";
		public ParserRule getRule() { return rule; }

		//{inf::Cluster} "{" ("reteMachines" ":" "[" reteMachines+=Machine* "]")? ("cacheMachines" ":" "[" cacheMachines+=Machine*
		//"]")? "}"
		public Group getGroup() { return cGroup; }

		//{inf::Cluster}
		public Action getClusterAction_0() { return cClusterAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("reteMachines" ":" "[" reteMachines+=Machine* "]")?
		public Group getGroup_2() { return cGroup_2; }

		//"reteMachines"
		public Keyword getReteMachinesKeyword_2_0() { return cReteMachinesKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_2() { return cLeftSquareBracketKeyword_2_2; }

		//reteMachines+=Machine*
		public Assignment getReteMachinesAssignment_2_3() { return cReteMachinesAssignment_2_3; }

		//Machine
		public RuleCall getReteMachinesMachineParserRuleCall_2_3_0() { return cReteMachinesMachineParserRuleCall_2_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_4() { return cRightSquareBracketKeyword_2_4; }

		//("cacheMachines" ":" "[" cacheMachines+=Machine* "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"cacheMachines"
		public Keyword getCacheMachinesKeyword_3_0() { return cCacheMachinesKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_2() { return cLeftSquareBracketKeyword_3_2; }

		//cacheMachines+=Machine*
		public Assignment getCacheMachinesAssignment_3_3() { return cCacheMachinesAssignment_3_3; }

		//Machine
		public RuleCall getCacheMachinesMachineParserRuleCall_3_3_0() { return cCacheMachinesMachineParserRuleCall_3_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Machine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cTraceInfoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTraceInfoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_6_0 = (RuleCall)cTraceInfoAssignment_6.eContents().get(0);
		private final Keyword cIpKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cIpAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cIpIPTerminalRuleCall_9_0 = (RuleCall)cIpAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Machine returns inf::Machine:
		//	"{" "id" ":" name=ID "traceInfo" ":" traceInfo=STRING "ip" ":" ip=IP "}";
		public ParserRule getRule() { return rule; }

		//"{" "id" ":" name=ID "traceInfo" ":" traceInfo=STRING "ip" ":" ip=IP "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"id"
		public Keyword getIdKeyword_1() { return cIdKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_4() { return cTraceInfoKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_6() { return cTraceInfoAssignment_6; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_6_0() { return cTraceInfoSTRINGTerminalRuleCall_6_0; }

		//"ip"
		public Keyword getIpKeyword_7() { return cIpKeyword_7; }

		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }

		//ip=IP
		public Assignment getIpAssignment_9() { return cIpAssignment_9; }

		//IP
		public RuleCall getIpIPTerminalRuleCall_9_0() { return cIpIPTerminalRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class ReteRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReteRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReteRecipeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNodesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRecipeNodesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRecipeNodesReteNodeRecipeParserRuleCall_5_0 = (RuleCall)cRecipeNodesAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ReteRecipe returns recipes::ReteRecipe:
		//	{recipes::ReteRecipe} "{" "nodes" ":" "[" recipeNodes+=ReteNodeRecipe* "]" "}";
		public ParserRule getRule() { return rule; }

		//{recipes::ReteRecipe} "{" "nodes" ":" "[" recipeNodes+=ReteNodeRecipe* "]" "}"
		public Group getGroup() { return cGroup; }

		//{recipes::ReteRecipe}
		public Action getReteRecipeAction_0() { return cReteRecipeAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"nodes"
		public Keyword getNodesKeyword_2() { return cNodesKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//recipeNodes+=ReteNodeRecipe*
		public Assignment getRecipeNodesAssignment_5() { return cRecipeNodesAssignment_5; }

		//ReteNodeRecipe
		public RuleCall getRecipeNodesReteNodeRecipeParserRuleCall_5_0() { return cRecipeNodesReteNodeRecipeParserRuleCall_5_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ReteNodeRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReteNodeRecipe");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProductionRecipeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUniquenessEnforcerRecipeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCheckRecipeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTrimmerRecipeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cJoinRecipeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAntiJoinRecipeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ReteNodeRecipe returns recipes::ReteNodeRecipe:
		//	ProductionRecipe | UniquenessEnforcerRecipe | CheckRecipe | TrimmerRecipe | JoinRecipe | AntiJoinRecipe;
		public ParserRule getRule() { return rule; }

		//ProductionRecipe | UniquenessEnforcerRecipe | CheckRecipe | TrimmerRecipe | JoinRecipe | AntiJoinRecipe
		public Alternatives getAlternatives() { return cAlternatives; }

		//ProductionRecipe
		public RuleCall getProductionRecipeParserRuleCall_0() { return cProductionRecipeParserRuleCall_0; }

		//UniquenessEnforcerRecipe
		public RuleCall getUniquenessEnforcerRecipeParserRuleCall_1() { return cUniquenessEnforcerRecipeParserRuleCall_1; }

		//CheckRecipe
		public RuleCall getCheckRecipeParserRuleCall_2() { return cCheckRecipeParserRuleCall_2; }

		//TrimmerRecipe
		public RuleCall getTrimmerRecipeParserRuleCall_3() { return cTrimmerRecipeParserRuleCall_3; }

		//JoinRecipe
		public RuleCall getJoinRecipeParserRuleCall_4() { return cJoinRecipeParserRuleCall_4; }

		//AntiJoinRecipe
		public RuleCall getAntiJoinRecipeParserRuleCall_5() { return cAntiJoinRecipeParserRuleCall_5; }
	}

	public class ProductionRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProductionRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProductionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTraceInfoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTraceInfoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_4_0 = (RuleCall)cTraceInfoAssignment_4.eContents().get(0);
		private final Keyword cParentsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cParentsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cParentsReteNodeRecipeCrossReference_8_0 = (CrossReference)cParentsAssignment_8.eContents().get(0);
		private final RuleCall cParentsReteNodeRecipeIDTerminalRuleCall_8_0_1 = (RuleCall)cParentsReteNodeRecipeCrossReference_8_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//ProductionRecipe returns recipes::ProductionRecipe:
		//	"Production" "{" "traceInfo" ":" traceInfo=STRING "parents" ":" "[" parents+=[recipes::ReteNodeRecipe]* "]" "}";
		public ParserRule getRule() { return rule; }

		//"Production" "{" "traceInfo" ":" traceInfo=STRING "parents" ":" "[" parents+=[recipes::ReteNodeRecipe]* "]" "}"
		public Group getGroup() { return cGroup; }

		//"Production"
		public Keyword getProductionKeyword_0() { return cProductionKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_2() { return cTraceInfoKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_4() { return cTraceInfoAssignment_4; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_4_0() { return cTraceInfoSTRINGTerminalRuleCall_4_0; }

		//"parents"
		public Keyword getParentsKeyword_5() { return cParentsKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7() { return cLeftSquareBracketKeyword_7; }

		//parents+=[recipes::ReteNodeRecipe]*
		public Assignment getParentsAssignment_8() { return cParentsAssignment_8; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getParentsReteNodeRecipeCrossReference_8_0() { return cParentsReteNodeRecipeCrossReference_8_0; }

		//ID
		public RuleCall getParentsReteNodeRecipeIDTerminalRuleCall_8_0_1() { return cParentsReteNodeRecipeIDTerminalRuleCall_8_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class UniquenessEnforcerRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UniquenessEnforcerRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniquenessEnforcerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTraceInfoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTraceInfoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_4_0 = (RuleCall)cTraceInfoAssignment_4.eContents().get(0);
		private final Keyword cParentsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cParentsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cParentsReteNodeRecipeCrossReference_8_0 = (CrossReference)cParentsAssignment_8.eContents().get(0);
		private final RuleCall cParentsReteNodeRecipeIDTerminalRuleCall_8_0_1 = (RuleCall)cParentsReteNodeRecipeCrossReference_8_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//UniquenessEnforcerRecipe returns recipes::UniquenessEnforcerRecipe:
		//	"UniquenessEnforcer" "{" "traceInfo" ":" traceInfo=STRING "parents" ":" "[" parents+=[recipes::ReteNodeRecipe]* "]"
		//	"}";
		public ParserRule getRule() { return rule; }

		//"UniquenessEnforcer" "{" "traceInfo" ":" traceInfo=STRING "parents" ":" "[" parents+=[recipes::ReteNodeRecipe]* "]" "}"
		public Group getGroup() { return cGroup; }

		//"UniquenessEnforcer"
		public Keyword getUniquenessEnforcerKeyword_0() { return cUniquenessEnforcerKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_2() { return cTraceInfoKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_4() { return cTraceInfoAssignment_4; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_4_0() { return cTraceInfoSTRINGTerminalRuleCall_4_0; }

		//"parents"
		public Keyword getParentsKeyword_5() { return cParentsKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7() { return cLeftSquareBracketKeyword_7; }

		//parents+=[recipes::ReteNodeRecipe]*
		public Assignment getParentsAssignment_8() { return cParentsAssignment_8; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getParentsReteNodeRecipeCrossReference_8_0() { return cParentsReteNodeRecipeCrossReference_8_0; }

		//ID
		public RuleCall getParentsReteNodeRecipeIDTerminalRuleCall_8_0_1() { return cParentsReteNodeRecipeIDTerminalRuleCall_8_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class CheckRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CheckRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheckKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTraceInfoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTraceInfoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_4_0 = (RuleCall)cTraceInfoAssignment_4.eContents().get(0);
		private final Keyword cParentKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cParentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cParentReteNodeRecipeCrossReference_7_0 = (CrossReference)cParentAssignment_7.eContents().get(0);
		private final RuleCall cParentReteNodeRecipeIDTerminalRuleCall_7_0_1 = (RuleCall)cParentReteNodeRecipeCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//CheckRecipe returns recipes::CheckRecipe:
		//	"Check" "{" "traceInfo" ":" traceInfo=STRING "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
		public ParserRule getRule() { return rule; }

		//"Check" "{" "traceInfo" ":" traceInfo=STRING "parent" ":" parent=[recipes::ReteNodeRecipe] "}"
		public Group getGroup() { return cGroup; }

		//"Check"
		public Keyword getCheckKeyword_0() { return cCheckKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_2() { return cTraceInfoKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_4() { return cTraceInfoAssignment_4; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_4_0() { return cTraceInfoSTRINGTerminalRuleCall_4_0; }

		//"parent"
		public Keyword getParentKeyword_5() { return cParentKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//parent=[recipes::ReteNodeRecipe]
		public Assignment getParentAssignment_7() { return cParentAssignment_7; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getParentReteNodeRecipeCrossReference_7_0() { return cParentReteNodeRecipeCrossReference_7_0; }

		//ID
		public RuleCall getParentReteNodeRecipeIDTerminalRuleCall_7_0_1() { return cParentReteNodeRecipeIDTerminalRuleCall_7_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class TrimmerRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TrimmerRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTrimmerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTraceInfoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTraceInfoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_4_0 = (RuleCall)cTraceInfoAssignment_4.eContents().get(0);
		private final Keyword cMaskKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMaskAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMaskMaskParserRuleCall_7_0 = (RuleCall)cMaskAssignment_7.eContents().get(0);
		private final Keyword cParentKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cParentAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cParentReteNodeRecipeCrossReference_10_0 = (CrossReference)cParentAssignment_10.eContents().get(0);
		private final RuleCall cParentReteNodeRecipeIDTerminalRuleCall_10_0_1 = (RuleCall)cParentReteNodeRecipeCrossReference_10_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//TrimmerRecipe returns recipes::TrimmerRecipe:
		//	"Trimmer" "{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
		public ParserRule getRule() { return rule; }

		//"Trimmer" "{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}"
		public Group getGroup() { return cGroup; }

		//"Trimmer"
		public Keyword getTrimmerKeyword_0() { return cTrimmerKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_2() { return cTraceInfoKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_4() { return cTraceInfoAssignment_4; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_4_0() { return cTraceInfoSTRINGTerminalRuleCall_4_0; }

		//"mask"
		public Keyword getMaskKeyword_5() { return cMaskKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//mask=Mask
		public Assignment getMaskAssignment_7() { return cMaskAssignment_7; }

		//Mask
		public RuleCall getMaskMaskParserRuleCall_7_0() { return cMaskMaskParserRuleCall_7_0; }

		//"parent"
		public Keyword getParentKeyword_8() { return cParentKeyword_8; }

		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }

		//parent=[recipes::ReteNodeRecipe]
		public Assignment getParentAssignment_10() { return cParentAssignment_10; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getParentReteNodeRecipeCrossReference_10_0() { return cParentReteNodeRecipeCrossReference_10_0; }

		//ID
		public RuleCall getParentReteNodeRecipeIDTerminalRuleCall_10_0_1() { return cParentReteNodeRecipeIDTerminalRuleCall_10_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class JoinRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JoinRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJoinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTraceInfoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTraceInfoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_4_0 = (RuleCall)cTraceInfoAssignment_4.eContents().get(0);
		private final Keyword cLeftParentKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLeftParentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLeftParentProjectionIndexerRecipeParserRuleCall_7_0 = (RuleCall)cLeftParentAssignment_7.eContents().get(0);
		private final Keyword cRightParentKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cRightParentAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cRightParentIndexerRecipeParserRuleCall_10_0 = (RuleCall)cRightParentAssignment_10.eContents().get(0);
		private final Assignment cRightParentComplementaryMaskAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRightParentComplementaryMaskMaskParserRuleCall_11_0 = (RuleCall)cRightParentComplementaryMaskAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//JoinRecipe returns recipes::JoinRecipe:
		//	"Join" "{" "traceInfo" ":" traceInfo=STRING "leftParent" ":" leftParent=ProjectionIndexerRecipe "rightParent" ":"
		//	rightParent=IndexerRecipe rightParentComplementaryMask=Mask? "}";
		public ParserRule getRule() { return rule; }

		//"Join" "{" "traceInfo" ":" traceInfo=STRING "leftParent" ":" leftParent=ProjectionIndexerRecipe "rightParent" ":"
		//rightParent=IndexerRecipe rightParentComplementaryMask=Mask? "}"
		public Group getGroup() { return cGroup; }

		//"Join"
		public Keyword getJoinKeyword_0() { return cJoinKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_2() { return cTraceInfoKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_4() { return cTraceInfoAssignment_4; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_4_0() { return cTraceInfoSTRINGTerminalRuleCall_4_0; }

		//"leftParent"
		public Keyword getLeftParentKeyword_5() { return cLeftParentKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//leftParent=ProjectionIndexerRecipe
		public Assignment getLeftParentAssignment_7() { return cLeftParentAssignment_7; }

		//ProjectionIndexerRecipe
		public RuleCall getLeftParentProjectionIndexerRecipeParserRuleCall_7_0() { return cLeftParentProjectionIndexerRecipeParserRuleCall_7_0; }

		//"rightParent"
		public Keyword getRightParentKeyword_8() { return cRightParentKeyword_8; }

		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }

		//rightParent=IndexerRecipe
		public Assignment getRightParentAssignment_10() { return cRightParentAssignment_10; }

		//IndexerRecipe
		public RuleCall getRightParentIndexerRecipeParserRuleCall_10_0() { return cRightParentIndexerRecipeParserRuleCall_10_0; }

		//rightParentComplementaryMask=Mask?
		public Assignment getRightParentComplementaryMaskAssignment_11() { return cRightParentComplementaryMaskAssignment_11; }

		//Mask
		public RuleCall getRightParentComplementaryMaskMaskParserRuleCall_11_0() { return cRightParentComplementaryMaskMaskParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class AntiJoinRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AntiJoinRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAntiJoinKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTraceInfoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTraceInfoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_4_0 = (RuleCall)cTraceInfoAssignment_4.eContents().get(0);
		private final Keyword cLeftParentKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLeftParentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLeftParentProjectionIndexerRecipeParserRuleCall_7_0 = (RuleCall)cLeftParentAssignment_7.eContents().get(0);
		private final Keyword cRightParentKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cRightParentAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cRightParentIndexerRecipeParserRuleCall_10_0 = (RuleCall)cRightParentAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//AntiJoinRecipe returns recipes::AntiJoinRecipe:
		//	"AntiJoin" "{" "traceInfo" ":" traceInfo=STRING "leftParent" ":" leftParent=ProjectionIndexerRecipe "rightParent" ":"
		//	rightParent=IndexerRecipe "}";
		public ParserRule getRule() { return rule; }

		//"AntiJoin" "{" "traceInfo" ":" traceInfo=STRING "leftParent" ":" leftParent=ProjectionIndexerRecipe "rightParent" ":"
		//rightParent=IndexerRecipe "}"
		public Group getGroup() { return cGroup; }

		//"AntiJoin"
		public Keyword getAntiJoinKeyword_0() { return cAntiJoinKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_2() { return cTraceInfoKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_4() { return cTraceInfoAssignment_4; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_4_0() { return cTraceInfoSTRINGTerminalRuleCall_4_0; }

		//"leftParent"
		public Keyword getLeftParentKeyword_5() { return cLeftParentKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//leftParent=ProjectionIndexerRecipe
		public Assignment getLeftParentAssignment_7() { return cLeftParentAssignment_7; }

		//ProjectionIndexerRecipe
		public RuleCall getLeftParentProjectionIndexerRecipeParserRuleCall_7_0() { return cLeftParentProjectionIndexerRecipeParserRuleCall_7_0; }

		//"rightParent"
		public Keyword getRightParentKeyword_8() { return cRightParentKeyword_8; }

		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }

		//rightParent=IndexerRecipe
		public Assignment getRightParentAssignment_10() { return cRightParentAssignment_10; }

		//IndexerRecipe
		public RuleCall getRightParentIndexerRecipeParserRuleCall_10_0() { return cRightParentIndexerRecipeParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class IndexerRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndexerRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTraceInfoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTraceInfoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_3_0 = (RuleCall)cTraceInfoAssignment_3.eContents().get(0);
		private final Keyword cMaskKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMaskAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMaskMaskParserRuleCall_6_0 = (RuleCall)cMaskAssignment_6.eContents().get(0);
		private final Keyword cParentKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cParentAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cParentReteNodeRecipeCrossReference_9_0 = (CrossReference)cParentAssignment_9.eContents().get(0);
		private final RuleCall cParentReteNodeRecipeIDTerminalRuleCall_9_0_1 = (RuleCall)cParentReteNodeRecipeCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//IndexerRecipe returns recipes::IndexerRecipe:
		//	"{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
		public ParserRule getRule() { return rule; }

		//"{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_1() { return cTraceInfoKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_3() { return cTraceInfoAssignment_3; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_3_0() { return cTraceInfoSTRINGTerminalRuleCall_3_0; }

		//"mask"
		public Keyword getMaskKeyword_4() { return cMaskKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//mask=Mask
		public Assignment getMaskAssignment_6() { return cMaskAssignment_6; }

		//Mask
		public RuleCall getMaskMaskParserRuleCall_6_0() { return cMaskMaskParserRuleCall_6_0; }

		//"parent"
		public Keyword getParentKeyword_7() { return cParentKeyword_7; }

		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }

		//parent=[recipes::ReteNodeRecipe]
		public Assignment getParentAssignment_9() { return cParentAssignment_9; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getParentReteNodeRecipeCrossReference_9_0() { return cParentReteNodeRecipeCrossReference_9_0; }

		//ID
		public RuleCall getParentReteNodeRecipeIDTerminalRuleCall_9_0_1() { return cParentReteNodeRecipeIDTerminalRuleCall_9_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class ProjectionIndexerRecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProjectionIndexerRecipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTraceInfoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTraceInfoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTraceInfoSTRINGTerminalRuleCall_3_0 = (RuleCall)cTraceInfoAssignment_3.eContents().get(0);
		private final Keyword cMaskKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMaskAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMaskMaskParserRuleCall_6_0 = (RuleCall)cMaskAssignment_6.eContents().get(0);
		private final Keyword cParentKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cParentAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cParentReteNodeRecipeCrossReference_9_0 = (CrossReference)cParentAssignment_9.eContents().get(0);
		private final RuleCall cParentReteNodeRecipeIDTerminalRuleCall_9_0_1 = (RuleCall)cParentReteNodeRecipeCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//ProjectionIndexerRecipe returns recipes::ProjectionIndexerRecipe:
		//	"{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
		public ParserRule getRule() { return rule; }

		//"{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"traceInfo"
		public Keyword getTraceInfoKeyword_1() { return cTraceInfoKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//traceInfo=STRING
		public Assignment getTraceInfoAssignment_3() { return cTraceInfoAssignment_3; }

		//STRING
		public RuleCall getTraceInfoSTRINGTerminalRuleCall_3_0() { return cTraceInfoSTRINGTerminalRuleCall_3_0; }

		//"mask"
		public Keyword getMaskKeyword_4() { return cMaskKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//mask=Mask
		public Assignment getMaskAssignment_6() { return cMaskAssignment_6; }

		//Mask
		public RuleCall getMaskMaskParserRuleCall_6_0() { return cMaskMaskParserRuleCall_6_0; }

		//"parent"
		public Keyword getParentKeyword_7() { return cParentKeyword_7; }

		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }

		//parent=[recipes::ReteNodeRecipe]
		public Assignment getParentAssignment_9() { return cParentAssignment_9; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getParentReteNodeRecipeCrossReference_9_0() { return cParentReteNodeRecipeCrossReference_9_0; }

		//ID
		public RuleCall getParentReteNodeRecipeIDTerminalRuleCall_9_0_1() { return cParentReteNodeRecipeIDTerminalRuleCall_9_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class MaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSourceArityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceArityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceArityINTTerminalRuleCall_3_0 = (RuleCall)cSourceArityAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSourceIndicesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cSourceIndicesAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cSourceIndicesINTTerminalRuleCall_4_3_0 = (RuleCall)cSourceIndicesAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Mask returns recipes::Mask:
		//	"{" "sourceArity" ":" sourceArity=INT ("sourceIndices" ":" "[" sourceIndices+=INT* "]")* "}";
		public ParserRule getRule() { return rule; }

		//"{" "sourceArity" ":" sourceArity=INT ("sourceIndices" ":" "[" sourceIndices+=INT* "]")* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"sourceArity"
		public Keyword getSourceArityKeyword_1() { return cSourceArityKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//sourceArity=INT
		public Assignment getSourceArityAssignment_3() { return cSourceArityAssignment_3; }

		//INT
		public RuleCall getSourceArityINTTerminalRuleCall_3_0() { return cSourceArityINTTerminalRuleCall_3_0; }

		//("sourceIndices" ":" "[" sourceIndices+=INT* "]")*
		public Group getGroup_4() { return cGroup_4; }

		//"sourceIndices"
		public Keyword getSourceIndicesKeyword_4_0() { return cSourceIndicesKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_2() { return cLeftSquareBracketKeyword_4_2; }

		//sourceIndices+=INT*
		public Assignment getSourceIndicesAssignment_4_3() { return cSourceIndicesAssignment_4_3; }

		//INT
		public RuleCall getSourceIndicesINTTerminalRuleCall_4_3_0() { return cSourceIndicesINTTerminalRuleCall_4_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class InfrastructureMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InfrastructureMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMappedElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cMappedElementsReteNodeRecipeCrossReference_4_0 = (CrossReference)cMappedElementsAssignment_4.eContents().get(0);
		private final RuleCall cMappedElementsReteNodeRecipeIDTerminalRuleCall_4_0_1 = (RuleCall)cMappedElementsReteNodeRecipeCrossReference_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTargetElementAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cTargetElementMachineCrossReference_8_0 = (CrossReference)cTargetElementAssignment_8.eContents().get(0);
		private final RuleCall cTargetElementMachineIDTerminalRuleCall_8_0_1 = (RuleCall)cTargetElementMachineCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//InfrastructureMapping returns arch::InfrastructureMapping:
		//	"{" "from" ":" "[" mappedElements+=[recipes::ReteNodeRecipe]* "]" "to" ":" targetElement=[inf::Machine] "}";
		public ParserRule getRule() { return rule; }

		//"{" "from" ":" "[" mappedElements+=[recipes::ReteNodeRecipe]* "]" "to" ":" targetElement=[inf::Machine] "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"from"
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//mappedElements+=[recipes::ReteNodeRecipe]*
		public Assignment getMappedElementsAssignment_4() { return cMappedElementsAssignment_4; }

		//[recipes::ReteNodeRecipe]
		public CrossReference getMappedElementsReteNodeRecipeCrossReference_4_0() { return cMappedElementsReteNodeRecipeCrossReference_4_0; }

		//ID
		public RuleCall getMappedElementsReteNodeRecipeIDTerminalRuleCall_4_0_1() { return cMappedElementsReteNodeRecipeIDTerminalRuleCall_4_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }

		//"to"
		public Keyword getToKeyword_6() { return cToKeyword_6; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//targetElement=[inf::Machine]
		public Assignment getTargetElementAssignment_8() { return cTargetElementAssignment_8; }

		//[inf::Machine]
		public CrossReference getTargetElementMachineCrossReference_8_0() { return cTargetElementMachineCrossReference_8_0; }

		//ID
		public RuleCall getTargetElementMachineIDTerminalRuleCall_8_0_1() { return cTargetElementMachineIDTerminalRuleCall_8_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	
	
	private ConfigurationElements pConfiguration;
	private ClusterElements pCluster;
	private MachineElements pMachine;
	private ReteRecipeElements pReteRecipe;
	private ReteNodeRecipeElements pReteNodeRecipe;
	private ProductionRecipeElements pProductionRecipe;
	private UniquenessEnforcerRecipeElements pUniquenessEnforcerRecipe;
	private CheckRecipeElements pCheckRecipe;
	private TrimmerRecipeElements pTrimmerRecipe;
	private JoinRecipeElements pJoinRecipe;
	private AntiJoinRecipeElements pAntiJoinRecipe;
	private IndexerRecipeElements pIndexerRecipe;
	private ProjectionIndexerRecipeElements pProjectionIndexerRecipe;
	private MaskElements pMask;
	private InfrastructureMappingElements pInfrastructureMapping;
	private TerminalRule tIP;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ArchLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hu.bme.mit.incqueryd.arch.language.ArchLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Configuration returns arch::Configuration:
	//	{arch::Configuration} ("clusters" ":" "[" clusters+=Cluster* "]")? ("recipes" ":" "[" reteRecipes+=ReteRecipe* "]")?
	//	("mappings" ":" "[" mappings+=InfrastructureMapping* "]")?;
	public ConfigurationElements getConfigurationAccess() {
		return (pConfiguration != null) ? pConfiguration : (pConfiguration = new ConfigurationElements());
	}
	
	public ParserRule getConfigurationRule() {
		return getConfigurationAccess().getRule();
	}

	//Cluster returns inf::Cluster:
	//	{inf::Cluster} "{" ("reteMachines" ":" "[" reteMachines+=Machine* "]")? ("cacheMachines" ":" "["
	//	cacheMachines+=Machine* "]")? "}";
	public ClusterElements getClusterAccess() {
		return (pCluster != null) ? pCluster : (pCluster = new ClusterElements());
	}
	
	public ParserRule getClusterRule() {
		return getClusterAccess().getRule();
	}

	//Machine returns inf::Machine:
	//	"{" "id" ":" name=ID "traceInfo" ":" traceInfo=STRING "ip" ":" ip=IP "}";
	public MachineElements getMachineAccess() {
		return (pMachine != null) ? pMachine : (pMachine = new MachineElements());
	}
	
	public ParserRule getMachineRule() {
		return getMachineAccess().getRule();
	}

	//ReteRecipe returns recipes::ReteRecipe:
	//	{recipes::ReteRecipe} "{" "nodes" ":" "[" recipeNodes+=ReteNodeRecipe* "]" "}";
	public ReteRecipeElements getReteRecipeAccess() {
		return (pReteRecipe != null) ? pReteRecipe : (pReteRecipe = new ReteRecipeElements());
	}
	
	public ParserRule getReteRecipeRule() {
		return getReteRecipeAccess().getRule();
	}

	//ReteNodeRecipe returns recipes::ReteNodeRecipe:
	//	ProductionRecipe | UniquenessEnforcerRecipe | CheckRecipe | TrimmerRecipe | JoinRecipe | AntiJoinRecipe;
	public ReteNodeRecipeElements getReteNodeRecipeAccess() {
		return (pReteNodeRecipe != null) ? pReteNodeRecipe : (pReteNodeRecipe = new ReteNodeRecipeElements());
	}
	
	public ParserRule getReteNodeRecipeRule() {
		return getReteNodeRecipeAccess().getRule();
	}

	//ProductionRecipe returns recipes::ProductionRecipe:
	//	"Production" "{" "traceInfo" ":" traceInfo=STRING "parents" ":" "[" parents+=[recipes::ReteNodeRecipe]* "]" "}";
	public ProductionRecipeElements getProductionRecipeAccess() {
		return (pProductionRecipe != null) ? pProductionRecipe : (pProductionRecipe = new ProductionRecipeElements());
	}
	
	public ParserRule getProductionRecipeRule() {
		return getProductionRecipeAccess().getRule();
	}

	//UniquenessEnforcerRecipe returns recipes::UniquenessEnforcerRecipe:
	//	"UniquenessEnforcer" "{" "traceInfo" ":" traceInfo=STRING "parents" ":" "[" parents+=[recipes::ReteNodeRecipe]* "]"
	//	"}";
	public UniquenessEnforcerRecipeElements getUniquenessEnforcerRecipeAccess() {
		return (pUniquenessEnforcerRecipe != null) ? pUniquenessEnforcerRecipe : (pUniquenessEnforcerRecipe = new UniquenessEnforcerRecipeElements());
	}
	
	public ParserRule getUniquenessEnforcerRecipeRule() {
		return getUniquenessEnforcerRecipeAccess().getRule();
	}

	//CheckRecipe returns recipes::CheckRecipe:
	//	"Check" "{" "traceInfo" ":" traceInfo=STRING "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
	public CheckRecipeElements getCheckRecipeAccess() {
		return (pCheckRecipe != null) ? pCheckRecipe : (pCheckRecipe = new CheckRecipeElements());
	}
	
	public ParserRule getCheckRecipeRule() {
		return getCheckRecipeAccess().getRule();
	}

	//TrimmerRecipe returns recipes::TrimmerRecipe:
	//	"Trimmer" "{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
	public TrimmerRecipeElements getTrimmerRecipeAccess() {
		return (pTrimmerRecipe != null) ? pTrimmerRecipe : (pTrimmerRecipe = new TrimmerRecipeElements());
	}
	
	public ParserRule getTrimmerRecipeRule() {
		return getTrimmerRecipeAccess().getRule();
	}

	//JoinRecipe returns recipes::JoinRecipe:
	//	"Join" "{" "traceInfo" ":" traceInfo=STRING "leftParent" ":" leftParent=ProjectionIndexerRecipe "rightParent" ":"
	//	rightParent=IndexerRecipe rightParentComplementaryMask=Mask? "}";
	public JoinRecipeElements getJoinRecipeAccess() {
		return (pJoinRecipe != null) ? pJoinRecipe : (pJoinRecipe = new JoinRecipeElements());
	}
	
	public ParserRule getJoinRecipeRule() {
		return getJoinRecipeAccess().getRule();
	}

	//AntiJoinRecipe returns recipes::AntiJoinRecipe:
	//	"AntiJoin" "{" "traceInfo" ":" traceInfo=STRING "leftParent" ":" leftParent=ProjectionIndexerRecipe "rightParent" ":"
	//	rightParent=IndexerRecipe "}";
	public AntiJoinRecipeElements getAntiJoinRecipeAccess() {
		return (pAntiJoinRecipe != null) ? pAntiJoinRecipe : (pAntiJoinRecipe = new AntiJoinRecipeElements());
	}
	
	public ParserRule getAntiJoinRecipeRule() {
		return getAntiJoinRecipeAccess().getRule();
	}

	//IndexerRecipe returns recipes::IndexerRecipe:
	//	"{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
	public IndexerRecipeElements getIndexerRecipeAccess() {
		return (pIndexerRecipe != null) ? pIndexerRecipe : (pIndexerRecipe = new IndexerRecipeElements());
	}
	
	public ParserRule getIndexerRecipeRule() {
		return getIndexerRecipeAccess().getRule();
	}

	//ProjectionIndexerRecipe returns recipes::ProjectionIndexerRecipe:
	//	"{" "traceInfo" ":" traceInfo=STRING "mask" ":" mask=Mask "parent" ":" parent=[recipes::ReteNodeRecipe] "}";
	public ProjectionIndexerRecipeElements getProjectionIndexerRecipeAccess() {
		return (pProjectionIndexerRecipe != null) ? pProjectionIndexerRecipe : (pProjectionIndexerRecipe = new ProjectionIndexerRecipeElements());
	}
	
	public ParserRule getProjectionIndexerRecipeRule() {
		return getProjectionIndexerRecipeAccess().getRule();
	}

	//Mask returns recipes::Mask:
	//	"{" "sourceArity" ":" sourceArity=INT ("sourceIndices" ":" "[" sourceIndices+=INT* "]")* "}";
	public MaskElements getMaskAccess() {
		return (pMask != null) ? pMask : (pMask = new MaskElements());
	}
	
	public ParserRule getMaskRule() {
		return getMaskAccess().getRule();
	}

	//InfrastructureMapping returns arch::InfrastructureMapping:
	//	"{" "from" ":" "[" mappedElements+=[recipes::ReteNodeRecipe]* "]" "to" ":" targetElement=[inf::Machine] "}";
	public InfrastructureMappingElements getInfrastructureMappingAccess() {
		return (pInfrastructureMapping != null) ? pInfrastructureMapping : (pInfrastructureMapping = new InfrastructureMappingElements());
	}
	
	public ParserRule getInfrastructureMappingRule() {
		return getInfrastructureMappingAccess().getRule();
	}

	//terminal IP returns ecore::EString:
	//	INT "." INT "." INT "." INT;
	public TerminalRule getIPRule() {
		return (tIP != null) ? tIP : (tIP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IP"));
	} 

	//terminal ID returns ecore::EString:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING returns ecore::EString:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT returns ecore::EString:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT returns ecore::EString:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS returns ecore::EString:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER returns ecore::EString:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
